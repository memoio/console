{"version":3,"file":"static/js/2363.1857c803.chunk.js","mappings":"sRAkDAA,EAAAA,EAAAA,IAAa,kBACRC,EAAAA,IACAC,EAAAA,KAWL,IA4FMC,GAAYC,EAAAA,EAAAA,IAAQ,KAAM,CAC9BC,0BAAAA,EAAAA,KAGF,KAAeC,EAAAA,EAAAA,IA5HA,SAACC,GAAD,OACbP,EAAAA,EAAAA,IAAa,wBACXQ,oBAAqB,CACnBC,aAAc,GACd,UAAW,CACTA,aAAc,SAEhB,gBAAiB,CACfC,QAAS,UAGVC,EAAAA,IACAV,EAAAA,IACAC,EAAAA,OA+GP,CAAkCC,GAhGL,SAAC,GAMK,IALjCS,EAKgC,EALhCA,QACAC,EAIgC,EAJhCA,KACAC,EAGgC,EAHhCA,kBACAC,EAEgC,EAFhCA,qBACAV,EACgC,EADhCA,0BAEA,GAA8BW,EAAAA,EAAAA,WAAkB,GAAhD,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgDF,EAAAA,EAAAA,UAAiB,IAAjE,eAAOG,EAAP,KAAyBC,EAAzB,MACAC,EAAAA,EAAAA,YAAU,WACJJ,GACFK,EAAAA,EAAAA,OACU,MADV,mCAC6CR,EAD7C,YAEGS,MAAK,SAACC,GACLN,GAAW,GACXE,EAAoBI,MAErBC,OAAM,SAACC,GACNR,GAAW,GACXb,EAA0BqB,QAG/B,CAACT,EAASC,EAAYb,EAA2BS,IAgBpD,OACE,SAAC,IAAD,CACEa,MAAM,yBACNC,UAAWf,EACXgB,QAAS,WACPd,KAEFe,WAAW,SAAC,KAAD,IANb,UAQE,iBACEC,YAAU,EACVC,aAAa,MACbC,SAAU,SAACC,GA1BC,IAAyBC,EAAAA,EA2BtBhB,EAAHe,EA1BVE,iBACNd,EAAAA,EAAAA,OACU,MADV,mCAC6CR,EAD7C,WACyE,CACrEuB,OAAQF,IAETZ,MAAK,SAACC,GACLT,OAEDU,OAAM,SAACC,GACNrB,EAA0BqB,OAa5B,UAOE,UAAC,KAAD,CAAMY,WAAS,EAAf,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,UAAW7B,EAAQJ,oBAAtC,UACE,SAAC,IAAD,CACEkC,MAAK,yBACLC,MAAOxB,EACPyB,eAAgB,SAACC,EAAQC,EAAMH,GAC7BvB,EAAoBuB,IAEtBI,aAAc,aAGlB,UAAC,KAAD,CAAMR,MAAI,EAACC,GAAI,GAAIC,UAAW7B,EAAQoC,eAAtC,WACE,SAAC,IAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,MAAM,UACNC,QAAS,WACPrC,KAEFsC,SAAUpC,EAPZ,qBAWA,SAAC,IAAD,CACEgC,KAAK,SACLC,QAAQ,YACRC,MAAM,UACNE,SAAUpC,EAJZ,gC,6ICzGNqC,GAAYC,EAAAA,EAAAA,IAAW,SAAChD,GAiB5B,MAAO,CACLiD,KAAM,CACJC,QAAS,MACTN,MAAO,SAACO,GAAD,OAnBY,SAACA,GACtB,IAAQR,EAAmBQ,EAAnBR,QAASC,EAAUO,EAAVP,MAEbQ,EAAWpD,EAAMqD,QAAQC,QAAQC,KAUrC,MARc,YAAVX,GAAmC,cAAZD,EACzBS,EAAWpD,EAAMqD,QAAQC,QAAQE,aACd,YAAVZ,GAAmC,aAAZD,EAChCS,EAAWpD,EAAMqD,QAAQC,QAAQC,KACd,cAAVX,IACTQ,EAAWpD,EAAMqD,QAAQI,UAAUF,MAG9BH,EAM0BM,CAAeP,IAC9CQ,YAAa,SAACR,GAAD,MACK,cAAhBA,EAAMP,MACF5C,EAAMqD,QAAQI,UAAUF,KACxBvD,EAAMqD,QAAQC,QAAQC,MAC5B,iBAAkB,CAChBK,MAAO,GACPC,WAAY,SAACV,GAAD,OAAyBA,EAAMW,KAAO,MAAQ,OAC1D,4BAA6B,CAC3BF,MAAO,GACPC,WAAY,wBA2CtB,IApCqB,SAACV,GACpB,IAAM9C,EAAU0C,EAAUI,GAGxBN,EAMEM,EANFN,QADF,EAOIM,EALFW,KAAAA,OAFF,MAES,GAFT,IAOIX,EAJFL,SAAAA,OAHF,SAIEiB,EAGEZ,EAHFY,QAJF,EAOIZ,EAFFa,KAAAA,OALF,MAKS,KALT,EAMKC,GANL,OAOId,EAPJ,GASA,OACE,UAAC,KAAD,gBACE9C,QAASA,EACT0D,QAASA,GAAWD,EACpBnB,QAAQ,WACRE,QAASA,EACTC,SAAUA,EACVF,MAAM,YACNsB,KAAK,SACLC,GAAI,CACFC,OAAQ,oBACR,SAAU,CACRC,SAAU,GACV,4BAA6B,CAC3BlE,QAAS,WAIX8D,GAjBN,eAmBE,0BAAOH,IAnBT,IAmBuBE,Q,oLCL3B,KAAejE,EAAAA,EAAAA,IA5EA,SAACC,GAAD,OACbP,EAAAA,EAAAA,GAAa,CACXwD,KAAM,CACJC,QAAS,EACTW,WAAY,EACZS,YAAa,EACbX,YAAa,UACbf,MAAO,UACP2B,YAAa,QACbC,aAAc,EACd,cAAe,CAEbZ,MAAO,IAET,8BAA+B,CAC7Ba,gBAAiBzE,EAAMqD,QAAQC,QAAQC,KACvCiB,aAAc,EACdE,QAAS,IAEX,aAAc,CACZ9B,MAAO,UACPe,YAAa,YAGjBgB,UAAW,CACThB,YAAa3D,EAAMqD,QAAQC,QAAQC,KACnCqB,WAAY5E,EAAMqD,QAAQC,QAAQC,KAClCX,MAAO,QACP,8BAA+B,CAC7B6B,gBAAiBzE,EAAMqD,QAAQC,QAAQuB,KACvCL,aAAc,EACdE,QAAS,IAEX,UAAW,CACTD,gBAAiBzE,EAAMqD,QAAQC,QAAQwB,MACvClC,MAAO,aAyCf,EA7BsB,SAAC,GAMA,IALrBvC,EAKoB,EALpBA,QACA0E,EAIoB,EAJpBA,SAIoB,IAHpBpC,QAAAA,OAGoB,MAHV,WAGU,EAFpBoB,EAEoB,EAFpBA,QACGiB,GACiB,YACdC,GACJ,SAAC,KAAD,kBACMD,GADN,IAEE9C,WAAWgD,EAAAA,EAAAA,GAAK7E,EAAQ4C,MAAT,UACZ5C,EAAQsE,UAAwB,cAAZhC,IAHzB,SAMGoC,KAIL,OAAIhB,GAAuB,KAAZA,GAEX,SAAC,IAAD,CAAS3C,MAAO2C,EAAhB,UACE,0BAAOkB,MAKNA,M,mRCtCHE,EAAqC,CACzCC,KAAAA,EAAAA,GACAC,KAAM,kBAAMC,EAAAA,EAAAA,OAAsBD,EAAAA,KAG9BE,EAAaC,EAAAA,GAAAA,MACjB,CACE,IAAK,CACHf,gBAAiB,WAEnB,cAAe,CACbgB,WAAY,WAEd,0BAA2B,CACzBC,gBAAiB,WAEnB,cAAe,CACbjB,gBAAiB,UACjB7B,MAAO,UACPwB,OAAQ,QAEV,2BAA4B,CAC1BuB,YAAa,qBAEf,oBAAqB,CACnBtB,SAAU,QAEZ,WAAY,CACVA,SAAU,OACVzB,MAAO,UACP,aAAS,CACPA,MAAO,YAGX,aAAS,CACPA,MAAO,WAET,iBAAkB,CAChB6B,gBAAiB,WAEnB,sBAAuB,CACrBA,gBAAiB,UACjB7B,MAAO,WAET,qBAAsB,CACpB6B,gBAAiB,WAEnB,qBAAsB,CACpBmB,WAAY,KAEd,2BAA4B,CAC1BnB,gBAAiB,UACjB7B,MAAO,YAGX,CACEiC,MAAM,IAIJgB,EAAYL,EAAAA,GAAAA,MAChB,CACE,IAAK,CACHf,gBAAiB,UACjB7B,MAAO,WAGT,2BAA4B,CAC1B+C,YAAa,qBAEf,oBAAqB,CACnBtB,SAAU,QAEZ,WAAY,CACVA,SAAU,OACV,yBAAgB,CACdzB,MAAO,YAGX,aAAS,CACPA,MAAO,WAET,iBAAkB,CAChB6B,gBAAiB,WAEnB,sBAAuB,CACrBA,gBAAiB,UACjB7B,MAAO,WAET,6CAA8C,CAC5C6B,gBAAiB,UAGrB,CACEI,MAAM,IAgHV,KAAe9E,EAAAA,EAAAA,IAvNA,SAACC,GAAD,OACbP,EAAAA,EAAAA,IAAa,kBACRqG,EAAAA,IADO,IAEVC,YAAW,kBACND,EAAAA,GAAAA,YADK,IAERF,WAAY,gBAkNlB,EA5G0B,SAAC,GASN,IARnBxD,EAQkB,EARlBA,MAQkB,IAPlBD,MAAAA,OAOkB,MAPV,GAOU,MANlB4B,QAAAA,OAMkB,MANR,GAMQ,MALlBiC,KAAAA,OAKkB,MALX,OAKW,EAJlB3F,EAIkB,EAJlBA,QACAgC,EAGkB,EAHlBA,eAGkB,IAFlB4D,SAAAA,OAEkB,aADlBzD,aAAAA,OACkB,MADH,QACG,EAClB,GAAsC/B,EAAAA,EAAAA,WAAkB,GAAxD,eAAOyF,EAAP,KAAoBC,EAApB,KAGIC,EAA6B,GAKjC,OAJIjB,EAAca,KAChBI,EAAa,kBAAOA,GAAP,CAAsBjB,EAAca,SAIjD,UAAC,WAAD,YACE,UAAC,IAAD,CAAY9D,UAAW7B,EAAQ0F,WAA/B,WACE,0BAAO5D,IACM,KAAZ4B,IACC,gBAAK7B,UAAW7B,EAAQgG,iBAAxB,UACE,SAAC,IAAD,CAASjF,MAAO2C,EAASuC,UAAU,YAAnC,UACE,gBAAKpE,UAAW7B,EAAQ0D,QAAxB,UACE,SAAC,IAAD,cAMV,SAAC,KAAD,CAAM/B,MAAI,EAACC,GAAI,GAAf,UACE,qBAGF,UAAC,KAAD,CACED,MAAI,EACJC,GAAI,GACJkC,GAAI,CACFC,OAAQ,qBAJZ,WAOE,SAAC,KAAD,CAAMpC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,KAAD,CACEG,MAAOA,EACPpC,MAAOkG,EAAcL,EAAYN,EACjCgB,WAAYH,EACZI,UAAWP,EACXQ,YAAY,EACZC,OAAQlE,EACRmE,SAAU,SAACC,EAAWC,GACpBxE,EAAe,KAAM,KAAMuE,SAIjC,SAAC,KAAD,CACE5E,MAAI,EACJC,GAAI,GACJkC,GAAI,CACF2C,UAAW,oBACXlC,WAAYsB,EAAc,UAAY,WAL1C,UAQE,UAAC,IAAD,CACE/B,GAAI,CACFhE,QAAS,OACT4G,WAAY,SACZ7D,QAAS,MACT8D,aAAc,MACdC,eAAgB,WAChB,WAAY,CACVP,OAAQ,OACR9C,MAAO,OACPV,QAAS,MACT,aAAc,CACZW,WAAY,OAZpB,WAiBE,SAAC,IAAD,CACEE,QAAS,eACTlB,QAAS,WACPsD,GAAgBD,IAElBpC,KAAM,GACNE,MAAM,SAAC,KAAD,IACNpB,MAAO,UACPD,QAAS,cAEX,SAAC,IAAD,CAAiBmB,KAAM1B,EAAvB,UACE,SAAC,IAAD,CACE2B,QAAS,oBACTlB,QAAS,aACTiB,KAAM,GACNE,MAAM,SAAC,KAAD,IACNpB,MAAO,UACPD,QAAS,8B,mLChKnBuE,GAAclE,EAAAA,EAAAA,IAAW,SAAChD,GAAD,OAC7BP,EAAAA,EAAAA,IAAa,UACR0H,EAAAA,QAIP,SAASC,EAAWjE,GAClB,IAAM9C,EAAU6G,IAEhB,OACE,SAAC,KAAD,QACEG,WAAY,CAAEhH,QAAAA,IACV8C,IA0IV,KAAepD,EAAAA,EAAAA,IAhLA,SAACC,GAAD,OACbP,EAAAA,EAAAA,IAAa,0BACRqG,EAAAA,IACAwB,EAAAA,IAFO,IAGVC,iBAAkB,CAChBC,SAAU,EACVC,SAAU,YAEZC,cAAe,CACbD,SAAU,WACVE,MAAO,EACPC,IAAK,EACL,QAAS,CACPC,SAAU,GACVC,UAAW,IAEb,cAAe,CACbF,IAAK,IAGT7B,YAAW,kBACND,EAAAA,GAAAA,YADK,IAERF,WAAY,gBA0JlB,EArIwB,SAAC,GA4BH,IA3BpBzD,EA2BmB,EA3BnBA,MACAwE,EA0BmB,EA1BnBA,SACAvE,EAyBmB,EAzBnBA,MACA2F,EAwBmB,EAxBnBA,GACAC,EAuBmB,EAvBnBA,KAuBmB,IAtBnBtF,KAAAA,OAsBmB,MAtBZ,OAsBY,MArBnBjB,aAAAA,OAqBmB,MArBJ,MAqBI,MApBnBqB,SAAAA,OAoBmB,aAnBnBmF,UAAAA,OAmBmB,aAlBnBlE,QAAAA,OAkBmB,MAlBT,GAkBS,MAjBnBmE,MAAAA,OAiBmB,MAjBX,EAiBW,MAhBnBC,MAAAA,OAgBmB,MAhBX,GAgBW,MAfnBC,SAAAA,OAemB,aAdnBC,YAAAA,OAcmB,MAdL,GAcK,EAbnBC,EAamB,EAbnBA,IACAC,EAYmB,EAZnBA,IACAC,EAWmB,EAXnBA,UAWmB,IAVnBC,YAAAA,OAUmB,MAVL,KAUK,MATnBC,cAAAA,OASmB,MATH,KASG,MARnBC,gBAAAA,OAQmB,MARD,GAQC,EAPnBjB,EAOmB,EAPnBA,cAOmB,IANnBkB,gBAAAA,OAMmB,aALnBC,QAAAA,OAKmB,MALT,GAKS,MAJnBC,UAAAA,OAImB,SAHnBzI,EAGmB,EAHnBA,QAGmB,IAFnB6B,UAAAA,OAEmB,MAFP,GAEO,EADnB6G,EACmB,EADnBA,WAEIC,IAAe,QAAK,aAAcd,GAAUS,GAchD,MAZa,WAATjG,GAAqB4F,IACvBU,GAAU,IAAUV,GAGT,WAAT5F,GAAqB6F,IACvBS,GAAU,IAAUT,GAGN,KAAZM,IACFG,GAAU,QAAcH,IAIxB,SAAC,WAAD,WACE,UAAC,KAAD,CACE9G,WAAS,EACTG,WAAWgD,EAAAA,EAAAA,GACK,KAAdhD,EAAmBA,EAAY,GACrB,KAAViG,EAAe9H,EAAQ4I,aAAe5I,EAAQ6I,mBAJlD,UAOa,KAAV/G,IACC,UAAC,IAAD,CACEgH,QAASpB,EACT7F,UACE0G,EAAkBvI,EAAQ+I,gBAAkB/I,EAAQ0F,WAHxD,WAME,4BACG5D,EACAiG,EAAW,IAAM,MAEP,KAAZrE,IACC,gBAAK7B,UAAW7B,EAAQgG,iBAAxB,UACE,SAAC,IAAD,CAASjF,MAAO2C,EAASuC,UAAU,YAAnC,UACE,gBAAKpE,UAAW7B,EAAQ0D,QAAxB,UACE,SAAC,IAAD,cAQZ,iBAAK7B,UAAW7B,EAAQkH,iBAAxB,WACE,SAACH,EAAD,CACEW,GAAIA,EACJC,KAAMA,EACNqB,WAAS,EACTjH,MAAOA,EACP0G,UAAWA,EACXhG,SAAUA,EACV6D,SAAUA,EACVjE,KAAMA,EACNuF,UAAWA,EACXxG,aAAcA,EACduH,WAAYA,GACZb,MAAiB,KAAVA,EACPmB,WAAYnB,EACZE,YAAaA,EACbnG,UAAW7B,EAAQkJ,YACnBR,WAAYA,IAEbN,IACC,gBACEvG,UAAS,UAAK7B,EAAQqH,cAAb,YACG,KAAVvF,EAAe,YAAc,IAFjC,UAKE,SAAC,IAAD,CACEU,QACE6E,EACI,WACEA,KAEF,kBAAM,MAEZK,GAAIS,EACJtE,KAAM,QACNsF,oBAAoB,EACpBC,eAAe,EACfC,oBAAoB,EAZtB,SAcGjB,MAINC,IACC,gBACExG,UAAS,UAAK7B,EAAQqH,cAAb,YACG,KAAVvF,EAAe,YAAc,IAFjC,SAKGuG,gB,2DC5Mf,IAvBe,SACbiB,EACAC,GAEA,OAAkCnJ,EAAAA,EAAAA,WAAkB,GAApD,eAAOoJ,EAAP,KAAkBC,EAAlB,KAgBA,MAAO,CAACD,EAdQ,SAACE,EAAgBC,EAAazH,GAC5CuH,GAAa,GACb/I,EAAAA,EAAAA,OACUgJ,EAAQC,EAAKzH,GACpBvB,MAAK,SAACC,GACL6I,GAAa,GACbH,EAAU1I,MAEXC,OAAM,SAACC,GACN2I,GAAa,GACbF,EAAQzI,U,iLCmGhB,KAAepB,EAAAA,EAAAA,IA1GA,SAACC,GAAD,OACbP,EAAAA,EAAAA,IAAa,UACRwK,EAAAA,OAwGP,EArFsB,SAAC,GAcI,IAAD,IAbxBC,OAAAA,OAawB,SAZxB5I,EAYwB,EAZxBA,QACA6I,EAWwB,EAXxBA,SACAC,EAUwB,EAVxBA,UAUwB,IATxB/J,QAAAA,OASwB,MATd,GASc,MARxBe,MAAAA,OAQwB,MARhB,GAQgB,EAPxByI,EAOwB,EAPxBA,UACAQ,EAMwB,EANxBA,oBAMwB,IALxBC,WAAAA,OAKwB,MALX,SAKW,MAJxBC,YAAAA,OAIwB,MAJV,UAIU,MAHxBC,mBAAAA,OAGwB,MAHH,GAGG,MAFxBC,kBAAAA,OAEwB,MAFJ,GAEI,MADxBlJ,UAAAA,OACwB,MADZ,KACY,EACxB,OACE,UAAC,IAAD,CACEjB,KAAM4J,EACN5I,QAAS,SAACoJ,EAAOC,GACA,kBAAXA,GACFrJ,KAGJY,UAAW7B,EAAQ4C,KACnBkB,GAAI,CACF,mBAAoB,CAClBjB,QAAS,wBAVf,WAcE,UAAC,IAAD,CAAahB,UAAW7B,EAAQe,MAAhC,WACE,iBAAKc,UAAW7B,EAAQuK,UAAxB,UACGrJ,EADH,IACeH,MAEf,gBAAKc,UAAW7B,EAAQwK,eAAxB,UACE,SAAC,IAAD,CACE,aAAW,QACX3I,UAAW7B,EAAQyK,YACnBjI,QAASvB,EACTmI,eAAa,EACbvF,KAAK,QALP,UAOE,SAAC,IAAD,YAKN,SAAC,IAAD,CAAehC,UAAW7B,EAAQ0K,QAAlC,SACGV,KAEH,UAAC,IAAD,CAAenI,UAAW7B,EAAQ2K,QAAlC,WACE,SAAC,KAAD,gBACE9I,UAAW7B,EAAQ4K,aACnBpI,QAASsH,GAAY7I,EACrBwB,SAAU+G,EACVnH,KAAK,UACD+H,GALN,IAME9H,QAAQ,WACRC,MAAM,UACNmF,GAAI,iBARN,SAUGuC,MAGH,SAAC,KAAD,gBACEpI,UAAW7B,EAAQ6K,cACnBxI,KAAK,SACLG,QAASuH,EACT1J,QAASmJ,EACT/G,SAAU+G,EACVlH,QAAQ,WACRC,MAAM,YACNuI,gBAAgB,QAChBC,WAAW,SAAC,WAAD,IACXtC,WAAS,EACTf,GAAI,cACAyC,GAZN,aAcGD,e,yMCiEL3K,GAAYC,EAAAA,EAAAA,KAJD,SAACwL,GAAD,MAAsB,CACrCC,kBAAmBD,EAAME,OAAOC,iBAGE,CAClCC,qBAAAA,EAAAA,KAGF,KAAe1L,EAAAA,EAAAA,IA3IA,SAACC,GAAD,OACbP,EAAAA,EAAAA,IAAa,kBACRwK,EAAAA,IADO,IAEVhH,KAAM,CACJ,mBAAoB,CAClBC,QAAS,qBAGb6H,QAAS,CACP7H,QAAS,GACTwI,cAAe,GAEjBC,iBAAkB,CAChB/H,MAAO,OACPiE,SAAU,MAET+D,EAAAA,OA2HP,CAAkChM,GAxHb,SAAC,GAWF,IAVlB0B,EAUiB,EAVjBA,QACAD,EASiB,EATjBA,UACAD,EAQiB,EARjBA,MACA2D,EAOiB,EAPjBA,SACA1E,EAMiB,EANjBA,QAMiB,IALjBwL,UAAAA,OAKiB,SAJjBP,EAIiB,EAJjBA,kBACAQ,EAGiB,EAHjBA,iBACAL,EAEiB,EAFjBA,qBAEiB,IADjBlK,UAAAA,OACiB,MADL,KACK,EACjB,GAAwCd,EAAAA,EAAAA,WAAkB,GAA1D,eAAOsL,EAAP,KAAqBC,EAArB,MAEAlL,EAAAA,EAAAA,YAAU,WACR2K,EAAqB,MACpB,CAACA,KAEJ3K,EAAAA,EAAAA,YAAU,WACR,GAAIwK,EAAmB,CACrB,GAAkC,KAA9BA,EAAkBW,QAEpB,YADAD,GAAgB,GAIa,UAA3BV,EAAkB5I,MACpBsJ,GAAgB,MAGnB,CAACV,IAEJ,IAKMY,EAAaL,EACf,CACExL,QAAS,CACP8L,MAAO9L,EAAQsL,mBAGnB,CAAE9D,SAAU,KAAewB,WAAW,GAEtC4C,EAAU,GAYd,OAVIX,IACFW,EAAUX,EAAkBc,kBAEa,KAAvCd,EAAkBc,kBAClBd,EAAkBc,iBAAiBC,OAAS,KAE5CJ,EAAUX,EAAkBW,WAK9B,UAAC,KAAD,gBACE3L,KAAMe,EACNhB,QAASA,GACL6L,GAHN,IAIEI,OAAQ,QACRhL,QAAS,SAACoJ,EAAOC,GACA,kBAAXA,GACFrJ,KAGJY,UAAW7B,EAAQ4C,KAVrB,WAYE,UAAC,IAAD,CAAaf,UAAW7B,EAAQe,MAAhC,WACE,iBAAKc,UAAW7B,EAAQuK,UAAxB,UACGrJ,EADH,IACeH,MAEf,gBAAKc,UAAW7B,EAAQwK,eAAxB,UACE,SAAC,IAAD,CACE,aAAW,QACX3I,UAAW7B,EAAQyK,YACnBjI,QAASvB,EACTmI,eAAa,EACbvF,KAAK,QALP,UAOE,SAAC,IAAD,YAKN,SAAC,IAAD,CAAWqI,SAAS,KACpB,SAAC,IAAD,CACEjM,KAAMyL,EACN7J,UAAW7B,EAAQmM,cACnBlL,QAAS,WA1Db0K,GAAgB,GAChBP,EAAqB,KA4DjBQ,QAASA,EACTQ,aAAc,CACZvK,UAAU,GAAD,OAAK7B,EAAQqM,SAAb,YACPpB,GAAgD,UAA3BA,EAAkB5I,KACnCrC,EAAQsM,cACR,KAGRC,iBACEtB,GAAgD,UAA3BA,EAAkB5I,KAAmB,IAAQ,OAGtE,SAAC,IAAD,CAAeR,UAAW4J,EAAmB,GAAKzL,EAAQ0K,QAA1D,SACGhG,a,uIC9FT,KAAehF,EAAAA,EAAAA,IApDA,SAACC,GAAD,OACbP,EAAAA,EAAAA,GAAa,CACXoN,aAAY,UACPA,EAAAA,GAAAA,aAELC,UAAW,OA+Cf,EAnCkB,SAAC,GAOI,IAAD,IANpBzE,YAAAA,OAMoB,MANN,GAMM,EALpBhI,EAKoB,EALpBA,QACAsG,EAIoB,EAJpBA,SAIoB,IAHpBoG,kBAAAA,OAGoB,MAHA,MAGA,EAFpBC,EAEoB,EAFpBA,cACA5K,EACoB,EADpBA,MAEM4G,GAAU,QACdiE,kBAAkB,GADJ,UAEVF,EAFU,cAGZ,SAAC,IAAD,CACEtF,SAAUsF,EACV7K,UAAW7B,EAAQyM,UAFrB,UAIE,SAAC,IAAD,OAIN,OACE,SAAC,IAAD,CACEzE,YAAaA,EACbnG,UAAW8K,GAAgC3M,EAAQwM,YACnD9E,GAAG,kBACH5F,MAAM,GACNkF,WAAY2B,EACZrC,SAAU,SAAChF,GACTgF,EAAShF,EAAEuL,OAAO9K,QAEpBO,QAAQ,WACRP,MAAOA,Q,6HCLP+K,EAAqB,CACzBC,qBAAAA,EAAAA,IAEIxN,GAAYC,EAAAA,EAAAA,IAAQ,KAAMsN,GAEhC,IAAevN,GA3CW,SAAC,GAKE,IAJ3ByN,EAI0B,EAJ1BA,2BACAC,EAG0B,EAH1BA,WACAC,EAE0B,EAF1BA,YACAH,EAC0B,EAD1BA,qBAKA,GAAyCI,EAAAA,EAAAA,IAHpB,kBAAMH,GAA2B,MACnC,SAAClM,GAAD,OAA+BiM,EAAqBjM,MAEvE,eAAOsM,EAAP,KAAsBC,EAAtB,KACA,IAAKH,EACH,OAAO,KAST,OACE,SAAC,IAAD,CACEnM,MAAK,0BACLmJ,YAAa,SACbL,OAAQoD,EACR/L,WAAW,SAAC,KAAD,IACXsI,UAAW4D,EACXrD,UAdoB,WACtBsD,EACE,SADa,wCAGbH,IAWAjM,QApBY,kBAAM+L,GAA2B,IAqB7ChD,qBACE,UAAC,IAAD,2DACgDkD,EAAYlB,OAAQ,IADpE,oBAEoB,a,uGCrCrB,IAAMsB,EAAY,SAACC,EAAkBC,GAC1C,OAAID,EAAEE,UAAYD,EAAEC,UACX,EAELF,EAAEE,UAAYD,EAAEC,WACV,EAGH,GAGIC,EAAa,SAACH,EAAoBC,GAC7C,OAAID,EAAE5F,KAAO6F,EAAE7F,KACN,EAEL4F,EAAE5F,KAAO6F,EAAE7F,MACL,EAGH,GAGIgG,EAAa,SAACJ,EAAWC,GACpC,OAAID,EAAIC,EACC,EAELD,EAAIC,GACE,EAGH,I,0BCpDLI,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,0GACD,SAEJN,EAAQ,EAAUG,G,4LChBX,SAASI,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,GAAqB,oBAAqBD,GAEnD,ICDIE,EDEJ,GAD8BC,E,SAAAA,GAAuB,oBAAqB,CAAC,OAAQ,SAAU,WAAY,WAAY,gBAAiB,cAAe,uBAAwB,cAAe,c,sBCCtLC,EAAY,CAAC,WAAY,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,WAqC5GC,GAAqBC,EAAAA,EAAAA,IAAO,MAAO,CACvCjH,KAAM,oBACN2G,KAAM,OACNO,kBAzBwB,SAAC/L,EAAOgM,GAChC,IACEC,EACEjM,EADFiM,WAEF,MAAO,CAACD,EAAOlM,KAAMkM,EAAO,WAAD,QAAYE,EAAAA,EAAAA,GAAWD,EAAW3H,aAAkD,IAApC2H,EAAWE,sBAAiCH,EAAOG,qBAAsBH,EAAOC,EAAWzM,YAkB7IsM,EAIxB,gBACDjP,EADC,EACDA,MACAoP,EAFC,EAEDA,WAFC,OAGGG,EAAAA,EAAAA,GAAS,CACbpP,QAAS,OACTuG,OAAQ,SAERoB,UAAW,MACXf,WAAY,SACZyI,WAAY,SACZ5M,MAAO5C,EAAMqD,QAAQoM,OAAOC,QACJ,WAAvBN,EAAWzM,UAAX,sBAEKgN,EAAAA,cAFL,kBAEkDA,EAAAA,YAFlD,KAEyF,CACxFC,UAAW,KAEY,UAAxBR,EAAW3H,UAAwB,CAEpCoI,YAAa,GACY,QAAxBT,EAAW3H,UAAsB,CAElC5D,WAAY,IACyB,IAApCuL,EAAWE,sBAAiC,CAE7CQ,cAAe,YA4HjB,EA1HoCC,EAAAA,YAAiB,SAAwBC,EAASC,GACpF,IAAM9M,GAAQ+M,EAAAA,EAAAA,GAAc,CAC1B/M,MAAO6M,EACPhI,KAAM,sBAINjD,EAOE5B,EAPF4B,SACA7C,EAMEiB,EANFjB,UAFF,EAQIiB,EALFgN,UAAAA,OAHF,MAGc,MAHd,IAQIhN,EAJFmM,qBAAAA,OAJF,WAQInM,EAHFiN,kBAAAA,OALF,SAME3I,EAEEtE,EAFFsE,SACS4I,EACPlN,EADFR,QAEI2N,GAAQC,EAAAA,EAAAA,GAA8BpN,EAAO4L,GAE7CyB,GAAiBC,EAAAA,EAAAA,MAAoB,GACvC9N,EAAU0N,EAEVA,GAAeG,EAAe7N,QAQ9B6N,IAAmB7N,IACrBA,EAAU6N,EAAe7N,SAG3B,IAAMyM,GAAaG,EAAAA,EAAAA,GAAS,GAAIpM,EAAO,CACrCuN,YAAaF,EAAeE,YAC5BxM,KAAMsM,EAAetM,KACrBoL,qBAAAA,EACA7H,SAAAA,EACA9E,QAAAA,IAGItC,EArFkB,SAAA+O,GACxB,IACE/O,EAME+O,EANF/O,QACAiP,EAKEF,EALFE,qBACAoB,EAIEtB,EAJFsB,YACAjJ,EAGE2H,EAHF3H,SACAvD,EAEEkL,EAFFlL,KACAvB,EACEyM,EADFzM,QAEIgO,EAAQ,CACZ1N,KAAM,CAAC,OAAQqM,GAAwB,uBAAwB7H,GAAY,WAAJ,QAAe4H,EAAAA,EAAAA,GAAW5H,IAAa9E,EAAS+N,GAAe,cAAexM,GAAQ,OAAJ,QAAWmL,EAAAA,EAAAA,GAAWnL,MAEjL,OAAO0M,EAAAA,EAAAA,GAAeD,EAAOjC,EAA+BrO,GAyE5CwQ,CAAkBzB,GAClC,OAAoB0B,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,SAA6B,CACpD3O,MAAO,KACP2C,UAAuB+L,EAAAA,EAAAA,KAAK9B,GAAoBO,EAAAA,EAAAA,GAAS,CACvDyB,GAAIb,EACJf,WAAYA,EACZlN,WAAWgD,EAAAA,EAAAA,GAAK7E,EAAQ4C,KAAMf,GAC9B+N,IAAKA,GACJK,EAAO,CACRvL,SAA8B,kBAAbA,GAA0BqL,GAGzBa,EAAAA,EAAAA,MAAMlB,EAAAA,SAAgB,CACtChL,SAAU,CAAc,UAAb0C,EAEXoH,IAAUA,GAAqBiC,EAAAA,EAAAA,KAAK,OAAQ,CAC1C5O,UAAW,cACX6C,SAAU,YACN,KAAMA,MAT8D+L,EAAAA,EAAAA,KAAKI,EAAAA,EAAY,CAC3FtO,MAAO,iBACPmC,SAAUA,a,sBC1HH,SAASoM,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLrE,ECHS,SAAuCkE,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLrE,EAAS,GACTsE,EAAaC,OAAOC,KAAKN,GAG7B,IAAKG,EAAI,EAAGA,EAAIC,EAAWnF,OAAQkF,IACjCD,EAAME,EAAWD,GACbF,EAASM,QAAQL,IAAQ,IAC7BpE,EAAOoE,GAAOF,EAAOE,IAGvB,OAAOpE,EDTM,CAA6BkE,EAAQC,GAGlD,GAAII,OAAOG,sBAAuB,CAChC,IAAIC,EAAmBJ,OAAOG,sBAAsBR,GAEpD,IAAKG,EAAI,EAAGA,EAAIM,EAAiBxF,OAAQkF,IACvCD,EAAMO,EAAiBN,GACnBF,EAASM,QAAQL,IAAQ,GACxBG,OAAOK,UAAUC,qBAAqBC,KAAKZ,EAAQE,KACxDpE,EAAOoE,GAAOF,EAAOE,IAIzB,OAAOpE,E","sources":["screens/Console/Account/ServiceAccountPolicy.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/RBIconButton.tsx","screens/Console/Common/BoxIconButton/BoxIconButton.tsx","screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/Hooks/useApi.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Users/DeleteMultipleServiceAccounts.tsx","utils/sortFunctions.ts","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport { ChangeAccessPolicyIcon } from \"../../../icons\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    codeMirrorContainer: {\n      marginBottom: 20,\n      \"& label\": {\n        marginBottom: \".5rem\",\n      },\n      \"& label + div\": {\n        display: \"none\",\n      },\n    },\n    ...formFieldStyles,\n    ...modalStyleUtils,\n    ...spacingUtils,\n  });\ncreateStyles({\n  ...modalStyleUtils,\n  ...spacingUtils,\n});\n\ninterface IServiceAccountPolicyProps {\n  classes: any;\n  open: boolean;\n  selectedAccessKey: string | null;\n  closeModalAndRefresh: () => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst ServiceAccountPolicy = ({\n  classes,\n  open,\n  selectedAccessKey,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n}: IServiceAccountPolicyProps) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [policyDefinition, setPolicyDefinition] = useState<string>(\"\");\n  useEffect(() => {\n    if (loading) {\n      api\n        .invoke(\"GET\", `/api/v1/service-accounts/${selectedAccessKey}/policy`)\n        .then((res) => {\n          setLoading(false);\n          setPolicyDefinition(res);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    }\n  }, [loading, setLoading, setModalErrorSnackMessage, selectedAccessKey]);\n\n  const setPolicy = (event: React.FormEvent, newPolicy: string) => {\n    event.preventDefault();\n    api\n      .invoke(\"PUT\", `/api/v1/service-accounts/${selectedAccessKey}/policy`, {\n        policy: newPolicy,\n      })\n      .then((res) => {\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      title=\"Service Account Policy\"\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      titleIcon={<ChangeAccessPolicyIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          setPolicy(e, policyDefinition);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.codeMirrorContainer}>\n            <CodeMirrorWrapper\n              label={`Service Account Policy`}\n              value={policyDefinition}\n              onBeforeChange={(editor, data, value) => {\n                setPolicyDefinition(value);\n              }}\n              editorHeight={\"350px\"}\n            />\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => {\n                closeModalAndRefresh();\n              }}\n              disabled={loading}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n            >\n              Set\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ServiceAccountPolicy));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport BoxIconButton from \"../../../Common/BoxIconButton/BoxIconButton\";\nimport { IconButtonProps } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\n\ntype DeleteButtonProps = {\n  onClick: (e: any) => void;\n  text?: string;\n  disabled?: boolean;\n  size?: string;\n  tooltip?: string;\n  classes?: any;\n  icon?: React.ReactNode;\n  [x: string]: any;\n};\n\ntype RBIconProps = Partial<IconButtonProps> & DeleteButtonProps;\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const getButtonColor = (props: RBIconProps) => {\n    const { variant, color } = props;\n\n    let tgtColor = theme.palette.primary.main;\n\n    if (color === \"primary\" && variant === \"contained\") {\n      tgtColor = theme.palette.primary.contrastText;\n    } else if (color === \"primary\" && variant === \"outlined\") {\n      tgtColor = theme.palette.primary.main;\n    } else if (color === \"secondary\") {\n      tgtColor = theme.palette.secondary.main;\n    }\n\n    return tgtColor;\n  };\n\n  return {\n    root: {\n      padding: \"7px\",\n      color: (props: RBIconProps) => getButtonColor(props),\n      borderColor: (props: RBIconProps) =>\n        props.color === \"secondary\"\n          ? theme.palette.secondary.main\n          : theme.palette.primary.main,\n      \"& svg.min-icon\": {\n        width: 12,\n        marginLeft: (props: RBIconProps) => (props.text ? \"5px\" : \"0px\"),\n        \"@media (max-width: 900px)\": {\n          width: 16,\n          marginLeft: \"0px !important\",\n        },\n      },\n    },\n  };\n});\n\nconst RBIconButton = (props: RBIconProps) => {\n  const classes = useStyles(props);\n\n  const {\n    onClick,\n    text = \"\",\n    disabled = false,\n    tooltip,\n    icon = null,\n    ...restProps\n  } = props;\n\n  return (\n    <BoxIconButton\n      classes={classes}\n      tooltip={tooltip || text}\n      variant=\"outlined\"\n      onClick={onClick}\n      disabled={disabled}\n      color=\"secondary\"\n      size=\"medium\"\n      sx={{\n        border: \"1px solid #f44336\",\n        \"& span\": {\n          fontSize: 14,\n          \"@media (max-width: 900px)\": {\n            display: \"none\",\n          },\n        },\n      }}\n      {...restProps}\n    >\n      <span>{text}</span> {icon}\n    </BoxIconButton>\n  );\n};\nexport default RBIconButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, IconButtonProps, Tooltip } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 8,\n      marginLeft: 8,\n      borderWidth: 1,\n      borderColor: \"#696969\",\n      color: \"#696969\",\n      borderStyle: \"solid\",\n      borderRadius: 3,\n      \"& .min-icon\": {\n        // height: 20,\n        width: 20,\n      },\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:disabled\": {\n        color: \"#EBEBEB\",\n        borderColor: \"#EBEBEB\",\n      },\n    },\n    contained: {\n      borderColor: theme.palette.primary.main,\n      background: theme.palette.primary.main,\n      color: \"white\",\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.light,\n        color: \"#FFF\",\n      },\n    },\n  });\n\ninterface IBoxIconButton extends IconButtonProps {\n  classes: any;\n  children: any;\n  variant?: \"outlined\" | \"contained\";\n  tooltip?: string;\n}\n\nconst BoxIconButton = ({\n  classes,\n  children,\n  variant = \"outlined\",\n  tooltip,\n  ...rest\n}: IBoxIconButton) => {\n  const button = (\n    <IconButton\n      {...rest}\n      className={clsx(classes.root, {\n        [classes.contained]: variant === \"contained\",\n      })}\n    >\n      {children}\n    </IconButton>\n  );\n\n  if (tooltip && tooltip !== \"\") {\n    return (\n      <Tooltip title={tooltip}>\n        <span>{button}</span>\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nexport default withStyles(styles)(BoxIconButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport \"codemirror/theme/dracula.css\";\n/** Code mirror */\nimport CodeMirror, { Extension } from \"@uiw/react-codemirror\";\nimport { StreamLanguage } from \"@codemirror/stream-parser\";\nimport { json } from \"@codemirror/lang-json\";\nimport { yaml } from \"@codemirror/legacy-modes/mode/yaml\";\n\n/** Code mirror */\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon, EditorThemeSwitchIcon } from \"../../../../../icons\";\nimport RBIconButton from \"../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { EditorView } from \"@codemirror/view\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst langHighlight: Record<string, any> = {\n  json,\n  yaml: () => StreamLanguage.define(yaml),\n};\n\nconst lightTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#FBFAFA\",\n    },\n    \".cm-content\": {\n      caretColor: \"#05122B\",\n    },\n    \"&.cm-focused .cm-cursor\": {\n      borderLeftColor: \"#05122B\",\n    },\n    \".cm-gutters\": {\n      backgroundColor: \"#FBFAFA\",\n      color: \"#000000\",\n      border: \"none\",\n    },\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      color: \"#2781B0\",\n      \"& .ͼc\": {\n        color: \"#C83B51\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#dde1f1\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#05122B\",\n      color: \"#ffffff\",\n    },\n    \".cm-selectionMatch\": {\n      backgroundColor: \"#ebe7f1\",\n    },\n    \".cm-selectionLayer\": {\n      fontWeight: 500,\n    },\n    \" .cm-selectionBackground\": {\n      backgroundColor: \"#a180c7\",\n      color: \"#ffffff\",\n    },\n  },\n  {\n    dark: false,\n  }\n);\n\nconst darkTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#282a36\",\n      color: \"#ffb86c\",\n    },\n\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      \"& .ͼd, & .ͼc\": {\n        color: \"#8e6cef\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#44475a\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#842de5\",\n      color: \"#ff79c6\",\n    },\n    \".cm-selectionLayer .cm-selectionBackground\": {\n      backgroundColor: \"green\",\n    },\n  },\n  {\n    dark: true,\n  }\n);\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  const [isDarkTheme, setIsDarkTheme] = useState<boolean>(false);\n\n  //based on the language mode pick . default to json\n  let extensionList: Extension[] = [];\n  if (langHighlight[mode]) {\n    extensionList = [...extensionList, langHighlight[mode]()];\n  }\n\n  return (\n    <React.Fragment>\n      <InputLabel className={classes.inputLabel}>\n        <span>{label}</span>\n        {tooltip !== \"\" && (\n          <div className={classes.tooltipContainer}>\n            <Tooltip title={tooltip} placement=\"top-start\">\n              <div className={classes.tooltip}>\n                <HelpIcon />\n              </div>\n            </Tooltip>\n          </div>\n        )}\n      </InputLabel>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        sx={{\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <Grid item xs={12}>\n          <CodeMirror\n            value={value}\n            theme={isDarkTheme ? darkTheme : lightTheme}\n            extensions={extensionList}\n            editable={!readOnly}\n            basicSetup={true}\n            height={editorHeight}\n            onChange={(v: string, vu: any) => {\n              onBeforeChange(null, null, v);\n            }}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            borderTop: \"1px solid #eaeaea\",\n            background: isDarkTheme ? \"#282c34\" : \"#f7f7f7\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"2px\",\n              paddingRight: \"5px\",\n              justifyContent: \"flex-end\",\n              \"& button\": {\n                height: \"26px\",\n                width: \"26px\",\n                padding: \"2px\",\n                \" .min-icon\": {\n                  marginLeft: \"0\",\n                },\n              },\n            }}\n          >\n            <RBIconButton\n              tooltip={\"Change theme\"}\n              onClick={() => {\n                setIsDarkTheme(!isDarkTheme);\n              }}\n              text={\"\"}\n              icon={<EditorThemeSwitchIcon />}\n              color={\"primary\"}\n              variant={\"outlined\"}\n            />\n            <CopyToClipboard text={value}>\n              <RBIconButton\n                tooltip={\"Copy to Clipboard\"}\n                onClick={() => {}}\n                text={\"\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"outlined\"}\n              />\n            </CopyToClipboard>\n          </Box>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n          id={\"confirm-cancel\"}\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          id={\"confirm-ok\"}\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"../../../icons/SearchIcon\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\ninterface IDeleteMultiSAsProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedSAs: string[];\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\nconst DeleteMultipleSAs = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedSAs,\n  setErrorSnackMessage,\n}: IDeleteMultiSAsProps) => {\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => setErrorSnackMessage(err);\n  const onClose = () => closeDeleteModalAndRefresh(false);\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n  if (!selectedSAs) {\n    return null;\n  }\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\n      \"DELETE\",\n      `/api/v1/service-accounts/delete-multi`,\n      selectedSAs\n    );\n  };\n  return (\n    <ConfirmDialog\n      title={`Delete Service Accounts`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the selected {selectedSAs.length}{\" \"}\n          service accounts?{\" \"}\n        </DialogContentText>\n      }\n    />\n  );\n};\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(DeleteMultipleSAs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\ninterface userInterface {\n  accessKey: string;\n}\n\ninterface policyInterface {\n  name: string;\n}\n\nexport const usersSort = (a: userInterface, b: userInterface) => {\n  if (a.accessKey > b.accessKey) {\n    return 1;\n  }\n  if (a.accessKey < b.accessKey) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policySort = (a: policyInterface, b: policyInterface) => {\n  if (a.name > b.name) {\n    return 1;\n  }\n  if (a.name < b.name) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const stringSort = (a: string, b: string) => {\n  if (a > b) {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["createStyles","modalStyleUtils","spacingUtils","connector","connect","setModalErrorSnackMessage","withStyles","theme","codeMirrorContainer","marginBottom","display","formFieldStyles","classes","open","selectedAccessKey","closeModalAndRefresh","useState","loading","setLoading","policyDefinition","setPolicyDefinition","useEffect","api","then","res","catch","err","title","modalOpen","onClose","titleIcon","noValidate","autoComplete","onSubmit","e","newPolicy","preventDefault","policy","container","item","xs","className","label","value","onBeforeChange","editor","data","editorHeight","modalButtonBar","type","variant","color","onClick","disabled","useStyles","makeStyles","root","padding","props","tgtColor","palette","primary","main","contrastText","secondary","getButtonColor","borderColor","width","marginLeft","text","tooltip","icon","restProps","size","sx","border","fontSize","borderWidth","borderStyle","borderRadius","backgroundColor","opacity","contained","background","dark","light","children","rest","button","clsx","langHighlight","json","yaml","StreamLanguage","lightTheme","EditorView","caretColor","borderLeftColor","borderRight","fontWeight","darkTheme","fieldBasic","inputLabel","mode","readOnly","isDarkTheme","setIsDarkTheme","extensionList","tooltipContainer","placement","extensions","editable","basicSetup","height","onChange","v","vu","borderTop","alignItems","paddingRight","justifyContent","inputStyles","inputFieldStyles","InputField","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","id","name","multiline","index","error","required","placeholder","min","max","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","onKeyPress","inputProps","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","fullWidth","helperText","inputRebase","disableFocusRipple","disableRipple","disableTouchRipple","onSuccess","onError","isLoading","setIsLoading","method","url","deleteDialogStyles","isOpen","onCancel","onConfirm","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","event","reason","titleText","closeContainer","closeButton","content","actions","cancelButton","confirmButton","loadingPosition","startIcon","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","paddingBottom","customDialogSize","snackBarCommon","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","message","customSize","paper","detailedErrorMsg","length","scroll","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","searchField","adornment","adornmentPosition","overrideClass","disableUnderline","target","mapDispatchToProps","setErrorSnackMessage","closeDeleteModalAndRefresh","deleteOpen","selectedSAs","useApi","deleteLoading","invokeDeleteApi","usersSort","a","b","accessKey","policySort","stringSort","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","overridesResolver","styles","ownerState","capitalize","disablePointerEvents","_extends","whiteSpace","action","active","inputAdornmentClasses","marginTop","marginRight","pointerEvents","React","inProps","ref","useThemeProps","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","_jsxs","Typography","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}
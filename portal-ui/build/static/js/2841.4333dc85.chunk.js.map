{"version":3,"file":"static/js/2841.4333dc85.chunk.js","mappings":"0QAoLA,KAAeA,EAAAA,EAAAA,IA3JA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,QACXC,gBAAiB,CACfC,UAAW,SAEbC,eAAgB,CACdC,QAAS,OACTC,WAAY,SACZC,eAAgB,cAElBC,oBAAqB,CACnBC,WAAY,GAEdC,gBAAiB,CACfL,QAAS,OACTM,SAAU,EACVL,WAAY,SACZ,QAAS,CACPK,SAAU,EACVC,MAAO,SAGXC,eAAgB,CACdR,QAAS,OACTE,eAAgB,cAElBO,WAAY,CACVC,SAAU,GACVC,WAAY,IACZb,UAAW,UAEbc,gBAAiB,CACfF,SAAU,GACVG,MAAO,OACPf,UAAW,UAEbgB,UAAW,CACTC,oBAAqB,sBACrBf,QAAS,OACTgB,QAAS,GACTC,aAAc,KAEbC,EAAAA,OAiHP,EA9GoB,SAAC,GAOK,IANxBC,EAMuB,EANvBA,QACAC,EAKuB,EALvBA,UACAC,EAIuB,EAJvBA,UACAC,EAGuB,EAHvBA,aACAC,EAEuB,EAFvBA,MACAC,EACuB,EADvBA,SAEMC,EAAkB,SAACC,GACvBF,GAASG,EAAAA,EAAAA,GAAqBJ,EAAOG,MAGvCE,EAAAA,EAAAA,YAAU,WAGR,IAFA,IAAIC,EAAmC,GAE9BC,EAAI,EAAGA,EAAIT,EAAUU,OAAQD,IACpCD,EAAkBG,KAAK,CACrBC,SAAS,OAAD,OAASH,EAAEI,YACnBC,UAAU,EACVC,MAAOf,EAAUS,GAAGO,IACpBC,QAAS,yBACTC,qBAAsB,gBAExBV,EAAkBG,KAAK,CACrBC,SAAS,OAAD,OAASH,EAAEI,YACnBC,UAAU,EACVC,MAAOf,EAAUS,GAAGM,MACpBE,QAAS,yBACTC,qBAAsB,kBAI1B,IAAMC,GAAYC,EAAAA,EAAAA,GAAqBZ,GACvCL,EAASgB,KACR,CAACnB,EAAWG,IAEf,IAAIkB,EAAiBrB,EAAUsB,KAAI,SAACC,EAAGC,GACrC,OACE,SAAC,EAAAC,SAAD,WACE,iBAAKC,UAAW5B,EAAQL,UAAxB,WACE,SAAC,IAAD,CACEkC,GAAE,cAASH,EAAMX,YACjBe,MAAO,GACPC,YAAa,MACbC,KAAI,cAASN,EAAMX,YACnBE,MAAOf,EAAUwB,GAAOR,IACxBe,SAAU,SAACC,GACT,IAAIC,GAAU,OAAOjC,GACrBiC,EAAWT,GAAOR,IAAMgB,EAAEE,OAAOnB,MACjCd,EAAagC,GACb7B,EAAgB,OAAD,OAAQoB,EAAMX,cAE/BW,MAAOA,EAEPtB,MAAOA,EAAM,OAAD,OAAQsB,EAAMX,cAAiB,IAd7C,kBAakBW,EAAMX,cAGxB,SAAC,IAAD,CACEc,GAAE,cAASH,EAAMX,YACjBe,MAAO,GACPC,YAAa,QACbC,KAAI,cAASN,EAAMX,YACnBE,MAAOf,EAAUwB,GAAOT,MACxBgB,SAAU,SAACC,GACT,IAAIC,GAAU,OAAOjC,GACrBiC,EAAWT,GAAOT,MAAQiB,EAAEE,OAAOnB,MACnCd,EAAagC,GACb7B,EAAgB,OAAD,OAAQoB,EAAMX,cAE/BW,MAAOA,EAEPtB,MAAOA,EAAM,OAAD,OAAQsB,EAAMX,cAAiB,IAd7C,kBAakBW,EAAMX,cAGxB,SAAC,IAAD,CAASsB,MAAK,cAASpC,GAAa,aAAW,WAA/C,UACE,SAAC,IAAD,CACEqC,KAAM,QACNC,QAAS,WACP,IAAIJ,GAAU,OAAOjC,GACrBiC,EAAWtB,KAAK,CAAEK,IAAK,GAAID,MAAO,KAClCd,EAAagC,IALjB,UAQE,SAAC,IAAD,SAGJ,SAAC,IAAD,CAASE,MAAM,SAAS,aAAW,cAAnC,UACE,SAAC,IAAD,CACEC,KAAM,QACNE,MAAO,CAAEvD,WAAY,IACrBsD,QAAS,WAIP,GAHyB,IAArBrC,EAAUU,QACZT,EAAa,CAAC,CAAEe,IAAK,GAAID,MAAO,MAE9Bf,EAAUU,OAAS,EAAG,CACxB,IAAIuB,GAAU,OAAOjC,GACrBiC,EAAWM,OAAOf,EAAO,GACzBvB,EAAagC,KAVnB,UAcE,SAAC,IAAD,YA7DR,mBAA2BT,EAAMX,gBAqErC,OAAO,SAAC,EAAAY,SAAD,UAAWJ,Q,oIChFdmB,GAAYC,EAAAA,EAAAA,KA9BD,SAACC,GAAD,MAAsB,CACrCC,cAAeD,EAAME,QAAQC,cAAcF,cAC3CG,eAAgBJ,EAAME,QAAQC,cAAcE,cAC5CC,OAAQN,EAAME,QAAQC,cAAcI,WACpCC,WAAYC,GAAAA,CAAIT,EAAME,QAAQC,cAAcI,WAAY,cAAc,GACtEG,kBAAmBD,GAAAA,CACjBT,EAAME,QAAQC,cAAcI,WAC5B,qBACA,GAEFI,kBAAmBF,GAAAA,CACjBT,EAAME,QAAQC,cAAcI,WAC5B,qBACA,GAEFK,SAAUH,GAAAA,CAAIT,EAAME,QAAQC,cAAcI,WAAY,YAAY,GAClEM,WAAYJ,GAAAA,CAAIT,EAAME,QAAQC,cAAcI,WAAY,cAAc,GACtEO,eAAgBL,GAAAA,CACdT,EAAME,QAAQC,cAAcI,WAC5B,kBACA,GAEFQ,UAAWN,GAAAA,CAAIT,EAAME,QAAQC,cAAcI,WAAY,gBAAgB,GACvES,YAAaP,GAAAA,CACXT,EAAME,QAAQC,cAAcI,WAC5B,kBACA,MAIgC,MAEpC,KAAe5E,EAAAA,EAAAA,IA/DA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,kBACRoF,EAAAA,IADO,IAEVC,YAAa,CACXnF,UAAW,UAEboF,WAAY,CACVC,OAAQ,QAEPC,EAAAA,EAAAA,IAAmBzF,EAAM0F,QAAQ,QAsDxC,CAAkCxB,GAnDd,SAAC,GAAoD,IAAlD1C,EAAiD,EAAjDA,QAASmE,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,WACvC,OACE,SAAC,EAAAzC,SAAD,WACE,SAAC,IAAD,CACE0C,QAAS,CACP,CAAEvC,MAAO,MAAOwC,WAAY,OAC5B,CAAExC,MAAO,QAASwC,WAAY,UAEhCC,WAAW,EACXJ,QAASA,EACTK,YAAa,GACbC,WAAYL,EACZM,QAAQ,OACRC,kBAAmB3E,EAAQ+D,oB,iSC4WnC,GAAexF,EAAAA,EAAAA,IA7XA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,wBACXC,gBAAiB,CACfC,UAAW,UAEVoB,EAAAA,IACA6E,EAAAA,IACAC,EAAAA,OAsXP,EAnXkC,SAAC,GAkBD,EAjBhC3B,OAiBiC,IAhBjClD,EAgBgC,EAhBhCA,QACA8E,EAegC,EAfhCA,KACAC,EAcgC,EAdhCA,QACAC,EAagC,EAbhCA,MACAC,EAYgC,EAZhCA,aACAC,EAWgC,EAXhCA,UACAC,EAUgC,EAVhCA,OACAC,EASgC,EAThCA,YACAC,EAQgC,EARhCA,aACAC,EAOgC,EAPhCA,eACAC,EAMgC,EANhCA,mBACAC,EAKgC,EALhCA,iBACAC,EAIgC,EAJhCA,WACAC,EAGgC,EAHhCA,gBACAC,EAEgC,EAFhCA,WACAC,EACgC,EADhCA,WAEA,GAAgDC,EAAAA,EAAAA,UAAc,IAA9D,eAAOC,EAAP,KAAyBC,EAAzB,KACA,GAAkCF,EAAAA,EAAAA,UAChCV,EAAOvE,OAAS,GAAhB,OAAwBuE,GAAU,CAAC,CAAEjE,IAAK,GAAID,MAAO,MADvD,eAAO+E,EAAP,KAAkBC,EAAlB,KAGA,GAA4CJ,EAAAA,EAAAA,UAC1CT,EAAYxE,OAAS,GAArB,OAA6BwE,GAAe,CAAC,CAAElE,IAAK,GAAID,MAAO,MADjE,eAAOiF,EAAP,KAAuBC,EAAvB,KAGA,GAA8CN,EAAAA,EAAAA,UAC5CR,EAAazE,OAAS,GAAtB,OAA8ByE,GAAgB,CAAC,CAAEnE,IAAK,GAAID,MAAO,MADnE,eAAOmF,EAAP,KAAwBC,EAAxB,KAGA,GAAgCR,EAAAA,EAAAA,UAAiBb,GAAjD,eAAOsB,EAAP,KAAiBC,EAAjB,KACA,GAA8CV,EAAAA,EAAAA,UAAiBZ,GAA/D,eAAOuB,EAAP,KAAwBC,EAAxB,KACA,IAAwCZ,EAAAA,EAAAA,UAAiBX,GAAzD,iBAAOwB,GAAP,MAAqBC,GAArB,MACA,IAAkDd,EAAAA,EAAAA,UAChDP,EAAevE,YADjB,iBAAO6F,GAAP,MAA0BC,GAA1B,MAGA,IAA0ChB,EAAAA,EAAAA,UAAiBF,GAA3D,iBAAOmB,GAAP,MAAsBC,GAAtB,MACA,IAA0ClB,EAAAA,EAAAA,UACxCD,EACIoB,KAAKC,MAAMC,SAAStB,EAAY,IAAM,KAAY7E,WAClD,IAHN,iBAAOoG,GAAP,MAAsBC,GAAtB,MAKA,IACEvB,EAAAA,EAAAA,UAAiBN,GADnB,iBAAO8B,GAAP,MAA8BC,GAA9B,MAEA,IACEzB,EAAAA,EAAAA,UAAiBL,GADnB,iBAAO+B,GAAP,MAA4BC,GAA5B,MAGA,IAAsC3B,EAAAA,EAAAA,UAAc,IAApD,iBAAO4B,GAAP,MAAoBC,GAApB,MACA,IAAgD7B,EAAAA,EAAAA,UAAc,IAA9D,iBAAO8B,GAAP,MAAyBC,GAAzB,MACA,IAAkD/B,EAAAA,EAAAA,UAAc,IAAhE,iBAAOgC,GAAP,MAA0BC,GAA1B,MAEMC,GAAO,SAACC,GAEZ,IADA,IAAIC,EAAsB,GACjBtH,EAAI,EAAGA,EAAIqH,EAAEpH,OAAQD,IACX,KAAbqH,EAAErH,GAAGO,KACP+G,EAAOpH,KAAKmH,EAAErH,IAGlB,OAAOsH,IAGTxH,EAAAA,EAAAA,YAAU,WACR,IAAIyH,EAA4C,GAEhDA,EAA2BrH,KAAK,CAC9BC,SAAS,QACTE,UAAU,EACVC,MAAOqF,EACPnF,QACE,wIACFC,qBAAsB,kBAExB8G,EAA2BrH,KAAK,CAC9BC,SAAS,eACTE,UAAU,EACVC,MAAOuF,EACPrF,QACE,wIACFC,qBAAsB,kBAExB8G,EAA2BrH,KAAK,CAC9BC,SAAS,YACTE,UAAU,EACVC,MAAOyF,GACPvF,QACE,wIACFC,qBAAsB,kBAExB8G,EAA2BrH,KAAK,CAC9BC,SAAS,iBACTE,UAAU,EACVC,MAAO2F,GACPzF,QAAS,WACTC,qBAAsB,wCAExB8G,EAA2BrH,KAAK,CAC9BC,SAAS,gBACTE,UAAU,EACVC,MAAO6F,GACP3F,QAAS,WACTC,qBAAsB,wCAExB8G,EAA2BrH,KAAK,CAC9BC,SAAS,gBACTE,UAAU,EACVC,MAAOkG,GACPhG,QAAS,WACTC,qBAAsB,wCAExB8G,EAA2BrH,KAAK,CAC9BC,SAAS,qBACTE,UAAU,EACVC,MAAOoG,GACPlG,QAAS,yBACTC,qBAAsB,iCAExB8G,EAA2BrH,KAAK,CAC9BC,SAAS,mBACTE,UAAU,EACVC,MAAOsG,GACPpG,QAAS,yBACTC,qBAAsB,+BAGxB,IAAMC,GAAYC,EAAAA,EAAAA,GAAqB4G,GACvCnC,EAAoB1E,KACnB,CACDiF,EACAE,EACAE,GACAE,GACAS,GACAE,GACAT,GACAK,GACApB,IAgDF,OACE,SAACoC,EAAA,EAAD,CACEpD,QAAS,kBAAMA,GAAQ,IACvBqD,UAAWtD,EACXzC,MAAM,gCAHR,UAKE,iBAAMgG,YAAU,EAACC,aAAa,MAAMC,SAjCX,SAACC,GAC5BA,EAAMC,iBAENC,EAAAA,EAAAA,OAEI,MAFJ,6BAG0BhD,EAH1B,oBAGqDD,EAHrD,eAII,CACEN,OAAQ4C,GAAK/B,GACbZ,YAAa2C,GAAK7B,GAClBb,aAAc0C,GAAK3B,GACnBpB,MAAOsB,EACPrB,aAAcuB,EACdtB,UAAWwB,GACXpB,eAAgBsB,GAChBrB,mBAAoB8B,GACpB7B,iBAAkB+B,GAClBoB,qBAAsB7B,GACtB8B,qBAAsBzB,GAAgB,OAGzC0B,MAAK,WACJ9D,GAAQ,MAET+D,OAAM,SAACC,QASR,UACE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAAf,WACE,UAACD,EAAA,GAAD,CAAME,GAAI,GAAItH,UAAW5B,EAAQmJ,oBAAjC,WACE,SAACH,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,UACE,SAACC,EAAA,EAAD,CACEzH,GAAE,QACFC,MAAO,QACPC,YAAa,QACbC,KAAI,QACJf,MAAOqF,EACPrE,SAAU,SAACuG,GACTjC,EAAYiC,EAAMpG,OAAOnB,QAG3Bb,MAAO0F,EAAgB,OAAa,IAVtC,YAaF,SAACkD,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,UACE,SAACC,EAAA,EAAD,CACEzH,GAAE,eACFC,MAAO,gBACPC,YAAa,gBACbC,KAAI,eACJf,MAAOuF,EACPvE,SAAU,SAACuG,GACT/B,EAAmB+B,EAAMpG,OAAOnB,QAGlCb,MAAO0F,EAAgB,cAAoB,IAV7C,mBAaF,SAACkD,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,UACE,SAACC,EAAA,EAAD,CACEzH,GAAE,YACFC,MAAO,aACPC,YAAa,aACbC,KAAI,YACJf,MAAOyF,GACPzE,SAAU,SAACuG,GACT7B,GAAgB6B,EAAMpG,OAAOnB,QAG/Bb,MAAO0F,EAAgB,WAAiB,IAV1C,gBAaF,SAACkD,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,UACE,SAACC,EAAA,EAAD,CACEzH,GAAE,iBACFC,MAAO,gBACPC,YAAa,gBACbC,KAAI,iBACJf,MAAO2F,GACP3E,SAAU,SAACuG,GACT3B,GAAqB2B,EAAMpG,OAAOnB,QAGpCb,MAAO0F,EAAgB,gBAAsB,GAC7CyD,eACE,SAACC,EAAA,EAAD,CACE3H,GAAI,YACJ4H,aAAc,aACdC,aAAc,KACdC,UAAW,CAAC,CAAE7H,MAAO,KAAMb,MAAO,OAClC2I,UAAU,KAjBhB,qBAsBF,SAACZ,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,UACE,SAACC,EAAA,EAAD,CACEzH,GAAE,aACFC,MAAO,cACPC,YAAa,cACbC,KAAI,aACJf,MAAO6F,GACP7E,SAAU,SAACuG,GACTzB,GAAiByB,EAAMpG,OAAOnB,QAGhCb,MAAO0F,EAAgB,YAAkB,IAV3C,iBAaF,SAACkD,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,UACE,SAACC,EAAA,EAAD,CACEzH,GAAE,aACFC,MAAO,iBACPC,YAAa,iBACbC,KAAI,aACJf,MAAOkG,GACPlF,SAAU,SAACuG,GACLA,EAAMpG,OAAOyH,SAASC,OACxB1C,GAAiBoB,EAAMpG,OAAOnB,QAGlCE,QAAS,SAETf,MAAO0F,EAAgB,YAAkB,GACzCyD,eACE,SAACC,EAAA,EAAD,CACE3H,GAAI,YACJ4H,aAAc,aACdC,aAAc,KACdC,UAAW,CAAC,CAAE7H,MAAO,KAAMb,MAAO,OAClC2I,UAAU,KApBhB,iBAyBF,SAACZ,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,UACE,SAACC,EAAA,EAAD,CACEzH,GAAE,qBACFC,MAAO,kBACPC,YAAa,uBACbC,KAAI,qBACJf,MAAOoG,GACPpF,SAAU,SAACuG,GACTlB,GAAyBkB,EAAMpG,OAAOnB,QAGxCb,MAAO0F,EAAgB,oBAA0B,IAVnD,yBAaF,SAACkD,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,UACE,SAACC,EAAA,EAAD,CACEzH,GAAE,mBACFC,MAAO,gBACPC,YAAa,qBACbC,KAAI,mBACJf,MAAOsG,GACPtF,SAAU,SAACuG,GACThB,GAAuBgB,EAAMpG,OAAOnB,QAGtCb,MAAO0F,EAAgB,kBAAwB,IAVjD,uBAaF,UAACkD,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,WACE,iBAAMzH,UAAW5B,EAAQ+J,WAAzB,qBACA,SAACC,EAAA,EAAD,CACE9J,UAAW8F,EACX7F,aAAc8F,EACdhG,UAAW,SACXG,MAAOqH,GACPpH,SAAUqH,SAGd,UAACsB,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,WACE,iBAAMzH,UAAW5B,EAAQ+J,WAAzB,0BACA,SAACC,EAAA,EAAD,CACE9J,UAAWgG,EACX/F,aAAcgG,EACdlG,UAAW,cACXG,MAAOuH,GACPtH,SAAUuH,SAGd,UAACoB,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAItH,UAAW5B,EAAQqJ,aAAtC,WACE,iBAAMzH,UAAW5B,EAAQ+J,WAAzB,4BACA,SAACC,EAAA,EAAD,CACE9J,UAAWkG,EACXjG,aAAckG,EACdpG,UAAW,gBACXG,MAAOyH,GACPxH,SAAUyH,YAIhB,SAACkB,EAAA,GAAD,CAAME,GAAI,GAAItH,UAAW5B,EAAQtB,gBAAjC,UACE,SAACuL,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,YACRzK,MAAM,UACNkK,UA/NO,WACjB,GAC2C,IAAzCQ,OAAOC,KAAKvE,GAAkBlF,QACM,IAApCwJ,OAAOC,KAAK5C,IAAa7G,QACgB,IAAzCwJ,OAAOC,KAAK1C,IAAkB/G,QACY,IAA1CwJ,OAAOC,KAAKxC,IAAmBjH,OAC/B,CAMA,OADA0J,EAAAA,EAAAA,IAJgC,CAC9BC,aAAc,gBACdC,cAAe,MAGV,EAEP,OAAO,EAiNYC,GAJb,8B,6EC5DNC,EAAqB,CACzBC,qBAAAA,EAAAA,IAGIjI,GAAYC,EAAAA,EAAAA,IAAQ,KAAM+H,GAEhC,GAAenM,EAAAA,EAAAA,IAhTA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,kCACRoF,EAAAA,IADO,IAEV+G,YAAa,CACXrL,SAAU,GACVC,WAAY,IACZE,MAAO,OACPmL,UAAW,GAEbC,cAAe,CACbC,eAAgB,OAChBrL,MAAO,SAETsL,aAAc,CACZhH,OAAQ,uBAEViH,eAAgB,CACdC,QAAS,wBAERC,EAAAA,IACAC,EAAAA,KACAnH,EAAAA,EAAAA,IAAmBzF,EAAM0F,QAAQ,QA2RxC,CAAkCxB,GAxRT,SAAC,GAKA,IAJxB1C,EAIuB,EAJvBA,QACAqL,EAGuB,EAHvBA,MACAnI,EAEuB,EAFvBA,OACAL,EACuB,EADvBA,cAEA,GACEgD,EAAAA,EAAAA,WAAkB,GADpB,eAAOyF,EAAP,KAAoCC,EAApC,KAEA,GAAwB1F,EAAAA,EAAAA,WAAkB,GAA1C,eAAO2F,EAAP,KAAaC,EAAb,KACA,GACE5F,EAAAA,EAAAA,YADF,eAAO6F,EAAP,KAAuBC,EAAvB,KAEA,GAAsC9F,EAAAA,EAAAA,WAAkB,GAAxD,eAAO+F,EAAP,KAAoBC,EAApB,KACA,GACEhG,EAAAA,EAAAA,WAAkB,GADpB,eAAOiG,EAAP,KAA8BC,EAA9B,KAGMtG,EAAa4F,EAAMW,OAAN,WACbtG,EAAkB2F,EAAMW,OAAN,iBAOxBvL,EAAAA,EAAAA,YAAU,WACJqL,GACFpD,EAAAA,EAAAA,OAEI,MAFJ,6BAG0BhD,EAH1B,oBAGqDD,EAHrD,gBAKGoD,MAAK,SAACoD,GACLV,EAA+BU,EAAIC,mBACnCP,EAAkBM,GAClBF,GAAyB,MAE1BjD,OAAM,SAACC,IACN4B,EAAAA,EAAAA,IAAqB5B,GACrBgD,GAAyB,QAI9B,CAACD,IAwBJ,OACE,UAAC,EAAAnK,SAAD,WACG6J,GAAmB,OAAXtI,GAAmBoI,IAC1B,SAAC,EAAD,CACEtL,QAASA,EACT8E,KAAM0G,EACNzG,QArDsB,WAC5B0G,GAAQ,GACRM,GAAyB,IAoDnB7I,OAAQA,EACR8B,OAAqB,OAAd0G,QAAc,IAAdA,OAAA,EAAAA,EAAgB1G,QAAS,GAChCC,cAA4B,OAAdyG,QAAc,IAAdA,OAAA,EAAAA,EAAgBzG,eAAgB,GAC9CC,WAAyB,OAAdwG,QAAc,IAAdA,OAAA,EAAAA,EAAgBxG,YAAa,GACxCI,eACgB,OAAdoG,QAAc,IAAdA,GAAAA,EAAgBpG,eACZ4B,SAAQ,OAACwE,QAAD,IAACA,OAAD,EAACA,EAAgBpG,gBACzB,EAENH,QAAsB,OAAduG,QAAc,IAAdA,OAAA,EAAAA,EAAgBvG,SAAU,GAClCC,aAA2B,OAAdsG,QAAc,IAAdA,OAAA,EAAAA,EAAgBtG,cAAe,GAC5CC,cAA4B,OAAdqG,QAAc,IAAdA,OAAA,EAAAA,EAAgBrG,eAAgB,GAC9CE,oBAAkC,OAAdmG,QAAc,IAAdA,OAAA,EAAAA,EAAgBnG,qBAAsB,GAC1DE,WAAYA,EACZC,gBAAiBA,EACjBF,kBAAgC,OAAdkG,QAAc,IAAdA,OAAA,EAAAA,EAAgBlG,mBAAoB,GACtDG,YAA0B,OAAd+F,QAAc,IAAdA,OAAA,EAAAA,EAAgB/C,uBAAwB,GACpD/C,YAA0B,OAAd8F,QAAc,IAAdA,OAAA,EAAAA,EAAgB9C,uBAAwB,KAGvDgD,IACC,SAACO,EAAA,EAAD,CACEC,OAAQR,EACRvJ,MACEiJ,EACI,iCACA,gCAENe,YAAaf,EAA8B,UAAY,SACvDgB,WAAW,SACXvH,QAAS,kBAAM8G,GAAe,IAC9BU,UA5DiB,WACvB,IAAMC,EAAa,CACjBN,kBAAmBZ,EACnBmB,QAAQ,GAEV/D,EAAAA,EAAAA,OAEI,MAFJ,6BAG0BhD,EAH1B,oBAGqDD,EAHrD,eAII+G,GAED3D,MAAK,WACJ0C,GAAgCD,GAChCS,GAAyB,GACzBF,GAAe,GACfE,GAAyB,MAE1BjD,OAAM,SAACC,IACN4B,EAAAA,EAAAA,IAAqB5B,OA2CnB2D,qBACE,SAACC,EAAA,EAAD,UACGrB,EACG,qGACA,iEAMZ,eAAI1J,UAAW5B,EAAQ4M,aAAvB,yBACA,iBAAKhL,UAAW5B,EAAQmL,YAAxB,WACE,SAAC0B,EAAA,EAAD,CACE/K,MAAO,wBACPgL,gBAAiB,CAAC,UAAW,YAC7BC,QAASzB,EACTrK,MAAO,oBACPY,GAAG,oBACHG,KAAK,oBACLC,SAAU,SAACC,GACT2J,GAAe,IAEjBmB,YAAY,KAEb1B,IACC,SAAC2B,EAAA,EAAD,CACEC,QAAS,gCACTC,KAAM,OACN5K,QAAS,WACPkJ,GAAQ,IAEV2B,MAAM,SAAC,KAAD,IACN1N,MAAM,UACNyK,QAAS,iBAIdmB,QAAkD+B,IAAnB3B,IAC9B,SAAC4B,EAAA,EAAD,CAAO1L,UAAW5B,EAAQiL,eAA1B,UACE,SAACjC,EAAA,GAAD,CAAMC,WAAS,EAAf,UACE,SAACD,EAAA,GAAD,CAAMI,MAAI,EAACF,GAAI,GAAf,UACE,kBAAO9J,MAAO,OAAd,UACE,2BACGyD,GACC,yBACE,eAAIjB,UAAW5B,EAAQ8D,YAAayJ,QAAS,EAA7C,UACE,SAACC,EAAA,EAAD,SAIJ,UAAC,EAAA7L,SAAD,WAC2B,MAAxB+J,EAAe1G,QACd,2BACE,eAAIpD,UAAW5B,EAAQyN,SAAvB,qBACA,wBAAK/B,EAAe1G,WAGQ,MAA/B0G,EAAezG,eACd,2BACE,eAAIrD,UAAW5B,EAAQyN,SAAvB,6BACA,+BAAK/B,QAAL,IAAKA,OAAL,EAAKA,EAAgBzG,kBAGI,MAA5ByG,EAAexG,YACd,2BACE,eAAItD,UAAW5B,EAAQyN,SAAvB,0BACA,+BAAK/B,QAAL,IAAKA,OAAL,EAAKA,EAAgBxG,eAGS,MAAjCwG,EAAepG,iBACd,2BACE,eAAI1D,UAAW5B,EAAQyN,SAAvB,kCAGA,+BAAK/B,QAAL,IAAKA,OAAL,EAAKA,EAAgBpG,oBAGa,MAArCoG,EAAenG,qBACd,2BACE,eAAI3D,UAAW5B,EAAQyN,SAAvB,oCAGA,+BAAK/B,QAAL,IAAKA,OAAL,EAAKA,EAAgBnG,wBAGW,MAAnCmG,EAAelG,mBACd,2BACE,eAAI5D,UAAW5B,EAAQyN,SAAvB,kCAGA,+BAAK/B,QAAL,IAAKA,OAAL,EAAKA,EAAgBlG,sBAGC,MAAzBkG,EAAevG,QACduG,EAAevG,OAAOvE,OAAS,IAC7B,iCACE,yBACE,yBACE,wCAGJ,yBACE,eAAIgB,UAAW5B,EAAQyN,SAAvB,UACE,SAACC,EAAA,EAAD,CACEvJ,QAASuH,EAAevG,OACxBf,WAAW,kBAMQ,MAA9BsH,EAAetG,aACdsG,EAAetG,YAAYxE,OAAS,IAClC,iCACE,yBACE,yBACE,6CAGJ,yBACE,eAAIgB,UAAW5B,EAAQyN,SAAvB,UACE,SAACC,EAAA,EAAD,CACEvJ,QAASuH,EAAetG,YACxBhB,WAAW,uBAMiB,MAAvCsH,EAAe/C,uBACd,2BACE,eAAI/G,UAAW5B,EAAQyN,SAAvB,2BACA,+BAAK/B,QAAL,IAAKA,OAAL,EAAKA,EAAgB/C,0BAGe,MAAvC+C,EAAe9C,uBACd,2BACE,eAAIhH,UAAW5B,EAAQyN,SAAvB,8BACA,yBACGE,EAAAA,EAAAA,IAAS,OACRjC,QADQ,IACRA,OADQ,EACRA,EAAgB9C,sBAChB,QAKwB,MAA/B8C,EAAerG,cACdqG,EAAerG,aAAazE,OAAS,IACnC,2BACE,4CACA,eAAIgB,UAAW5B,EAAQyN,SAAvB,UACE,SAACC,EAAA,EAAD,CACEvJ,QAASuH,EAAerG,aACxBjB,WAAW","sources":["screens/Console/Tenants/TenantDetails/KeyPairEdit.tsx","screens/Console/Tenants/TenantDetails/KeyPairView.tsx","screens/Console/Tenants/TenantDetails/EditTenantMonitoringModal.tsx","screens/Console/Tenants/TenantDetails/TenantMonitoring.tsx"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { IKeyValue } from \"../ListTenants/types\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../utils/validationFunctions\";\nimport { clearValidationError } from \"../utils\";\n\ninterface IKeyPairEditProps {\n  classes: any;\n  paramName: string;\n  error: any;\n  setError: (e: any) => void;\n  newValues: IKeyValue[];\n  setNewValues: (vals: IKeyValue[]) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    multiContainer: {\n      display: \"flex\",\n      alignItems: \"center\" as const,\n      justifyContent: \"flex-start\" as const,\n    },\n    sizeFactorContainer: {\n      marginLeft: 8,\n    },\n    bottomContainer: {\n      display: \"flex\",\n      flexGrow: 1,\n      alignItems: \"center\",\n      \"& div\": {\n        flexGrow: 1,\n        width: \"100%\",\n      },\n    },\n    factorElements: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n    },\n    sizeNumber: {\n      fontSize: 35,\n      fontWeight: 700,\n      textAlign: \"center\",\n    },\n    sizeDescription: {\n      fontSize: 14,\n      color: \"#777\",\n      textAlign: \"center\",\n    },\n    shortened: {\n      gridTemplateColumns: \"auto auto 20px 20px\",\n      display: \"grid\",\n      gridGap: 20,\n      paddingRight: 20,\n    },\n    ...modalBasic,\n  });\n\nconst KeyPairEdit = ({\n  classes,\n  paramName,\n  newValues,\n  setNewValues,\n  error,\n  setError,\n}: IKeyPairEditProps) => {\n  const cleanValidation = (fieldName: string) => {\n    setError(clearValidationError(error, fieldName));\n  };\n\n  useEffect(() => {\n    let keyPairValidation: IValidation[] = [];\n\n    for (var i = 0; i < newValues.length; i++) {\n      keyPairValidation.push({\n        fieldKey: `key-${i.toString()}`,\n        required: false,\n        value: newValues[i].key,\n        pattern: /^[a-zA-Z0-9-_.]{1,63}$/,\n        customPatternMessage: \"Invalid key\",\n      });\n      keyPairValidation.push({\n        fieldKey: `val-${i.toString()}`,\n        required: false,\n        value: newValues[i].value,\n        pattern: /^[a-zA-Z0-9-_.]{1,63}$/,\n        customPatternMessage: \"Invalid value\",\n      });\n    }\n\n    const commonVal = commonFormValidation(keyPairValidation);\n    setError(commonVal);\n  }, [newValues, setError]);\n\n  let keyValueInputs = newValues.map((_, index) => {\n    return (\n      <Fragment key={`keyvalue-${index.toString()}`}>\n        <div className={classes.shortened}>\n          <InputBoxWrapper\n            id={`key-${index.toString()}`}\n            label={\"\"}\n            placeholder={\"Key\"}\n            name={`key-${index.toString()}`}\n            value={newValues[index].key}\n            onChange={(e) => {\n              let tempLabels = [...newValues];\n              tempLabels[index].key = e.target.value;\n              setNewValues(tempLabels);\n              cleanValidation(`key-${index.toString()}`);\n            }}\n            index={index}\n            key={`csv-key-${index.toString()}`}\n            error={error[`key-${index.toString()}`] || \"\"}\n          />\n          <InputBoxWrapper\n            id={`val-${index.toString()}`}\n            label={\"\"}\n            placeholder={\"Value\"}\n            name={`val-${index.toString()}`}\n            value={newValues[index].value}\n            onChange={(e) => {\n              let tempLabels = [...newValues];\n              tempLabels[index].value = e.target.value;\n              setNewValues(tempLabels);\n              cleanValidation(`val-${index.toString()}`);\n            }}\n            index={index}\n            key={`csv-val-${index.toString()}`}\n            error={error[`val-${index.toString()}`] || \"\"}\n          />\n          <Tooltip title={`Add ${paramName}`} aria-label=\"addlabel\">\n            <IconButton\n              size={\"small\"}\n              onClick={() => {\n                let tempLabels = [...newValues];\n                tempLabels.push({ key: \"\", value: \"\" });\n                setNewValues(tempLabels);\n              }}\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Remove\" aria-label=\"removeLabel\">\n            <IconButton\n              size={\"small\"}\n              style={{ marginLeft: 16 }}\n              onClick={() => {\n                if (newValues.length === 1) {\n                  setNewValues([{ key: \"\", value: \"\" }]);\n                }\n                if (newValues.length > 1) {\n                  let tempLabels = [...newValues];\n                  tempLabels.splice(index, 1);\n                  setNewValues(tempLabels);\n                }\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </Fragment>\n    );\n  });\n\n  return <Fragment>{keyValueInputs}</Fragment>;\n};\n\nexport default withStyles(styles)(KeyPairEdit);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  containerForHeader,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport { IKeyValue } from \"../ListTenants/types\";\n\ninterface IKeyPairView {\n  classes: any;\n  records: IKeyValue[];\n  recordName: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    centerAlign: {\n      textAlign: \"center\",\n    },\n    listHeight: {\n      height: \"50\",\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst KeyPairView = ({ classes, records, recordName }: IKeyPairView) => {\n  return (\n    <Fragment>\n      <TableWrapper\n        columns={[\n          { label: \"Key\", elementKey: \"key\" },\n          { label: \"Value\", elementKey: \"value\" },\n        ]}\n        isLoading={false}\n        records={records}\n        itemActions={[]}\n        entityName={recordName}\n        idField=\"name\"\n        customPaperHeight={classes.listHeight}\n      />\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  loadingTenant: state.tenants.tenantDetails.loadingTenant,\n  selectedTenant: state.tenants.tenantDetails.currentTenant,\n  tenant: state.tenants.tenantDetails.tenantInfo,\n  logEnabled: get(state.tenants.tenantDetails.tenantInfo, \"logEnabled\", false),\n  monitoringEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"monitoringEnabled\",\n    false\n  ),\n  encryptionEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"encryptionEnabled\",\n    false\n  ),\n  minioTLS: get(state.tenants.tenantDetails.tenantInfo, \"minioTLS\", false),\n  consoleTLS: get(state.tenants.tenantDetails.tenantInfo, \"consoleTLS\", false),\n  consoleEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"consoleEnabled\",\n    false\n  ),\n  adEnabled: get(state.tenants.tenantDetails.tenantInfo, \"idpAdEnabled\", false),\n  oidcEnabled: get(\n    state.tenants.tenantDetails.tenantInfo,\n    \"idpOidcEnabled\",\n    false\n  ),\n});\n\nconst connector = connect(mapState, null);\n\nexport default withStyles(styles)(connector(KeyPairView));\n","import React, { useEffect, useState } from \"react\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  modalStyleUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { Button, Grid } from \"@mui/material\";\nimport api from \"../../../../common/api\";\nimport { ITenant } from \"../ListTenants/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { IKeyValue } from \"../ListTenants/types\";\nimport KeyPairEdit from \"./KeyPairEdit\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport {\n  commonFormValidation,\n  IValidation,\n} from \"../../../../utils/validationFunctions\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\ninterface IEditTenantMonitoringProps {\n  tenant: ITenant;\n  classes: any;\n  open: boolean;\n  onClose: (shouldReload: boolean) => void;\n  image: string;\n  sidecarImage: string;\n  initImage: string;\n  labels: IKeyValue[];\n  annotations: IKeyValue[];\n  nodeSelector: IKeyValue[];\n  diskCapacityGB: number;\n  serviceAccountName: string;\n  tenantName: string;\n  tenantNamespace: string;\n  storageClassName: string;\n  cpuRequest: string;\n  memRequest: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    ...modalBasic,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n  });\n\nconst EditTenantMonitoringModal = ({\n  tenant,\n  classes,\n  open,\n  onClose,\n  image,\n  sidecarImage,\n  initImage,\n  labels,\n  annotations,\n  nodeSelector,\n  diskCapacityGB,\n  serviceAccountName,\n  storageClassName,\n  tenantName,\n  tenantNamespace,\n  cpuRequest,\n  memRequest,\n}: IEditTenantMonitoringProps) => {\n  const [validationErrors, setValidationErrors] = useState<any>({});\n  const [newLabels, setNewLabels] = useState<IKeyValue[]>(\n    labels.length > 0 ? [...labels] : [{ key: \"\", value: \"\" }]\n  );\n  const [newAnnotations, setNewAnnotations] = useState<IKeyValue[]>(\n    annotations.length > 0 ? [...annotations] : [{ key: \"\", value: \"\" }]\n  );\n  const [newNodeSelector, setNewNodeSelector] = useState<IKeyValue[]>(\n    nodeSelector.length > 0 ? [...nodeSelector] : [{ key: \"\", value: \"\" }]\n  );\n  const [newImage, setNewImage] = useState<string>(image);\n  const [newSidecarImage, setNewSidecarImage] = useState<string>(sidecarImage);\n  const [newInitImage, setNewInitImage] = useState<string>(initImage);\n  const [newDiskCapacityGB, setNewDiskCapacityGB] = useState<string>(\n    diskCapacityGB.toString()\n  );\n  const [newCPURequest, setNewCPURequest] = useState<string>(cpuRequest);\n  const [newMemRequest, setNewMemRequest] = useState<string>(\n    memRequest\n      ? Math.floor(parseInt(memRequest, 10) / 1000000000).toString()\n      : \"\"\n  );\n  const [newServiceAccountName, setNewServiceAccountName] =\n    useState<string>(serviceAccountName);\n  const [newStorageClassName, setNewStorageClassName] =\n    useState<string>(storageClassName);\n\n  const [labelsError, setLabelsError] = useState<any>({});\n  const [annotationsError, setAnnotationsError] = useState<any>({});\n  const [nodeSelectorError, setNodeSelectorError] = useState<any>({});\n\n  const trim = (x: IKeyValue[]): IKeyValue[] => {\n    let retval: IKeyValue[] = [];\n    for (let i = 0; i < x.length; i++) {\n      if (x[i].key !== \"\") {\n        retval.push(x[i]);\n      }\n    }\n    return retval;\n  };\n\n  useEffect(() => {\n    let tenantMonitoringValidation: IValidation[] = [];\n\n    tenantMonitoringValidation.push({\n      fieldKey: `image`,\n      required: false,\n      value: newImage,\n      pattern:\n        /^([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9]?)+(\\/(([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9])?)+)*:([a-zA-Z0-9])[a-zA-Z0-9-.]{0,127}$/,\n      customPatternMessage: \"Invalid image\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `sidecarImage`,\n      required: false,\n      value: newSidecarImage,\n      pattern:\n        /^([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9]?)+(\\/(([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9])?)+)*:([a-zA-Z0-9])[a-zA-Z0-9-.]{0,127}$/,\n      customPatternMessage: \"Invalid image\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `initImage`,\n      required: false,\n      value: newInitImage,\n      pattern:\n        /^([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9]?)+(\\/(([a-zA-Z0-9])([a-zA-Z0-9-._])*([a-zA-Z0-9])?)+)*:([a-zA-Z0-9])[a-zA-Z0-9-.]{0,127}$/,\n      customPatternMessage: \"Invalid image\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `diskCapacityGB`,\n      required: true,\n      value: newDiskCapacityGB as any as string,\n      pattern: /^[0-9]*$/,\n      customPatternMessage: \"Must be an integer between 0 and 10\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `newCPURequest`,\n      required: false,\n      value: newCPURequest as any as string,\n      pattern: /^[0-9]*$/,\n      customPatternMessage: \"Must be an integer between 0 and 10\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `newMemRequest`,\n      required: false,\n      value: newMemRequest as any as string,\n      pattern: /^[0-9]*$/,\n      customPatternMessage: \"Must be an integer between 0 and 10\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `serviceAccountName`,\n      required: false,\n      value: newServiceAccountName,\n      pattern: /^[a-zA-Z0-9-.]{1,253}$/,\n      customPatternMessage: \"Invalid service account name\",\n    });\n    tenantMonitoringValidation.push({\n      fieldKey: `storageClassName`,\n      required: false,\n      value: newStorageClassName,\n      pattern: /^[a-zA-Z0-9-.]{1,253}$/,\n      customPatternMessage: \"Invalid storage class name\",\n    });\n\n    const commonVal = commonFormValidation(tenantMonitoringValidation);\n    setValidationErrors(commonVal);\n  }, [\n    newImage,\n    newSidecarImage,\n    newInitImage,\n    newDiskCapacityGB,\n    newServiceAccountName,\n    newStorageClassName,\n    newCPURequest,\n    newMemRequest,\n    setValidationErrors,\n  ]);\n\n  const checkValid = (): boolean => {\n    if (\n      Object.keys(validationErrors).length !== 0 ||\n      Object.keys(labelsError).length !== 0 ||\n      Object.keys(annotationsError).length !== 0 ||\n      Object.keys(nodeSelectorError).length !== 0\n    ) {\n      let err: ErrorResponseHandler = {\n        errorMessage: \"Invalid entry\",\n        detailedError: \"\",\n      };\n      setModalErrorSnackMessage(err);\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const submitMonitoringInfo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    api\n      .invoke(\n        \"PUT\",\n        `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`,\n        {\n          labels: trim(newLabels),\n          annotations: trim(newAnnotations),\n          nodeSelector: trim(newNodeSelector),\n          image: newImage,\n          sidecarImage: newSidecarImage,\n          initImage: newInitImage,\n          diskCapacityGB: newDiskCapacityGB,\n          serviceAccountName: newServiceAccountName,\n          storageClassName: newStorageClassName,\n          monitoringCPURequest: newCPURequest,\n          monitoringMemRequest: newMemRequest + \"Gi\",\n        }\n      )\n      .then(() => {\n        onClose(true);\n      })\n      .catch((err: ErrorResponseHandler) => {});\n  };\n\n  return (\n    <ModalWrapper\n      onClose={() => onClose(true)}\n      modalOpen={open}\n      title=\"Edit Monitoring Configuration\"\n    >\n      <form noValidate autoComplete=\"off\" onSubmit={submitMonitoringInfo}>\n        <Grid container>\n          <Grid xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id={`image`}\n                label={\"Image\"}\n                placeholder={\"Image\"}\n                name={`image`}\n                value={newImage}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setNewImage(event.target.value);\n                }}\n                key={`image`}\n                error={validationErrors[`image`] || \"\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id={`sidecarImage`}\n                label={\"Sidecar Image\"}\n                placeholder={\"Sidecar Image\"}\n                name={`sidecarImage`}\n                value={newSidecarImage}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setNewSidecarImage(event.target.value);\n                }}\n                key={`sidecarImage`}\n                error={validationErrors[`sidecarImage`] || \"\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id={`initImage`}\n                label={\"Init Image\"}\n                placeholder={\"Init Image\"}\n                name={`initImage`}\n                value={newInitImage}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setNewInitImage(event.target.value);\n                }}\n                key={`initImage`}\n                error={validationErrors[`initImage`] || \"\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id={`diskCapacityGB`}\n                label={\"Disk Capacity\"}\n                placeholder={\"Disk Capacity\"}\n                name={`diskCapacityGB`}\n                value={newDiskCapacityGB}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setNewDiskCapacityGB(event.target.value);\n                }}\n                key={`diskCapacityGB`}\n                error={validationErrors[`diskCapacityGB`] || \"\"}\n                overlayObject={\n                  <InputUnitMenu\n                    id={\"size-unit\"}\n                    onUnitChange={() => {}}\n                    unitSelected={\"Gi\"}\n                    unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                    disabled={true}\n                  />\n                }\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id={`cpuRequest`}\n                label={\"CPU Request\"}\n                placeholder={\"CPU Request\"}\n                name={`cpuRequest`}\n                value={newCPURequest}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setNewCPURequest(event.target.value);\n                }}\n                key={`cpuRequest`}\n                error={validationErrors[`cpuRequest`] || \"\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id={`memRequest`}\n                label={\"Memory Request\"}\n                placeholder={\"Memory request\"}\n                name={`memRequest`}\n                value={newMemRequest}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  if (event.target.validity.valid) {\n                    setNewMemRequest(event.target.value);\n                  }\n                }}\n                pattern={\"[0-9]*\"}\n                key={`memRequest`}\n                error={validationErrors[`memRequest`] || \"\"}\n                overlayObject={\n                  <InputUnitMenu\n                    id={\"size-unit\"}\n                    onUnitChange={() => {}}\n                    unitSelected={\"Gi\"}\n                    unitsList={[{ label: \"Gi\", value: \"Gi\" }]}\n                    disabled={true}\n                  />\n                }\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id={`serviceAccountName`}\n                label={\"Service Account\"}\n                placeholder={\"Service Account Name\"}\n                name={`serviceAccountName`}\n                value={newServiceAccountName}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setNewServiceAccountName(event.target.value);\n                }}\n                key={`serviceAccountName`}\n                error={validationErrors[`serviceAccountName`] || \"\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id={`storageClassName`}\n                label={\"Storage Class\"}\n                placeholder={\"Storage Class Name\"}\n                name={`storageClassName`}\n                value={newStorageClassName}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                  setNewStorageClassName(event.target.value);\n                }}\n                key={`storageClassName`}\n                error={validationErrors[`storageClassName`] || \"\"}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <span className={classes.inputLabel}>Labels</span>\n              <KeyPairEdit\n                newValues={newLabels}\n                setNewValues={setNewLabels}\n                paramName={\"Labels\"}\n                error={labelsError}\n                setError={setLabelsError}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <span className={classes.inputLabel}>Annotations</span>\n              <KeyPairEdit\n                newValues={newAnnotations}\n                setNewValues={setNewAnnotations}\n                paramName={\"Annotations\"}\n                error={annotationsError}\n                setError={setAnnotationsError}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <span className={classes.inputLabel}>Node Selector</span>\n              <KeyPairEdit\n                newValues={newNodeSelector}\n                setNewValues={setNewNodeSelector}\n                paramName={\"Node Selector\"}\n                error={nodeSelectorError}\n                setError={setNodeSelectorError}\n              />\n            </Grid>\n          </Grid>\n          <Grid xs={12} className={classes.buttonContainer}>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={!checkValid()}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default withStyles(styles)(EditTenantMonitoringModal);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  tenantDetailsStyles,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { DialogContentText } from \"@mui/material\";\nimport Paper from \"@mui/material/Paper\";\nimport { ITenant } from \"../ListTenants/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport EditTenantMonitoringModal from \"./EditTenantMonitoringModal\";\n\nimport api from \"../../../../common/api\";\nimport { EditIcon } from \"../../../../icons\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { ITenantMonitoringStruct } from \"../ListTenants/types\";\nimport KeyPairView from \"./KeyPairView\";\nimport { niceBytes } from \"../../../../common/utils\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport RBIconButton from \"../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport Loader from \"../../Common/Loader/Loader\";\n\ninterface ITenantMonitoring {\n  classes: any;\n  match: any;\n  tenant: ITenant | null;\n  loadingTenant: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...tenantDetailsStyles,\n    headerLabel: {\n      fontSize: 22,\n      fontWeight: 600,\n      color: \"#000\",\n      marginTop: 4,\n    },\n    breadcrumLink: {\n      textDecoration: \"none\",\n      color: \"black\",\n    },\n    tableWrapper: {\n      height: \"calc(100vh - 267px)\",\n    },\n    paperContainer: {\n      padding: \"15px 15px 15px 50px\",\n    },\n    ...actionsTray,\n    ...searchField,\n    ...containerForHeader(theme.spacing(4)),\n  });\n\nconst TenantMonitoring = ({\n  classes,\n  match,\n  tenant,\n  loadingTenant,\n}: ITenantMonitoring) => {\n  const [prometheusMonitoringEnabled, setPrometheusMonitoringEnabled] =\n    useState<boolean>(false);\n  const [edit, setEdit] = useState<boolean>(false);\n  const [monitoringInfo, setMonitoringInfo] =\n    useState<ITenantMonitoringStruct>();\n  const [confirmOpen, setConfirmOpen] = useState<boolean>(false);\n  const [refreshMonitoringInfo, setRefreshMonitoringInfo] =\n    useState<boolean>(true);\n\n  const tenantName = match.params[\"tenantName\"];\n  const tenantNamespace = match.params[\"tenantNamespace\"];\n\n  const onCloseEditAndRefresh = () => {\n    setEdit(false);\n    setRefreshMonitoringInfo(true);\n  };\n\n  useEffect(() => {\n    if (refreshMonitoringInfo) {\n      api\n        .invoke(\n          \"GET\",\n          `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`\n        )\n        .then((res: ITenantMonitoringStruct) => {\n          setPrometheusMonitoringEnabled(res.prometheusEnabled);\n          setMonitoringInfo(res);\n          setRefreshMonitoringInfo(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorSnackMessage(err);\n          setRefreshMonitoringInfo(false);\n        });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [refreshMonitoringInfo]);\n\n  const togglePrometheus = () => {\n    const configInfo = {\n      prometheusEnabled: prometheusMonitoringEnabled,\n      toggle: true,\n    };\n    api\n      .invoke(\n        \"PUT\",\n        `/api/v1/namespaces/${tenantNamespace}/tenants/${tenantName}/monitoring`,\n        configInfo\n      )\n      .then(() => {\n        setPrometheusMonitoringEnabled(!prometheusMonitoringEnabled);\n        setRefreshMonitoringInfo(true);\n        setConfirmOpen(false);\n        setRefreshMonitoringInfo(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <Fragment>\n      {edit && tenant !== null && prometheusMonitoringEnabled && (\n        <EditTenantMonitoringModal\n          classes={classes}\n          open={edit}\n          onClose={onCloseEditAndRefresh}\n          tenant={tenant}\n          image={monitoringInfo?.image || \"\"}\n          sidecarImage={monitoringInfo?.sidecarImage || \"\"}\n          initImage={monitoringInfo?.initImage || \"\"}\n          diskCapacityGB={\n            monitoringInfo?.diskCapacityGB\n              ? parseInt(monitoringInfo?.diskCapacityGB)\n              : 5\n          }\n          labels={monitoringInfo?.labels || []}\n          annotations={monitoringInfo?.annotations || []}\n          nodeSelector={monitoringInfo?.nodeSelector || []}\n          serviceAccountName={monitoringInfo?.serviceAccountName || \"\"}\n          tenantName={tenantName}\n          tenantNamespace={tenantNamespace}\n          storageClassName={monitoringInfo?.storageClassName || \"\"}\n          cpuRequest={monitoringInfo?.monitoringCPURequest || \"\"}\n          memRequest={monitoringInfo?.monitoringMemRequest || \"\"}\n        />\n      )}\n      {confirmOpen && (\n        <ConfirmDialog\n          isOpen={confirmOpen}\n          title={\n            prometheusMonitoringEnabled\n              ? \"Disable Prometheus monitoring?\"\n              : \"Enable Prometheus monitoring?\"\n          }\n          confirmText={prometheusMonitoringEnabled ? \"Disable\" : \"Enable\"}\n          cancelText=\"Cancel\"\n          onClose={() => setConfirmOpen(false)}\n          onConfirm={togglePrometheus}\n          confirmationContent={\n            <DialogContentText>\n              {prometheusMonitoringEnabled\n                ? \"Disabling monitoring will erase any custom values you have used to configure Prometheus monitoring\"\n                : \"Prometheus monitoring will be enabled with default values\"}\n            </DialogContentText>\n          }\n        />\n      )}\n\n      <h1 className={classes.sectionTitle}>Monitoring</h1>\n      <div className={classes.actionsTray}>\n        <FormSwitchWrapper\n          label={\"Prometheus Monitoring\"}\n          indicatorLabels={[\"Enabled\", \"Disabled\"]}\n          checked={prometheusMonitoringEnabled}\n          value={\"monitoring_status\"}\n          id=\"monitoring-status\"\n          name=\"monitoring-status\"\n          onChange={(e) => {\n            setConfirmOpen(true);\n          }}\n          description=\"\"\n        />\n        {prometheusMonitoringEnabled && (\n          <RBIconButton\n            tooltip={\"Edit Monitoring configuration\"}\n            text={\"Edit\"}\n            onClick={() => {\n              setEdit(true);\n            }}\n            icon={<EditIcon />}\n            color=\"primary\"\n            variant={\"contained\"}\n          />\n        )}\n      </div>\n      {prometheusMonitoringEnabled && monitoringInfo !== undefined && (\n        <Paper className={classes.paperContainer}>\n          <Grid container>\n            <Grid item xs={12}>\n              <table width={\"100%\"}>\n                <tbody>\n                  {loadingTenant ? (\n                    <tr>\n                      <td className={classes.centerAlign} colSpan={4}>\n                        <Loader />\n                      </td>\n                    </tr>\n                  ) : (\n                    <Fragment>\n                      {monitoringInfo.image != null && (\n                        <tr>\n                          <td className={classes.titleCol}>Image:</td>\n                          <td>{monitoringInfo.image}</td>\n                        </tr>\n                      )}\n                      {monitoringInfo.sidecarImage != null && (\n                        <tr>\n                          <td className={classes.titleCol}>Sidecar Image:</td>\n                          <td>{monitoringInfo?.sidecarImage}</td>\n                        </tr>\n                      )}\n                      {monitoringInfo.initImage != null && (\n                        <tr>\n                          <td className={classes.titleCol}>Init Image:</td>\n                          <td>{monitoringInfo?.initImage}</td>\n                        </tr>\n                      )}\n                      {monitoringInfo.diskCapacityGB != null && (\n                        <tr>\n                          <td className={classes.titleCol}>\n                            Disk Capacity (GB):\n                          </td>\n                          <td>{monitoringInfo?.diskCapacityGB}</td>\n                        </tr>\n                      )}\n                      {monitoringInfo.serviceAccountName != null && (\n                        <tr>\n                          <td className={classes.titleCol}>\n                            Service Account Name:\n                          </td>\n                          <td>{monitoringInfo?.serviceAccountName}</td>\n                        </tr>\n                      )}\n                      {monitoringInfo.storageClassName != null && (\n                        <tr>\n                          <td className={classes.titleCol}>\n                            Storage Class Name:\n                          </td>\n                          <td>{monitoringInfo?.storageClassName}</td>\n                        </tr>\n                      )}\n                      {monitoringInfo.labels != null &&\n                        monitoringInfo.labels.length > 0 && (\n                          <>\n                            <tr>\n                              <td>\n                                <h4>Labels</h4>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td className={classes.titleCol}>\n                                <KeyPairView\n                                  records={monitoringInfo.labels}\n                                  recordName=\"Labels\"\n                                />\n                              </td>\n                            </tr>\n                          </>\n                        )}\n                      {monitoringInfo.annotations != null &&\n                        monitoringInfo.annotations.length > 0 && (\n                          <>\n                            <tr>\n                              <td>\n                                <h4>Annotations</h4>\n                              </td>\n                            </tr>\n                            <tr>\n                              <td className={classes.titleCol}>\n                                <KeyPairView\n                                  records={monitoringInfo.annotations}\n                                  recordName=\"Annotations\"\n                                />\n                              </td>\n                            </tr>\n                          </>\n                        )}\n                      {monitoringInfo.monitoringCPURequest != null && (\n                        <tr>\n                          <td className={classes.titleCol}>CPU Request:</td>\n                          <td>{monitoringInfo?.monitoringCPURequest}</td>\n                        </tr>\n                      )}\n                      {monitoringInfo.monitoringMemRequest != null && (\n                        <tr>\n                          <td className={classes.titleCol}>Memory Request:</td>\n                          <td>\n                            {niceBytes(\n                              monitoringInfo?.monitoringMemRequest,\n                              true\n                            )}\n                          </td>\n                        </tr>\n                      )}\n                      {monitoringInfo.nodeSelector != null &&\n                        monitoringInfo.nodeSelector.length > 0 && (\n                          <tr>\n                            <h4>Node Selector:</h4>\n                            <td className={classes.titleCol}>\n                              <KeyPairView\n                                records={monitoringInfo.nodeSelector}\n                                recordName=\"Node Selector\"\n                              />\n                            </td>\n                          </tr>\n                        )}\n                    </Fragment>\n                  )}\n                </tbody>\n              </table>\n            </Grid>\n          </Grid>\n        </Paper>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(TenantMonitoring));\n"],"names":["withStyles","theme","createStyles","buttonContainer","textAlign","multiContainer","display","alignItems","justifyContent","sizeFactorContainer","marginLeft","bottomContainer","flexGrow","width","factorElements","sizeNumber","fontSize","fontWeight","sizeDescription","color","shortened","gridTemplateColumns","gridGap","paddingRight","modalBasic","classes","paramName","newValues","setNewValues","error","setError","cleanValidation","fieldName","clearValidationError","useEffect","keyPairValidation","i","length","push","fieldKey","toString","required","value","key","pattern","customPatternMessage","commonVal","commonFormValidation","keyValueInputs","map","_","index","Fragment","className","id","label","placeholder","name","onChange","e","tempLabels","target","title","size","onClick","style","splice","connector","connect","state","loadingTenant","tenants","tenantDetails","selectedTenant","currentTenant","tenant","tenantInfo","logEnabled","get","monitoringEnabled","encryptionEnabled","minioTLS","consoleTLS","consoleEnabled","adEnabled","oidcEnabled","tenantDetailsStyles","centerAlign","listHeight","height","containerForHeader","spacing","records","recordName","columns","elementKey","isLoading","itemActions","entityName","idField","customPaperHeight","modalStyleUtils","formFieldStyles","open","onClose","image","sidecarImage","initImage","labels","annotations","nodeSelector","diskCapacityGB","serviceAccountName","storageClassName","tenantName","tenantNamespace","cpuRequest","memRequest","useState","validationErrors","setValidationErrors","newLabels","setNewLabels","newAnnotations","setNewAnnotations","newNodeSelector","setNewNodeSelector","newImage","setNewImage","newSidecarImage","setNewSidecarImage","newInitImage","setNewInitImage","newDiskCapacityGB","setNewDiskCapacityGB","newCPURequest","setNewCPURequest","Math","floor","parseInt","newMemRequest","setNewMemRequest","newServiceAccountName","setNewServiceAccountName","newStorageClassName","setNewStorageClassName","labelsError","setLabelsError","annotationsError","setAnnotationsError","nodeSelectorError","setNodeSelectorError","trim","x","retval","tenantMonitoringValidation","ModalWrapper","modalOpen","noValidate","autoComplete","onSubmit","event","preventDefault","api","monitoringCPURequest","monitoringMemRequest","then","catch","err","Grid","container","xs","modalFormScrollable","item","formFieldRow","InputBoxWrapper","overlayObject","InputUnitMenu","onUnitChange","unitSelected","unitsList","disabled","validity","valid","inputLabel","KeyPairEdit","Button","type","variant","Object","keys","setModalErrorSnackMessage","errorMessage","detailedError","checkValid","mapDispatchToProps","setErrorSnackMessage","headerLabel","marginTop","breadcrumLink","textDecoration","tableWrapper","paperContainer","padding","actionsTray","searchField","match","prometheusMonitoringEnabled","setPrometheusMonitoringEnabled","edit","setEdit","monitoringInfo","setMonitoringInfo","confirmOpen","setConfirmOpen","refreshMonitoringInfo","setRefreshMonitoringInfo","params","res","prometheusEnabled","ConfirmDialog","isOpen","confirmText","cancelText","onConfirm","configInfo","toggle","confirmationContent","DialogContentText","sectionTitle","FormSwitchWrapper","indicatorLabels","checked","description","RBIconButton","tooltip","text","icon","undefined","Paper","colSpan","Loader","titleCol","KeyPairView","niceBytes"],"sourceRoot":""}
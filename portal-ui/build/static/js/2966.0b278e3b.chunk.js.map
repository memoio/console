{"version":3,"file":"static/js/2966.0b278e3b.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SetRetentionConfig.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport {\n  ErrorResponseHandler,\n  IRetentionConfig,\n} from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport Loader from \"../../Common/Loader/Loader\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...spacingUtils,\n    ...createTenantCommon,\n    ...formFieldStyles,\n    ...modalStyleUtils,\n  });\n\ninterface ISetRetentionConfigProps {\n  classes: any;\n  open: boolean;\n  bucketName: string;\n  closeModalAndRefresh: () => void;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst SetRetentionConfig = ({\n  classes,\n  open,\n  bucketName,\n  closeModalAndRefresh,\n  setModalErrorSnackMessage,\n}: ISetRetentionConfigProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loadingForm, setLoadingForm] = useState<boolean>(true);\n  const [retentionMode, setRetentionMode] = useState<string>(\"compliance\");\n  const [retentionUnit, setRetentionUnit] = useState<string>(\"days\");\n  const [retentionValidity, setRetentionValidity] = useState<number>(1);\n  const [valid, setValid] = useState<boolean>(false);\n\n  const setRetention = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${bucketName}/retention`, {\n        mode: retentionMode,\n        unit: retentionUnit,\n        validity: retentionValidity,\n      })\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  useEffect(() => {\n    if (Number.isNaN(retentionValidity) || retentionValidity < 1) {\n      setValid(false);\n      return;\n    }\n    setValid(true);\n  }, [retentionValidity]);\n\n  useEffect(() => {\n    if (loadingForm) {\n      api\n        .invoke(\"GET\", `/api/v1/buckets/${bucketName}/retention`)\n        .then((res: IRetentionConfig) => {\n          setLoadingForm(false);\n\n          // We set default values\n          setRetentionMode(res.mode);\n          setRetentionValidity(res.validity);\n          setRetentionUnit(res.unit);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingForm(false);\n        });\n    }\n  }, [loadingForm, bucketName]);\n\n  return (\n    <ModalWrapper\n      title=\"Set Retention Configuration\"\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n    >\n      {loadingForm ? (\n        <Loader style={{ width: 16, height: 16 }} />\n      ) : (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            setRetention(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.modalFormScrollable}>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <RadioGroupSelector\n                  currentSelection={retentionMode}\n                  id=\"retention_mode\"\n                  name=\"retention_mode\"\n                  label=\"Retention Mode\"\n                  onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                    setRetentionMode(e.target.value as string);\n                  }}\n                  selectorOptions={[\n                    { value: \"compliance\", label: \"Compliance\" },\n                    { value: \"governance\", label: \"Governance\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <RadioGroupSelector\n                  currentSelection={retentionUnit}\n                  id=\"retention_unit\"\n                  name=\"retention_unit\"\n                  label=\"Retention Unit\"\n                  onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                    setRetentionUnit(e.target.value as string);\n                  }}\n                  selectorOptions={[\n                    { value: \"days\", label: \"Days\" },\n                    { value: \"years\", label: \"Years\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  type=\"number\"\n                  id=\"retention_validity\"\n                  name=\"retention_validity\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setRetentionValidity(e.target.valueAsNumber);\n                  }}\n                  label=\"Retention Validity\"\n                  value={String(retentionValidity)}\n                  required\n                  min=\"1\"\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh();\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={addLoading || !valid}\n              >\n                Set\n              </Button>\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            )}\n          </Grid>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(SetRetentionConfig));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs className={classes.radioOptionsLayout}>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["connector","connect","setModalErrorSnackMessage","withStyles","theme","createStyles","spacingUtils","createTenantCommon","formFieldStyles","modalStyleUtils","classes","open","bucketName","closeModalAndRefresh","useState","addLoading","setAddLoading","loadingForm","setLoadingForm","retentionMode","setRetentionMode","retentionUnit","setRetentionUnit","retentionValidity","setRetentionValidity","valid","setValid","useEffect","Number","isNaN","api","then","res","mode","validity","unit","catch","err","title","modalOpen","onClose","style","width","height","noValidate","autoComplete","onSubmit","e","preventDefault","container","item","xs","className","modalFormScrollable","formFieldRow","currentSelection","id","name","label","onChange","target","value","selectorOptions","type","valueAsNumber","String","required","min","modalButtonBar","variant","color","disabled","onClick","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","inputLabel","fontWeight","multiline","tooltip","index","error","placeholder","max","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","onKeyPress","inputProps","clsx","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","tooltipContainer","placement","fullWidth","helperText","inputRebase","size","disableFocusRipple","disableRipple","disableTouchRipple","radioStyles","root","backgroundColor","radioIcons","RadioButton","checkedIcon","radioSelectedIcon","icon","radioUnselectedIcon","optionLabel","marginRight","fontSize","checkedOption","disableOptions","displayInColumn","alignItems","radioOptionsLayout","row","display","textAlign","map","selectorOption","control","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","deleteDialogStyles","padding","content","paddingBottom","customDialogSize","snackBarCommon","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","message","customSize","paper","detailedErrorMsg","length","scroll","event","reason","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","ownerState","_extends","borderRadius","edge","marginLeft","SwitchBaseInput","cursor","opacity","left","margin","zIndex","React","ref","checkedProp","checked","defaultChecked","disabledProp","inputRef","onBlur","onFocus","readOnly","tabIndex","other","_objectWithoutPropertiesLoose","useControlled","controlled","Boolean","setCheckedState","muiFormControl","useFormControl","hasLabelFor","slots","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","centerRipple","focusRipple","role","undefined","_jsx","nativeEvent","defaultPrevented","newChecked"],"sourceRoot":""}
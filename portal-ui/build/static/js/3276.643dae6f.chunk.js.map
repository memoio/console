{"version":3,"file":"static/js/3276.643dae6f.chunk.js","mappings":"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","sources":["screens/Console/Common/DistributedOnly/DistributedOnly.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Tools/Inspect.tsx","screens/Console/Tools/KeyRevealer.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Box, Grid } from \"@mui/material\";\nimport HelpBox from \"../../../../common/HelpBox\";\n\ninterface IDistributedOnly {\n  iconComponent: any;\n  entity: string;\n}\n\nconst DistributedOnly = ({ iconComponent, entity }: IDistributedOnly) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs={12}>\n        <HelpBox\n          title={`${entity} not available`}\n          iconComponent={iconComponent}\n          help={\n            <Box\n              sx={{\n                fontSize: \"14px\",\n                display: \"flex\",\n                border: \"none\",\n                flexFlow: {\n                  xs: \"column\",\n                  md: \"row\",\n                },\n                \"& a\": {\n                  color: (theme) => theme.colors.link,\n                  textDecoration: \"underline\",\n                },\n              }}\n            >\n              <div>This feature is not available for a single-disk setup. </div>\n\n              <div>\n                Please deploy a server in{\" \"}\n                <a\n                  href=\"https://docs.min.io/minio/baremetal/installation/deploy-minio-distributed.html?ref=con\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Distributed Mode\n                </a>{\" \"}\n                to use this feature.\n              </div>\n            </Box>\n          }\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default DistributedOnly;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              sm={description !== \"\" ? 4 : 10}\n              md={description !== \"\" ? 3 : 9}\n            >\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Box, Button, DialogContentText } from \"@mui/material\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport { FileBookIcon, PasswordKeyIcon } from \"../../../icons\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  deleteDialogStyles,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { connect } from \"react-redux\";\nimport HelpBox from \"../../../common/HelpBox\";\nimport {\n  deleteCookie,\n  getCookieValue,\n  performDownload,\n} from \"../../../common/utils\";\nimport DistributedOnly from \"../Common/DistributedOnly/DistributedOnly\";\nimport { AppState } from \"../../../store\";\nimport { InspectMenuIcon } from \"../../../icons/SidebarMenus\";\nimport KeyRevealer from \"./KeyRevealer\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    switchLabel: {\n      fontWeight: \"normal\",\n    },\n    ...deleteDialogStyles,\n    ...modalStyleUtils,\n  });\n\nconst mapState = (state: AppState) => ({\n  distributedSetup: state.system.distributedSetup,\n});\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\nconst connector = connect(mapState, mapDispatchToProps);\n\nconst Inspect = ({\n  classes,\n  setErrorSnackMessage,\n  distributedSetup,\n}: {\n  classes: any;\n  setErrorSnackMessage: any;\n  distributedSetup: boolean;\n}) => {\n  const [volumeName, setVolumeName] = useState<string>(\"\");\n  const [inspectPath, setInspectPath] = useState<string>(\"\");\n  const [isEncrypt, setIsEncrypt] = useState<boolean>(true);\n\n  const [decryptionKey, setDecryptionKey] = useState<string>(\"\");\n\n  const [insFileName, setInsFileName] = useState<string>(\"\");\n\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [volumeError, setVolumeError] = useState<string>(\"\");\n  const [pathError, setPathError] = useState<string>(\"\");\n\n  /**\n   * Validation Effect\n   */\n  useEffect(() => {\n    let isVolValid;\n    let isPathValid;\n\n    isVolValid = volumeName.trim().length > 0;\n    if (!isVolValid) {\n      setVolumeError(\"This field is required\");\n    } else if (volumeName.slice(0, 1) === \"/\") {\n      isVolValid = false;\n      setVolumeError(\"Volume/Bucket name cannot start with /\");\n    }\n    isPathValid = inspectPath.trim().length > 0;\n    if (!inspectPath) {\n      setPathError(\"This field is required\");\n    } else if (inspectPath.slice(0, 1) === \"/\") {\n      isPathValid = false;\n      setPathError(\"Path cannot start with /\");\n    }\n    const isValid = isVolValid && isPathValid;\n\n    if (isVolValid) {\n      setVolumeError(\"\");\n    }\n    if (isPathValid) {\n      setPathError(\"\");\n    }\n\n    setIsFormValid(isValid);\n  }, [volumeName, inspectPath]);\n\n  const makeRequest = async (url: string) => {\n    return await fetch(url, { method: \"GET\" });\n  };\n\n  const performInspect = async () => {\n    const file = encodeURIComponent(inspectPath);\n    const volume = encodeURIComponent(volumeName);\n\n    const urlOfInspectApi = `/api/v1/admin/inspect?volume=${volume}&file=${file}&encrypt=${isEncrypt}`;\n\n    makeRequest(urlOfInspectApi)\n      .then(async (res) => {\n        if (!res.ok) {\n          const resErr: any = await res.json();\n\n          setErrorSnackMessage({\n            errorMessage: resErr.message,\n            detailedError: resErr.code,\n          });\n        }\n        const blob: Blob = await res.blob();\n\n        //@ts-ignore\n        const filename = res.headers.get(\"content-disposition\").split('\"')[1];\n        const decryptKey = getCookieValue(filename) || \"\";\n\n        performDownload(blob, filename);\n        setInsFileName(filename);\n        setDecryptionKey(decryptKey);\n      })\n      .catch((err) => {\n        setErrorSnackMessage(err);\n      });\n  };\n\n  const resetForm = () => {\n    setVolumeName(\"\");\n    setInspectPath(\"\");\n    setIsEncrypt(true);\n  };\n\n  const onCloseDecKeyModal = () => {\n    deleteCookie(insFileName);\n    setDecryptionKey(\"\");\n    resetForm();\n  };\n\n  return (\n    <Fragment>\n      <PageHeader label={\"Inspect\"} />\n      <PageLayout>\n        {!distributedSetup ? (\n          <DistributedOnly\n            iconComponent={<InspectMenuIcon />}\n            entity={\"Inspect\"}\n          />\n        ) : (\n          <Fragment>\n            <Box\n              sx={{\n                border: \"1px solid #eaeaea\",\n                padding: \"25px\",\n              }}\n            >\n              <form\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                  e.preventDefault();\n                  performInspect();\n                }}\n              >\n                <Box>\n                  <InputBoxWrapper\n                    id=\"inspect_volume\"\n                    name=\"inspect_volume\"\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_volume\",\n                    }}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setVolumeName(e.target.value);\n                    }}\n                    label=\"Volume or Bucket Name\"\n                    value={volumeName}\n                    error={volumeError}\n                    required\n                    placeholder={\"test-bucket\"}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginTop: \"15px\",\n                  }}\n                >\n                  <InputBoxWrapper\n                    id=\"inspect_path\"\n                    name=\"inspect_path\"\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_path\",\n                    }}\n                    error={pathError}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setInspectPath(e.target.value);\n                    }}\n                    label=\"File or Path to inspect\"\n                    value={inspectPath}\n                    required\n                    placeholder={\"test*/xl.meta\"}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    marginTop: \"25px\",\n                  }}\n                >\n                  <FormSwitchWrapper\n                    classes={{\n                      inputLabel: classes.switchLabel,\n                    }}\n                    extraInputProps={{\n                      \"data-test-id\": \"inspect_encrypt\",\n                    }}\n                    label=\"Encrypt\"\n                    indicatorLabels={[\"True\", \"False\"]}\n                    checked={isEncrypt}\n                    value={\"true\"}\n                    id=\"inspect_encrypt\"\n                    name=\"inspect_encrypt\"\n                    onChange={(e) => {\n                      setIsEncrypt(!isEncrypt);\n                    }}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"flex-end\",\n                    marginTop: \"55px\",\n                  }}\n                >\n                  <Button\n                    sx={{\n                      marginRight: \"15px\",\n                    }}\n                    type=\"button\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    data-test-id=\"inspect-clear-button\"\n                    onClick={resetForm}\n                  >\n                    Clear\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    data-test-id=\"inspect-submit-button\"\n                    disabled={!isFormValid}\n                  >\n                    Inspect\n                  </Button>\n                </Box>\n              </form>\n            </Box>\n            <Box\n              sx={{\n                marginTop: \"55px\",\n              }}\n            >\n              <HelpBox\n                title={\"Inspect\"}\n                iconComponent={<FileBookIcon />}\n                help={\n                  <Fragment>\n                    <Box\n                      sx={{\n                        marginTop: \"15px\",\n                      }}\n                    >\n                      Inspect files on MinIO server\n                    </Box>\n\n                    <Box\n                      sx={{\n                        marginTop: \"15px\",\n                        fontWeight: 500,\n                      }}\n                    >\n                      Examples\n                    </Box>\n\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexFlow: \"column\",\n                        flex: \"2\",\n                        marginTop: \"15px\",\n                        \"& .step-number\": {\n                          color: \"#ffffff\",\n                          height: \"25px\",\n                          width: \"25px\",\n                          background: \"#081C42\",\n                          marginRight: \"10px\",\n                          textAlign: \"center\",\n                          fontWeight: 600,\n                          borderRadius: \"50%\",\n                        },\n\n                        \"& .step-row\": {\n                          fontSize: \"16px\",\n                          display: \"flex\",\n                          marginTop: \"15px\",\n                          marginBottom: \"15px\",\n                        },\n\n                        \"& code\": {\n                          paddingLeft: \"10px\",\n                          paddingRight: \"10px\",\n                          paddingTop: \"4px\",\n                          paddingBottom: \"3px\",\n                          borderRadius: \"2px\",\n                          backgroundColor: \"#eaeaea\",\n                          color: \"#082146\",\n                        },\n                        \"& .spacer\": {\n                          marginBottom: \"5px\",\n                        },\n                      }}\n                    >\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download 'xl.meta' for a specific object from all\n                            the drives in a zip file:\n                          </div>\n                        </Box>\n\n                        <Box\n                          sx={{\n                            flex: \"1\",\n                            marginTop: \"15px\",\n                            marginLeft: \"35px\",\n                            \"& input\": {\n                              color: \"#737373\",\n                            },\n                          }}\n                        >\n                          <Box>\n                            <label>Volume/bucket Name :</label>{\" \"}\n                            <code>test-bucket</code>\n                            <div className=\"spacer\" />\n                            <label>Path : </label>\n                            <code>test*/xl.meta</code>\n                          </Box>\n                        </Box>\n                      </Box>\n\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download all constituent parts for a specific\n                            object, and optionally encrypt the downloaded zip:\n                          </div>\n                        </Box>\n\n                        <Box\n                          sx={{\n                            flex: \"1\",\n                            marginTop: \"15px\",\n                            marginLeft: \"35px\",\n                            \"& input\": {\n                              color: \"#737373\",\n                            },\n                          }}\n                        >\n                          <Box>\n                            <label>Volume/bucket Name : </label>\n                            <code>test-bucket</code>\n                            <div className=\"spacer\" />\n                            <label>Path :</label> <code>test*/*/part.*</code>\n                          </Box>\n                        </Box>\n                      </Box>\n                      <Box>\n                        <Box className=\"step-row\">\n                          <div className=\"step-text\">\n                            To Download recursively all objects at a prefix.\n                            <br />\n                            NOTE: This can be an expensive operation use it with\n                            caution.\n                          </div>\n                        </Box>\n\n                        <Box\n                          sx={{\n                            flex: \"1\",\n                            marginTop: \"15px\",\n                            marginLeft: \"35px\",\n                            \"& input\": {\n                              color: \"#737373\",\n                            },\n                          }}\n                        >\n                          <Box>\n                            <label>Volume/bucket Name : </label>\n                            <code>test-bucket</code>\n                            <div className=\"spacer\" />\n                            <label>Path :</label> <code>test/**</code>\n                          </Box>\n                        </Box>\n                      </Box>\n                    </Box>\n\n                    <Box\n                      sx={{\n                        marginTop: \"30px\",\n                      }}\n                    >\n                      You can learn more at our{\" \"}\n                      <a\n                        href=\"https://github.com/minio/minio/tree/master/docs/debugging?ref=con\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        documentation\n                      </a>\n                      .\n                    </Box>\n                  </Fragment>\n                }\n              />\n            </Box>\n          </Fragment>\n        )}\n        {decryptionKey ? (\n          <ModalWrapper\n            modalOpen={true}\n            title=\"Inspect Decryption Key\"\n            onClose={onCloseDecKeyModal}\n            titleIcon={<PasswordKeyIcon />}\n          >\n            <DialogContentText>\n              <Box>\n                This will be displayed only once. It cannot be recovered.\n                <br />\n                Use secure medium to share this key.\n              </Box>\n              <Box>\n                <KeyRevealer value={decryptionKey} />\n              </Box>\n            </DialogContentText>\n          </ModalWrapper>\n        ) : null}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(connector(Inspect));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Box, Button } from \"@mui/material\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport { CopyIcon } from \"../../../icons\";\nimport { useState } from \"react\";\nconst KeyRevealer = ({ value }: { value: string }) => {\n  const [shown, setShown] = useState<boolean>(false);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexFlow: {\n          sm: \"row\",\n          xs: \"column\",\n        },\n      }}\n    >\n      <InputBoxWrapper\n        id=\"inspect-dec-key\"\n        name=\"inspect-dec-key\"\n        placeholder=\"\"\n        label=\"\"\n        type={shown ? \"text\" : \"password\"}\n        onChange={() => {}}\n        value={value}\n        overlayIcon={<CopyIcon />}\n        extraInputProps={{\n          readOnly: true,\n        }}\n        overlayAction={() => navigator.clipboard.writeText(value)}\n      />\n\n      <Button\n        sx={{\n          marginLeft: \"10px\",\n        }}\n        variant=\"contained\"\n        onClick={() => setShown(!shown)}\n      >\n        Show/Hide\n      </Button>\n    </Box>\n  );\n};\n\nexport default KeyRevealer;\n"],"names":["iconComponent","entity","container","alignItems","item","xs","title","help","sx","fontSize","display","border","flexFlow","md","color","theme","colors","link","textDecoration","href","target","rel","StyledSwitch","withStyles","root","width","height","padding","margin","switchBase","transform","palette","common","white","backgroundColor","boxShadow","opacity","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","justifyContent","Switch","createStyles","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","label","onChange","value","id","name","disabled","switchOnly","description","classes","indicatorLabels","extraInputProps","switchComponent","className","clsx","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","sm","htmlFor","inputLabel","tooltipContainer","placement","textAlign","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","type","autoComplete","multiline","index","error","required","placeholder","min","max","overlayId","overlayIcon","overlayObject","noLabelMinWidth","pattern","autoFocus","onKeyPress","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","onClick","size","connector","connect","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","deleteDialogStyles","content","paddingBottom","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","useState","openSnackbar","setOpenSnackbar","useEffect","message","customSize","paper","detailedErrorMsg","open","scroll","event","reason","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","mapDispatchToProps","setErrorSnackMessage","distributedSetup","switchLabel","modalStyleUtils","volumeName","setVolumeName","inspectPath","setInspectPath","isEncrypt","setIsEncrypt","decryptionKey","setDecryptionKey","insFileName","setInsFileName","isFormValid","setIsFormValid","volumeError","setVolumeError","pathError","setPathError","isVolValid","isPathValid","trim","slice","isValid","makeRequest","url","fetch","method","performInspect","file","encodeURIComponent","volume","urlOfInspectApi","then","res","ok","json","resErr","errorMessage","detailedError","code","blob","filename","headers","get","split","decryptKey","getCookieValue","performDownload","catch","err","resetForm","Fragment","noValidate","onSubmit","e","preventDefault","marginRight","variant","flex","background","paddingLeft","paddingRight","paddingTop","deleteCookie","shown","setShown","readOnly","navigator","clipboard","writeText"],"sourceRoot":""}
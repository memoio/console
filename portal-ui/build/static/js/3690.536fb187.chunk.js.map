{"version":3,"file":"static/js/3690.536fb187.chunk.js","mappings":"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","sources":["../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/@babel/runtime/helpers/esm/typeof.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/Grid/types.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../javascript/esm|/home/lighthouse/project/console/portal-ui/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import * as React from 'react';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isVisible\": PropTypes.bool.isRequired,\n  \"key\": PropTypes.string.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowIndex\": PropTypes.number.isRequired,\n  \"style\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.node.isRequired);\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : PropTypes.objectOf(PropTypes.object.isRequired);\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": PropTypes.objectOf(PropTypes.node.isRequired).isRequired,\n  \"cellRenderer\": PropTypes.func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"deferredMeasurementCache\": PropTypes.object,\n  \"horizontalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"isScrolling\": PropTypes.bool.isRequired,\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n  \"parent\": PropTypes.object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof ScalingCellSizeAndPositionManager === \"function\" ? PropTypes.instanceOf(ScalingCellSizeAndPositionManager).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"styleCache\": PropTypes.objectOf(PropTypes.object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": PropTypes.number.isRequired,\n  \"visibleColumnIndices\": PropTypes.object.isRequired,\n  \"visibleRowIndices\": PropTypes.object.isRequired\n};\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOfType([PropTypes.func, PropTypes.number]);\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": PropTypes.number.isRequired,\n  \"clientWidth\": PropTypes.number.isRequired,\n  \"scrollHeight\": PropTypes.number.isRequired,\n  \"scrollLeft\": PropTypes.number.isRequired,\n  \"scrollTop\": PropTypes.number.isRequired,\n  \"scrollWidth\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": PropTypes.bool.isRequired,\n  \"vertical\": PropTypes.bool.isRequired,\n  \"size\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": PropTypes.number.isRequired,\n  \"columnOverscanStopIndex\": PropTypes.number.isRequired,\n  \"columnStartIndex\": PropTypes.number.isRequired,\n  \"columnStopIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStartIndex\": PropTypes.number.isRequired,\n  \"rowOverscanStopIndex\": PropTypes.number.isRequired,\n  \"rowStartIndex\": PropTypes.number.isRequired,\n  \"rowStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": PropTypes.oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": PropTypes.oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": PropTypes.number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": PropTypes.number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": PropTypes.number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": PropTypes.number.isRequired,\n  \"overscanStopIndex\": PropTypes.number.isRequired\n};\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : PropTypes.oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": PropTypes.number,\n  \"stop\": PropTypes.number\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellPosition };\nexport { bpfrpt_proptype_CellRendererParams };\nexport { bpfrpt_proptype_CellRenderer };\nexport { bpfrpt_proptype_CellCache };\nexport { bpfrpt_proptype_StyleCache };\nexport { bpfrpt_proptype_CellRangeRendererParams };\nexport { bpfrpt_proptype_CellRangeRenderer };\nexport { bpfrpt_proptype_CellSizeGetter };\nexport { bpfrpt_proptype_CellSize };\nexport { bpfrpt_proptype_NoContentRenderer };\nexport { bpfrpt_proptype_Scroll };\nexport { bpfrpt_proptype_ScrollbarPresenceChange };\nexport { bpfrpt_proptype_RenderedSection };\nexport { bpfrpt_proptype_OverscanIndicesGetterParams };\nexport { bpfrpt_proptype_OverscanIndices };\nexport { bpfrpt_proptype_OverscanIndicesGetter };\nexport { bpfrpt_proptype_Alignment };\nexport { bpfrpt_proptype_VisibleCellRange };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";"],"names":["componentWillMount","state","this","constructor","getDerivedStateFromProps","props","undefined","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","prototype","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","call","__suppressDeprecationWarning","_classCallCheck","instance","Constructor","TypeError","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","self","assertThisInitialized","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","value","writable","configurable","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","_objectWithoutProperties","source","excluded","key","i","target","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","cachedIndices","callback","indices","keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","document","createElement","scrollbarSize","recalc","canUseDOM","scrollDiv","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","nonce","hostWindow","_window","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","offsetHeight","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","addEventListener","__animationListener__","removeResizeListener","detachEvent","splice","removeEventListener","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","_slicedToArray","arr","_s","_e","_arr","_n","_d","next","done","err","unsupportedIterableToArray","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","ASC","DESC","SortIndicator","sortDirection","SortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll"],"sourceRoot":""}
{"version":3,"file":"static/js/4966.c825dc1c.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","utils/validationFunctions.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              sm={description !== \"\" ? 4 : 10}\n              md={description !== \"\" ? 3 : 9}\n            >\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { selectorTypes } from \"../SelectWrapper/SelectWrapper\";\nimport { Menu, MenuItem } from \"@mui/material\";\n\ninterface IInputUnitBox {\n  classes: any;\n  id: string;\n  unitSelected: string;\n  unitsList: selectorTypes[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonTrigger: {\n      border: \"#F0F2F2 1px solid\",\n      borderRadius: 3,\n      color: \"#838383\",\n      backgroundColor: \"#fff\",\n      fontSize: 12,\n    },\n  });\n\nconst InputUnitMenu = ({\n  classes,\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        className={classes.buttonTrigger}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </button>\n      <Menu\n        id={`${id}-menu`}\n        aria-labelledby={`${id}-button`}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          handleClose(\"\");\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {unitsList.map((unit) => (\n          <MenuItem\n            onClick={() => handleClose(unit.value)}\n            key={`itemUnit-${unit.value}-${unit.label}`}\n          >\n            {unit.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputUnitMenu);\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n          id={\"confirm-cancel\"}\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          id={\"confirm-ok\"}\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport interface IValidation {\n  fieldKey: string;\n  required: boolean;\n  pattern?: RegExp;\n  customPatternMessage?: string;\n  customValidation?: boolean; // The validation to trigger the error\n  customValidationMessage?: string;\n  value: string;\n}\n\nexport const commonFormValidation = (fieldsValidate: IValidation[]) => {\n  let returnErrors: any = {};\n\n  fieldsValidate.forEach((field) => {\n    if (\n      field.required &&\n      typeof field.value !== \"undefined\" &&\n      field.value.trim &&\n      field.value.trim() === \"\"\n    ) {\n      returnErrors[field.fieldKey] = \"Field cannot be empty\";\n      return;\n    }\n    // if it's not required and the value is empty, we are done here\n    if (\n      !field.required &&\n      typeof field.value !== \"undefined\" &&\n      field.value.trim &&\n      field.value.trim() === \"\"\n    ) {\n      return;\n    }\n\n    if (field.customValidation && field.customValidationMessage) {\n      returnErrors[field.fieldKey] = field.customValidationMessage;\n      return;\n    }\n\n    if (field.pattern && field.customPatternMessage) {\n      const rgx = new RegExp(field.pattern, \"g\");\n\n      if (\n        field.value &&\n        field.value.trim() !== \"\" &&\n        !field.value.match(rgx) &&\n        typeof field.value !== \"undefined\"\n      ) {\n        returnErrors[field.fieldKey] = field.customPatternMessage;\n      }\n      return;\n    }\n  });\n\n  return returnErrors;\n};\n"],"names":["StyledSwitch","withStyles","theme","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","createStyles","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","label","onChange","value","id","name","disabled","switchOnly","description","classes","indicatorLabels","extraInputProps","switchComponent","className","clsx","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","container","item","xs","sm","md","htmlFor","inputLabel","tooltipContainer","title","placement","textAlign","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","type","autoComplete","multiline","index","error","required","placeholder","min","max","overlayId","overlayIcon","overlayObject","noLabelMinWidth","pattern","autoFocus","onKeyPress","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","onClick","size","buttonTrigger","unitSelected","unitsList","onUnitChange","React","anchorEl","setAnchorEl","open","Boolean","handleClose","newUnit","Fragment","undefined","event","currentTarget","onClose","anchorOrigin","vertical","horizontal","transformOrigin","map","unit","deleteDialogStyles","isOpen","onCancel","onConfirm","isLoading","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","titleIcon","reason","sx","titleText","closeContainer","closeButton","content","actions","cancelButton","variant","confirmButton","loading","loadingPosition","startIcon","connector","connect","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","paddingBottom","customDialogSize","snackBarCommon","modalOpen","children","wideLimit","noContentPadding","useState","openSnackbar","setOpenSnackbar","useEffect","message","customSize","paper","detailedErrorMsg","scroll","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","commonFormValidation","fieldsValidate","returnErrors","forEach","field","trim","fieldKey","customValidation","customValidationMessage","customPatternMessage","rgx","RegExp","match"],"sourceRoot":""}
{"version":3,"file":"static/js/5245.3fc27bf3.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Groups/AddGroup.tsx","screens/Console/Groups/UsersSelectors.tsx","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              sm={description !== \"\" ? 4 : 10}\n              md={description !== \"\" ? 3 : 9}\n            >\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport UsersSelectors from \"./UsersSelectors\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport { CreateGroupIcon } from \"../../../icons\";\n\ninterface IGroupProps {\n  open: boolean;\n  selectedGroup: any;\n  closeModalAndRefresh: any;\n  classes: any;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\ninterface MainGroupProps {\n  members: string[];\n  name: string;\n  status: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    userSelector: {\n      \"& .MuiPaper-root\": {\n        padding: 0,\n        marginBottom: 15,\n      },\n    },\n    ...formFieldStyles,\n    ...spacingUtils,\n    ...modalStyleUtils,\n  });\n\nconst AddGroup = ({\n  open,\n  selectedGroup,\n  closeModalAndRefresh,\n  classes,\n  setModalErrorSnackMessage,\n}: IGroupProps) => {\n  //Local States\n  const [groupName, setGroupName] = useState<string>(\"\");\n  const [groupEnabled, setGroupEnabled] = useState<boolean>(false);\n  const [saving, isSaving] = useState<boolean>(false);\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\n  const [loadingGroup, isLoadingGroup] = useState<boolean>(false);\n  const [validGroup, setValidGroup] = useState<boolean>(false);\n\n  //Effects\n  useEffect(() => {\n    if (selectedGroup !== null) {\n      isLoadingGroup(true);\n    } else {\n      setGroupName(\"\");\n      setSelectedUsers([]);\n    }\n  }, [selectedGroup]);\n\n  useEffect(() => {\n    setValidGroup(groupName.trim() !== \"\");\n  }, [groupName, selectedUsers]);\n\n  useEffect(() => {\n    if (saving) {\n      const saveRecord = () => {\n        if (selectedGroup !== null) {\n          api\n            .invoke(\"PUT\", `/api/v1/group?name=${encodeURI(groupName)}`, {\n              group: groupName,\n              members: selectedUsers,\n              status: groupEnabled ? \"enabled\" : \"disabled\",\n            })\n            .then((res) => {\n              isSaving(false);\n              closeModalAndRefresh();\n            })\n            .catch((err: ErrorResponseHandler) => {\n              isSaving(false);\n              setModalErrorSnackMessage(err);\n            });\n        } else {\n          api\n            .invoke(\"POST\", \"/api/v1/groups\", {\n              group: groupName,\n              members: selectedUsers,\n            })\n            .then((res) => {\n              isSaving(false);\n              closeModalAndRefresh();\n            })\n            .catch((err: ErrorResponseHandler) => {\n              isSaving(false);\n              setModalErrorSnackMessage(err);\n            });\n        }\n      };\n      saveRecord();\n    }\n  }, [\n    saving,\n    groupName,\n    selectedUsers,\n    groupEnabled,\n    selectedGroup,\n    closeModalAndRefresh,\n    setModalErrorSnackMessage,\n  ]);\n\n  useEffect(() => {\n    if (selectedGroup && loadingGroup) {\n      const fetchGroupInfo = () => {\n        api\n          .invoke(\"GET\", `/api/v1/group?name=${encodeURI(selectedGroup)}`)\n          .then((res: MainGroupProps) => {\n            setGroupEnabled(res.status === \"enabled\");\n            setGroupName(res.name);\n            setSelectedUsers(res.members);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setModalErrorSnackMessage(err);\n            isLoadingGroup(false);\n          });\n      };\n      fetchGroupInfo();\n    }\n  }, [loadingGroup, selectedGroup, setModalErrorSnackMessage]);\n\n  //Fetch Actions\n  const setSaving = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    isSaving(true);\n  };\n\n  const resetForm = () => {\n    if (selectedGroup === null) {\n      setGroupName(\"\");\n    }\n\n    setSelectedUsers([]);\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={closeModalAndRefresh}\n      title={selectedGroup !== null ? `Edit Group` : \"Create Group\"}\n      titleIcon={<CreateGroupIcon />}\n    >\n      {selectedGroup !== null && (\n        <div className={classes.floatingEnabled}>\n          <FormSwitchWrapper\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={groupEnabled}\n            value={\"group_enabled\"}\n            id=\"group-status\"\n            name=\"group-status\"\n            onChange={(e) => {\n              setGroupEnabled(e.target.checked);\n            }}\n            switchOnly\n          />\n        </div>\n      )}\n      <form noValidate autoComplete=\"off\" onSubmit={setSaving}>\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            {selectedGroup === null ? (\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <InputBoxWrapper\n                  id=\"group-name\"\n                  name=\"group-name\"\n                  label=\"Group Name\"\n                  autoFocus={true}\n                  value={groupName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setGroupName(e.target.value);\n                  }}\n                />\n              </Grid>\n            ) : (\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <PredefinedList label={\"Group Name\"} content={selectedGroup} />\n              </Grid>\n            )}\n            <Grid item xs={12} className={classes.userSelector}>\n              <UsersSelectors\n                selectedUsers={selectedUsers}\n                setSelectedUsers={setSelectedUsers}\n                editMode={selectedGroup !== null}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.buttonContainer}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              className={classes.spacerRight}\n              onClick={resetForm}\n            >\n              Clear\n            </Button>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={saving || !validGroup}\n            >\n              Save\n            </Button>\n          </Grid>\n          {saving && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddGroup));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { UsersList } from \"../Users/types\";\nimport { usersSort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface IGroupsProps {\n  classes: any;\n  selectedUsers: string[];\n  setSelectedUsers: any;\n  editMode?: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      // paddingTop: 15,\n      boxShadow: \"none\",\n      border: 0,\n    },\n\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    searchBox: {\n      flex: 1,\n    },\n    ...actionsTray,\n    actionsTitle: {\n      fontSize: 14,\n      alignSelf: \"center\",\n      minWidth: 160,\n      marginRight: 10,\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: theme.spacing(3),\n      border: \"1px solid #EAEAEA\",\n      fontSize: \".9rem\",\n    },\n    ...selectorsCommon,\n  });\n\nconst UsersSelectors = ({\n  classes,\n  selectedUsers,\n  setSelectedUsers,\n  editMode = false,\n  setModalErrorSnackMessage,\n}: IGroupsProps) => {\n  //Local States\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchUsers = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/users`)\n      .then((res: UsersList) => {\n        let users = get(res, \"users\", []);\n\n        if (!users) {\n          users = [];\n        }\n\n        setRecords(users.sort(usersSort));\n        isLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(err);\n        isLoading(false);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsers();\n    }\n  }, [loading, fetchUsers]);\n\n  const selUsers = !selectedUsers ? [] : selectedUsers;\n\n  //Fetch Actions\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selUsers]; // We clone the selectedGroups array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedGroupsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedUsers(elements);\n\n    return elements;\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.accessKey.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          {loading && <LinearProgress />}\n          {records !== null && records.length > 0 ? (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.actionsTray}>\n                <label className={classes.actionsTitle}>\n                  {editMode ? \"Edit Members\" : \"Assign Users\"}\n                </label>\n                <div className={classes.searchBox}>\n                  <SearchBox\n                    placeholder=\"Filter Users\"\n                    adornmentPosition=\"end\"\n                    onChange={setFilter}\n                    value={filter}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.tableBlock}>\n                <TableWrapper\n                  columns={[{ label: \"Access Key\", elementKey: \"accessKey\" }]}\n                  onSelect={selectionChanged}\n                  selectedItems={selUsers}\n                  isLoading={loading}\n                  records={filteredRecords}\n                  entityName=\"Users\"\n                  idField=\"accessKey\"\n                  customPaperHeight={classes.multiSelectTable}\n                />\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <div className={classes.noFound}>No Users to display</div>\n          )}\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(UsersSelectors));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300],\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.palette.mode === 'light' ? 0.12 : 0.2\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: theme.palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: theme.palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white,\n  opacity: theme.palette.mode === 'light' ? 0.38 : 0.3\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: theme.shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;"],"names":["StyledSwitch","withStyles","theme","root","width","height","padding","margin","switchBase","transform","color","palette","common","white","backgroundColor","boxShadow","opacity","border","thumb","marginLeft","track","borderRadius","transition","transitions","create","checked","focusVisible","switchContainer","display","alignItems","justifyContent","Switch","createStyles","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fontSize","fieldDescription","marginTop","tooltip","actionsTray","fieldBasic","label","onChange","value","id","name","disabled","switchOnly","description","classes","indicatorLabels","extraInputProps","switchComponent","className","clsx","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","container","item","xs","sm","md","htmlFor","inputLabel","tooltipContainer","title","placement","textAlign","component","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","type","autoComplete","multiline","index","error","required","placeholder","min","max","overlayId","overlayIcon","overlayObject","noLabelMinWidth","pattern","autoFocus","onKeyPress","errorInField","inputBoxContainer","noMinWidthLabel","fullWidth","helperText","inputRebase","onClick","size","predefinedList","content","multiLine","Fragment","prefinedContainer","predefinedTitle","innerContentMultiline","innerContent","connector","connect","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","deleteDialogStyles","paddingBottom","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","useState","openSnackbar","setOpenSnackbar","useEffect","message","customSize","paper","detailedErrorMsg","open","scroll","event","reason","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","mapDispatchToProps","setModalErrorSnackMessage","buttonContainer","userSelector","formFieldStyles","spacingUtils","modalStyleUtils","selectedGroup","closeModalAndRefresh","groupName","setGroupName","groupEnabled","setGroupEnabled","saving","isSaving","selectedUsers","setSelectedUsers","loadingGroup","isLoadingGroup","validGroup","setValidGroup","trim","api","encodeURI","group","members","status","then","res","catch","err","floatingEnabled","e","target","noValidate","onSubmit","preventDefault","modalFormScrollable","formFieldRow","editMode","variant","spacerRight","overflow","flexDirection","tableBlock","tableStyles","searchBox","flex","actionsTitle","alignSelf","minWidth","marginRight","noFound","spacing","selectorsCommon","records","setRecords","loading","isLoading","filter","setFilter","fetchUsers","useCallback","users","get","sort","usersSort","selUsers","filteredRecords","elementItem","accessKey","includes","adornmentPosition","columns","elementKey","onSelect","targetD","elements","push","element","selectedItems","entityName","idField","customPaperHeight","multiSelectTable","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getSwitchUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchRoot","styled","overridesResolver","styles","ownerState","edge","capitalize","_extends","boxSizing","flexShrink","zIndex","verticalAlign","colorAdjust","switchClasses","SwitchSwitchBase","SwitchBase","input","left","mode","grey","duration","shortest","alpha","action","active","hoverOpacity","main","lighten","darken","SwitchTrack","black","SwitchThumb","shadows","React","inProps","ref","useThemeProps","sx","other","_objectWithoutPropertiesLoose","slots","composedClasses","composeClasses","useUtilityClasses","icon","_jsx","_jsxs","checkedIcon"],"sourceRoot":""}
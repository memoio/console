{"version":3,"file":"static/js/7551.bfa21519.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/SummaryItems/RBIconButton.tsx","screens/Console/Buckets/ListBuckets/BucketListItem.tsx","screens/Console/Buckets/ListBuckets/BulkReplicationModal.tsx","screens/Console/Buckets/ListBuckets/BulkLifecycleModal.tsx","screens/Console/Buckets/ListBuckets/ListBuckets.tsx","screens/Console/Common/AButton/AButton.tsx","screens/Console/Common/FormComponents/CheckboxWrapper/CheckboxWrapper.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Common/VirtualizedList/VirtualizedList.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport BoxIconButton from \"../../../Common/BoxIconButton/BoxIconButton\";\nimport { IconButtonProps } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\n\ntype DeleteButtonProps = {\n  onClick: (e: any) => void;\n  text?: string;\n  disabled?: boolean;\n  size?: string;\n  tooltip?: string;\n  classes?: any;\n  icon?: React.ReactNode;\n  [x: string]: any;\n};\n\ntype RBIconProps = Partial<IconButtonProps> & DeleteButtonProps;\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const getButtonColor = (props: RBIconProps) => {\n    const { variant, color } = props;\n\n    let tgtColor = theme.palette.primary.main;\n\n    if (color === \"primary\" && variant === \"contained\") {\n      tgtColor = theme.palette.primary.contrastText;\n    } else if (color === \"primary\" && variant === \"outlined\") {\n      tgtColor = theme.palette.primary.main;\n    } else if (color === \"secondary\") {\n      tgtColor = theme.palette.secondary.main;\n    }\n\n    return tgtColor;\n  };\n\n  return {\n    root: {\n      padding: \"7px\",\n      color: (props: RBIconProps) => getButtonColor(props),\n      borderColor: (props: RBIconProps) =>\n        props.color === \"secondary\"\n          ? theme.palette.secondary.main\n          : theme.palette.primary.main,\n      \"& svg.min-icon\": {\n        width: 12,\n        marginLeft: (props: RBIconProps) => (props.text ? \"5px\" : \"0px\"),\n        \"@media (max-width: 900px)\": {\n          width: 16,\n          marginLeft: \"0px !important\",\n        },\n      },\n    },\n  };\n});\n\nconst RBIconButton = (props: RBIconProps) => {\n  const classes = useStyles(props);\n\n  const {\n    onClick,\n    text = \"\",\n    disabled = false,\n    tooltip,\n    icon = null,\n    ...restProps\n  } = props;\n\n  return (\n    <BoxIconButton\n      classes={classes}\n      tooltip={tooltip || text}\n      variant=\"outlined\"\n      onClick={onClick}\n      disabled={disabled}\n      color=\"secondary\"\n      size=\"medium\"\n      sx={{\n        border: \"1px solid #f44336\",\n        \"& span\": {\n          fontSize: 14,\n          \"@media (max-width: 900px)\": {\n            display: \"none\",\n          },\n        },\n      }}\n      {...restProps}\n    >\n      <span>{text}</span> {icon}\n    </BoxIconButton>\n  );\n};\nexport default RBIconButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment } from \"react\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  ArrowRightIcon,\n  BucketsIcon,\n  ReportedUsageIcon,\n  SettingsIcon,\n  TotalObjectsIcon,\n} from \"../../../../icons\";\nimport { Bucket } from \"../types\";\nimport { Box, Grid, Typography } from \"@mui/material\";\nimport {\n  calculateBytes,\n  niceBytes,\n  prettyNumber,\n} from \"../../../../common/utils\";\nimport CheckboxWrapper from \"../../Common/FormComponents/CheckboxWrapper/CheckboxWrapper\";\nimport { Link } from \"react-router-dom\";\nimport {\n  IAM_PERMISSIONS,\n  IAM_ROLES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\nimport RBIconButton from \"../BucketDetails/SummaryItems/RBIconButton\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      marginBottom: 30,\n      padding: 20,\n      color: theme.palette.primary.main,\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 2,\n      \"& .min-icon\": {\n        height: 14,\n        width: 14,\n        marginRight: 4,\n      },\n      \"& .MuiTypography-body2\": {\n        fontSize: 14,\n      },\n      \"& .MuiCardHeader-content\": {\n        wordWrap: \"break-word\",\n        overflowWrap: \"break-word\",\n        wordBreak: \"break-all\",\n        font: \"normal normal bold 24px/27px Lato\",\n        color: theme.palette.primary.main,\n\n        \"& .MuiTypography-root\": {\n          fontSize: 19,\n          fontWeight: \"bold\",\n          \"& .min-icon\": {\n            position: \"relative\",\n            top: 4,\n            marginRight: 4,\n            height: \"24px !important\",\n          },\n        },\n      },\n      \"& .MuiCardHeader-root\": {\n        background:\n          \"transparent linear-gradient(0deg, #EEF1F44E 0%, #FFFFFF 100%) 0% 0% no-repeat padding-box\",\n      },\n    },\n    checkBoxElement: {\n      width: 32,\n      height: 32,\n      float: \"left\",\n      overflow: \"hidden\",\n      \"& div\": {\n        position: \"absolute\",\n      },\n    },\n    viewButton: {\n      width: 111,\n      color: \"white\",\n      marginLeft: 8,\n      fontSize: 12,\n      fontWeight: \"normal\",\n      boxShadow: \"unset\",\n      borderRadius: 4,\n    },\n    manageButton: {\n      borderRadius: 4,\n      width: 111,\n      color: theme.palette.grey[\"700\"],\n      textTransform: \"unset\",\n      fontSize: 12,\n      fontWeight: \"normal\",\n      \"& .MuiButton-endIcon\": {\n        \"& .min-icon\": {\n          fontSize: 18,\n        },\n      },\n    },\n    metric: {\n      \"& .min-icon\": {\n        color: \"#000000\",\n        width: 13,\n        marginRight: 5,\n      },\n    },\n    metricLabel: {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      color: \"#000000\",\n    },\n    metricText: {\n      fontSize: 24,\n      fontWeight: \"bold\",\n    },\n    unit: {\n      fontSize: 12,\n      fontWeight: \"normal\",\n    },\n    bucketName: {\n      padding: 0,\n      margin: 0,\n      fontSize: 22,\n    },\n    bucketIcon: {\n      \"& .min-icon\": {\n        height: 48,\n        width: 48,\n      },\n    },\n    bucketInfo: {\n      display: \"flex\",\n      \"@media (max-width: 900px)\": {\n        flexFlow: \"column-reverse\",\n      },\n    },\n    bucketStats: {\n      marginTop: 15,\n      borderTop: \"1px solid rgb(234,234,234, .7)\",\n      paddingTop: 14,\n    },\n    bucketActionButtons: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n\n      \"@media (max-width: 900px)\": {\n        marginTop: \"-33px\",\n      },\n    },\n  });\n\ninterface IBucketListItem {\n  bucket: Bucket;\n  classes: any;\n  onSelect: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  selected: boolean;\n  bulkSelect: boolean;\n}\n\nconst BucketListItem = ({\n  classes,\n  bucket,\n  onSelect,\n  selected,\n  bulkSelect,\n}: IBucketListItem) => {\n  const usage = niceBytes(`${bucket.size}` || \"0\");\n  const usageScalar = usage.split(\" \")[0];\n  const usageUnit = usage.split(\" \")[1];\n\n  const quota = get(bucket, \"details.quota.quota\", \"0\");\n  const quotaForString = calculateBytes(quota);\n\n  const accessToStr = (bucket: Bucket): string => {\n    if (bucket.rw_access?.read && !bucket.rw_access?.write) {\n      return \"R\";\n    } else if (!bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"W\";\n    } else if (bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"R/W\";\n    }\n    return \"\";\n  };\n  const onCheckboxClick = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSelect(e);\n  };\n\n  return (\n    <Grid container className={clsx(classes.root, \"bucket-item\")}>\n      <Grid item xs={12}>\n        <Grid container justifyContent={\"space-between\"}>\n          <Grid item xs={12} sm={7}>\n            <Grid container>\n              <Grid item xs={12}>\n                {bulkSelect && (\n                  <div\n                    className={classes.checkBoxElement}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                    }}\n                  >\n                    <CheckboxWrapper\n                      checked={selected}\n                      id={`select-${bucket.name}`}\n                      label={\"\"}\n                      name={`select-${bucket.name}`}\n                      onChange={onCheckboxClick}\n                      value={bucket.name}\n                    />\n                  </div>\n                )}\n                <h1 className={classes.bucketName}>{bucket.name}</h1>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container className={classes.bucketInfo}>\n                  <Grid item xs={12} sm>\n                    <Typography variant=\"body2\">\n                      Created: {bucket.creation_date}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12} sm>\n                    <Typography variant=\"body2\">\n                      Access: {accessToStr(bucket)}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} sm={5} className={classes.bucketActionButtons}>\n            <Link\n              to={`/buckets/${bucket.name}/browse`}\n              style={{ textDecoration: \"none\" }}\n            >\n              <RBIconButton\n                tooltip={\"Browse\"}\n                onClick={() => {}}\n                text={\"Browse\"}\n                icon={<ArrowRightIcon />}\n                color={\"primary\"}\n                variant={\"contained\"}\n              />\n            </Link>\n            <Box display={{ xs: \"none\", sm: \"block\" }}>\n              <div style={{ marginBottom: 10 }} />\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12} className={classes.bucketStats}>\n        <Grid container justifyContent={\"flex-start\"} spacing={4}>\n          <Grid item className={classes.bucketIcon}>\n            <BucketsIcon />\n          </Grid>\n          <Grid item textAlign={\"left\"} className={classes.metric}>\n            <ReportedUsageIcon />\n            <span className={classes.metricLabel}>Usage</span>\n            <div className={classes.metricText}>\n              {usageScalar}\n              <span className={classes.unit}>{usageUnit}</span>\n              {quota !== \"0\" && (\n                <Fragment>\n                  {\" \"}\n                  / {quotaForString.total}\n                  <span className={classes.unit}>{quotaForString.unit}</span>\n                </Fragment>\n              )}\n            </div>\n          </Grid>\n          <Grid item textAlign={\"left\"} className={classes.metric}>\n            <TotalObjectsIcon />\n            <span className={classes.metricLabel}>Objects</span>\n            <div className={classes.metricText}>\n              {bucket.objects ? prettyNumber(bucket.objects) : 0}\n            </div>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(BucketListItem);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { SelectChangeEvent, Tooltip } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport {\n  modalBasic,\n  wizardCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { BulkReplicationItem, BulkReplicationResponse } from \"../types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\nimport api from \"../../../../common/api\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { SelectorTypes } from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { getBytes, k8sScalarUnitsExcluding } from \"../../../../common/utils\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\ninterface IBulkReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (clearSelection: boolean) => any;\n  classes: any;\n  buckets: string[];\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    remoteBucketList: {\n      display: \"grid\",\n      gridTemplateColumns: \"auto auto 45px\",\n      alignItems: \"center\",\n      justifyContent: \"stretch\",\n    },\n    errorIcon: {\n      color: \"#C72C48\",\n    },\n    successIcon: {\n      color: \"#42C91A\",\n    },\n    hide: {\n      opacity: 0,\n      transitionDuration: \"0.3s\",\n    },\n    ...modalBasic,\n    ...wizardCommon,\n  });\n\nconst AddBulkReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  buckets,\n  setModalErrorSnackMessage,\n}: IBulkReplicationModal) => {\n  const [bucketsToAlter, setBucketsToAlter] = useState<string[]>([]);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [externalLoading, setExternalLoading] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [replicationMode, setReplicationMode] = useState<string>(\"async\");\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n  const [relationBuckets, setRelationBuckets] = useState<string[]>([]);\n  const [remoteBucketsOpts, setRemoteBucketOpts] = useState<string[]>([]);\n  const [responseItem, setResponseItem] = useState<BulkReplicationItem[]>([]);\n\n  const optionsForBucketsDrop: SelectorTypes[] = remoteBucketsOpts.map(\n    (remoteBucketName: string) => {\n      return {\n        label: remoteBucketName,\n        value: remoteBucketName,\n      };\n    }\n  );\n\n  useEffect(() => {\n    if (relationBuckets.length === 0) {\n      const bucketsAlter: string[] = [];\n      const relationBucketsAlter: string[] = [];\n\n      buckets.forEach((item: string) => {\n        bucketsAlter.push(item);\n        relationBucketsAlter.push(\"\");\n      });\n\n      setRelationBuckets(relationBucketsAlter);\n      setBucketsToAlter(bucketsAlter);\n    }\n  }, [buckets, relationBuckets.length]);\n\n  const addRecord = () => {\n    setAddLoading(true);\n    const replicate = bucketsToAlter.map((bucketName, index) => {\n      return {\n        originBucket: bucketName,\n        destinationBucket: relationBuckets[index],\n      };\n    });\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n    const hc = parseInt(healthCheck);\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n    };\n\n    api\n      .invoke(\"POST\", \"/api/v1/buckets-replication\", remoteBucketsInfo)\n      .then((response: BulkReplicationResponse) => {\n        setAddLoading(false);\n\n        const states = response.replicationState;\n        setResponseItem(states);\n\n        const filterErrors = states.filter(\n          (itm) => itm.errorString && itm.errorString !== \"\"\n        );\n\n        if (filterErrors.length === 0) {\n          closeModalAndRefresh(true);\n        } else {\n          setTimeout(() => {\n            removeSuccessItems(states);\n          }, 500);\n        }\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  const retrieveRemoteBuckets = (\n    wizardPageJump: (page: number | string) => void\n  ) => {\n    const remoteConnectInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: targetURL,\n      useTLS,\n    };\n    setExternalLoading(true);\n\n    api\n      .invoke(\"POST\", \"/api/v1/list-external-buckets\", remoteConnectInfo)\n      .then((dataReturn) => {\n        const buckets = get(dataReturn, \"buckets\", []);\n\n        if (buckets && buckets.length > 0) {\n          const arrayReplaceBuckets = buckets.map((element: any) => {\n            return element.name;\n          });\n\n          setRemoteBucketOpts(arrayReplaceBuckets);\n        }\n\n        wizardPageJump(\"++\");\n        setExternalLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setExternalLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  const stateOfItem = (initialBucket: string) => {\n    if (responseItem.length > 0) {\n      const bucketResponse = responseItem.find(\n        (item) => item.originBucket === initialBucket\n      );\n\n      if (bucketResponse) {\n        const errString = get(bucketResponse, \"errorString\", \"\");\n\n        if (errString) {\n          return errString;\n        }\n\n        return \"\";\n      }\n    }\n    return \"n/a\";\n  };\n\n  const LogoToShow = ({ errString }: { errString: string }) => {\n    switch (errString) {\n      case \"\":\n        return (\n          <div className={classes.successIcon}>\n            <CheckCircleOutlineIcon />\n          </div>\n        );\n      case \"n/a\":\n        return null;\n      default:\n        if (errString) {\n          return (\n            <div className={classes.errorIcon}>\n              <Tooltip title={errString} placement=\"top-start\">\n                <ErrorOutlineIcon />\n              </Tooltip>\n            </div>\n          );\n        }\n    }\n    return null;\n  };\n\n  const updateItem = (indexItem: number, value: string) => {\n    const updatedList = [...relationBuckets];\n    updatedList[indexItem] = value;\n    setRelationBuckets(updatedList);\n  };\n\n  const itemDisplayBulk = (indexItem: number) => {\n    if (remoteBucketsOpts.length > 0) {\n      return (\n        <Fragment>\n          <SelectWrapper\n            label=\"\"\n            id={`assign-bucket-${indexItem}`}\n            name={`assign-bucket-${indexItem}`}\n            value={relationBuckets[indexItem]}\n            onChange={(e: SelectChangeEvent<string>) => {\n              updateItem(indexItem, e.target.value as string);\n            }}\n            options={optionsForBucketsDrop}\n            disabled={addLoading}\n          />\n        </Fragment>\n      );\n    }\n    return (\n      <Fragment>\n        <InputBoxWrapper\n          id={`assign-bucket-${indexItem}`}\n          name={`assign-bucket-${indexItem}`}\n          label=\"\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            updateItem(indexItem, event.target.value);\n          }}\n          value={relationBuckets[indexItem]}\n          disabled={addLoading}\n        />\n      </Fragment>\n    );\n  };\n\n  const removeSuccessItems = (responseItem: BulkReplicationItem[]) => {\n    let newBucketsToAlter = [...bucketsToAlter];\n    let newRelationBuckets = [...relationBuckets];\n\n    responseItem.forEach((successElement) => {\n      const errorString = get(successElement, \"errorString\", \"\");\n\n      if (!errorString || errorString === \"\") {\n        const indexToRemove = newBucketsToAlter.indexOf(\n          successElement.originBucket\n        );\n\n        newBucketsToAlter.splice(indexToRemove, 1);\n        newRelationBuckets.splice(indexToRemove, 1);\n      }\n    });\n\n    setBucketsToAlter(newBucketsToAlter);\n    setRelationBuckets(newRelationBuckets);\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Set Multiple Bucket Replication\"\n    >\n      <GenericWizard\n        loadingStep={addLoading || externalLoading}\n        wizardSteps={[\n          {\n            label: \"Remote Configuration\",\n            componentRender: (\n              <Fragment>\n                <Grid item xs={12}>\n                  <PredefinedList\n                    label=\"Local Buckets to replicate\"\n                    content={bucketsToAlter.join(\", \")}\n                  />\n                </Grid>\n                <h4>Remote Endpoint Configuration</h4>\n                <span className={classes.descriptionText}>\n                  Please avoid the use of root credentials for this feature\n                </span>\n                <br />\n                <br />\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"accessKey\"\n                    name=\"accessKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccessKey(e.target.value);\n                    }}\n                    label=\"Access Key\"\n                    value={accessKey}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"secretKey\"\n                    name=\"secretKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setSecretKey(e.target.value);\n                    }}\n                    label=\"Secret Key\"\n                    value={secretKey}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"targetURL\"\n                    name=\"targetURL\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setTargetURL(e.target.value);\n                    }}\n                    placeholder=\"play.min.io:9000\"\n                    label=\"Target URL\"\n                    value={targetURL}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSwitchWrapper\n                    checked={useTLS}\n                    id=\"useTLS\"\n                    name=\"useTLS\"\n                    label=\"Use TLS\"\n                    onChange={(e) => {\n                      setUseTLS(e.target.checked);\n                    }}\n                    value=\"yes\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"region\"\n                    name=\"region\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setRegion(e.target.value);\n                    }}\n                    label=\"Region\"\n                    value={region}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <SelectWrapper\n                    id=\"replication_mode\"\n                    name=\"replication_mode\"\n                    onChange={(e: SelectChangeEvent<string>) => {\n                      setReplicationMode(e.target.value as string);\n                    }}\n                    label=\"Replication Mode\"\n                    value={replicationMode}\n                    options={[\n                      { label: \"Asynchronous\", value: \"async\" },\n                      { label: \"Synchronous\", value: \"sync\" },\n                    ]}\n                  />\n                </Grid>\n                {replicationMode === \"async\" && (\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      type=\"number\"\n                      id=\"bandwidth_scalar\"\n                      name=\"bandwidth_scalar\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        if (e.target.validity.valid) {\n                          setBandwidthScalar(e.target.value as string);\n                        }\n                      }}\n                      label=\"Bandwidth\"\n                      value={bandwidthScalar}\n                      min=\"0\"\n                      pattern={\"[0-9]*\"}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"quota_unit\"}\n                          onUnitChange={(newValue) => {\n                            setBandwidthUnit(newValue);\n                          }}\n                          unitSelected={bandwidthUnit}\n                          unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                          disabled={false}\n                        />\n                      }\n                    />\n                  </Grid>\n                )}\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"healthCheck\"\n                    name=\"healthCheck\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setHealthCheck(e.target.value as string);\n                    }}\n                    label=\"Health Check Duration\"\n                    value={healthCheck}\n                  />\n                </Grid>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Next\",\n                enabled: !externalLoading,\n                action: retrieveRemoteBuckets,\n              },\n            ],\n          },\n          {\n            label: \"Bucket Assignments\",\n            componentRender: (\n              <Fragment>\n                <h3>Remote Bucket Assignments</h3>\n                <span className={classes.descriptionText}>\n                  Please select / type the desired remote bucket were you want\n                  the local data to be replicated.\n                </span>\n                <div className={classes.remoteBucketList}>\n                  {bucketsToAlter.map((bucketName: string, index: number) => {\n                    const errorItem = stateOfItem(bucketName);\n                    return (\n                      <Fragment\n                        key={`buckets-assignation-${index.toString()}-${bucketName}`}\n                      >\n                        <div className={errorItem === \"\" ? classes.hide : \"\"}>\n                          {bucketName}\n                        </div>\n                        <div className={errorItem === \"\" ? classes.hide : \"\"}>\n                          {itemDisplayBulk(index)}\n                        </div>\n                        <div className={errorItem === \"\" ? classes.hide : \"\"}>\n                          {responseItem.length > 0 && (\n                            <LogoToShow errString={errorItem} />\n                          )}\n                        </div>\n                      </Fragment>\n                    );\n                  })}\n                </div>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"back\",\n                label: \"Back\",\n                enabled: true,\n              },\n              {\n                type: \"next\",\n                label: \"Create\",\n                enabled: !addLoading,\n                action: addRecord,\n              },\n            ],\n          },\n        ]}\n        forModal\n      />\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(AddBulkReplicationModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { SelectChangeEvent, Tooltip } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\nimport api from \"../../../../common/api\";\nimport GenericWizard from \"../../Common/GenericWizard/GenericWizard\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { ITiersDropDown } from \"../BucketDetails/AddLifecycleModal\";\nimport {\n  ITierElement,\n  ITierResponse,\n} from \"../../Configurations/TiersConfiguration/types\";\nimport { MultiBucketResult } from \"../types\";\n\ninterface IBulkReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (clearSelection: boolean) => any;\n  classes: any;\n  buckets: string[];\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    resultGrid: {\n      display: \"grid\",\n      gridTemplateColumns: \"45px auto\",\n      alignItems: \"center\",\n      justifyContent: \"stretch\",\n    },\n    errorIcon: {\n      paddingTop: 5,\n      color: \"#C72C48\",\n    },\n    successIcon: {\n      paddingTop: 5,\n      color: \"#42C91A\",\n    },\n    hide: {\n      opacity: 0,\n      transitionDuration: \"0.3s\",\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\nconst AddBulkReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  buckets,\n  setModalErrorSnackMessage,\n}: IBulkReplicationModal) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [results, setResults] = useState<MultiBucketResult | null>(null);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\n        .then((res: ITierResponse) => {\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: ITierElement) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingTiers(false);\n          setModalErrorSnackMessage(err);\n        });\n    }\n  }, [loadingTiers, setModalErrorSnackMessage]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  const LogoToShow = ({ errString }: { errString: string }) => {\n    switch (errString) {\n      case \"\":\n        return (\n          <div className={classes.successIcon}>\n            <CheckCircleOutlineIcon />\n          </div>\n        );\n      case \"n/a\":\n        return null;\n      default:\n        if (errString) {\n          return (\n            <div className={classes.errorIcon}>\n              <Tooltip title={errString} placement=\"top-start\">\n                <ErrorOutlineIcon />\n              </Tooltip>\n            </div>\n          );\n        }\n    }\n    return null;\n  };\n\n  const createLifecycleRules = (to: any) => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry = {\n        expiry_days: parseInt(expiryDays),\n      };\n\n      rules = {\n        ...expiry,\n        noncurrentversion_expiration_days: parseInt(NCExpirationDays),\n      };\n    } else {\n      let transition = {\n        transition_days: parseInt(transitionDays),\n      };\n\n      rules = {\n        ...transition,\n        noncurrentversion_transition_days: parseInt(NCTransitionDays),\n        noncurrentversion_transition_storage_class: NCTransitionSC,\n        storage_class: storageClass,\n      };\n    }\n\n    const lifecycleInsert = {\n      buckets,\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      ...rules,\n    };\n\n    api\n      .invoke(\"POST\", `/api/v1/buckets/multi-lifecycle`, lifecycleInsert)\n      .then((res: MultiBucketResult) => {\n        setAddLoading(false);\n        setResults(res);\n        to(\"++\");\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Set Lifecycle to multiple buckets\"\n    >\n      <GenericWizard\n        loadingStep={addLoading || loadingTiers}\n        wizardSteps={[\n          {\n            label: \"Lifecycle Configuration\",\n            componentRender: (\n              <Fragment>\n                <Grid item xs={12}>\n                  <PredefinedList\n                    label=\"Local Buckets to replicate\"\n                    content={buckets.join(\", \")}\n                  />\n                </Grid>\n                <h4>Remote Endpoint Configuration</h4>\n                <Grid container>\n                  <Grid item xs={12} className={classes.formScrollable}>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <fieldset className={classes.fieldGroup}>\n                        <legend className={classes.descriptionText}>\n                          Lifecycle Configuration\n                        </legend>\n\n                        <Grid item xs={12}>\n                          <RadioGroupSelector\n                            currentSelection={ilmType}\n                            id=\"quota_type\"\n                            name=\"quota_type\"\n                            label=\"ILM Rule\"\n                            onChange={(\n                              e: React.ChangeEvent<{ value: unknown }>\n                            ) => {\n                              setIlmType(e.target.value as string);\n                            }}\n                            selectorOptions={[\n                              { value: \"expiry\", label: \"Expiry\" },\n                              { value: \"transition\", label: \"Transition\" },\n                            ]}\n                          />\n                        </Grid>\n                        {ilmType === \"expiry\" ? (\n                          <Fragment>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <InputBoxWrapper\n                                type=\"number\"\n                                id=\"expiry_days\"\n                                name=\"expiry_days\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setExpiryDays(e.target.value);\n                                }}\n                                label=\"Expiry Days\"\n                                value={expiryDays}\n                                min=\"0\"\n                              />\n                            </Grid>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <InputBoxWrapper\n                                type=\"number\"\n                                id=\"noncurrentversion_expiration_days\"\n                                name=\"noncurrentversion_expiration_days\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setNCExpirationDays(e.target.value);\n                                }}\n                                label=\"Non-current Expiration Days\"\n                                value={NCExpirationDays}\n                                min=\"0\"\n                              />\n                            </Grid>\n                          </Fragment>\n                        ) : (\n                          <Fragment>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <InputBoxWrapper\n                                type=\"number\"\n                                id=\"transition_days\"\n                                name=\"transition_days\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setTransitionDays(e.target.value);\n                                }}\n                                label=\"Transition Days\"\n                                value={transitionDays}\n                                min=\"0\"\n                              />\n                            </Grid>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <InputBoxWrapper\n                                type=\"number\"\n                                id=\"noncurrentversion_transition_days\"\n                                name=\"noncurrentversion_transition_days\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setNCTransitionDays(e.target.value);\n                                }}\n                                label=\"Non-current Transition Days\"\n                                value={NCTransitionDays}\n                                min=\"0\"\n                              />\n                            </Grid>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <InputBoxWrapper\n                                id=\"noncurrentversion_t_SC\"\n                                name=\"noncurrentversion_t_SC\"\n                                onChange={(\n                                  e: React.ChangeEvent<HTMLInputElement>\n                                ) => {\n                                  setNCTransitionSC(e.target.value);\n                                }}\n                                placeholder=\"Set Non-current Version Transition Storage Class\"\n                                label=\"Non-current Version Transition Storage Class\"\n                                value={NCTransitionSC}\n                              />\n                            </Grid>\n                            <Grid item xs={12} className={classes.formFieldRow}>\n                              <SelectWrapper\n                                label=\"Storage Class\"\n                                id=\"storage_class\"\n                                name=\"storage_class\"\n                                value={storageClass}\n                                onChange={(e: SelectChangeEvent<string>) => {\n                                  setStorageClass(e.target.value as string);\n                                }}\n                                options={tiersList}\n                              />\n                            </Grid>\n                          </Fragment>\n                        )}\n                      </fieldset>\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <fieldset className={classes.fieldGroup}>\n                        <legend className={classes.descriptionText}>\n                          File Configuration\n                        </legend>\n\n                        <Grid item xs={12}>\n                          <InputBoxWrapper\n                            id=\"prefix\"\n                            name=\"prefix\"\n                            onChange={(\n                              e: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setPrefix(e.target.value);\n                            }}\n                            label=\"Prefix\"\n                            value={prefix}\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <QueryMultiSelector\n                            name=\"tags\"\n                            label=\"Tags\"\n                            elements={tags}\n                            onChange={(vl: string) => {\n                              setTags(vl);\n                            }}\n                            keyPlaceholder=\"Tag Key\"\n                            valuePlaceholder=\"Tag Value\"\n                            withBorder\n                          />\n                        </Grid>\n                        <Grid item xs={12}>\n                          <FormSwitchWrapper\n                            value=\"expired_delete_marker\"\n                            id=\"expired_delete_marker\"\n                            name=\"expired_delete_marker\"\n                            checked={expiredObjectDM}\n                            onChange={(\n                              event: React.ChangeEvent<HTMLInputElement>\n                            ) => {\n                              setExpiredObjectDM(event.target.checked);\n                            }}\n                            label={\"Expired Object Delete Marker\"}\n                          />\n                        </Grid>\n                      </fieldset>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Create Rules\",\n                enabled: !loadingTiers && !addLoading && isFormValid,\n                action: createLifecycleRules,\n              },\n            ],\n          },\n          {\n            label: \"Results\",\n            componentRender: (\n              <Fragment>\n                <h3>Multi Bucket lifecycle Assignments Results</h3>\n                <Grid container>\n                  <Grid item xs={12} className={classes.formScrollable}>\n                    <h4>Buckets Results</h4>\n                    {results?.results.map((resultItem) => {\n                      return (\n                        <div className={classes.resultGrid}>\n                          {LogoToShow({ errString: resultItem.error || \"\" })}\n                          <span>{resultItem.bucketName}</span>\n                        </div>\n                      );\n                    })}\n                  </Grid>\n                </Grid>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Done\",\n                enabled: !addLoading,\n                action: () => closeModalAndRefresh(true),\n              },\n            ],\n          },\n        ]}\n        forModal\n      />\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(AddBulkReplicationModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { Bucket, BucketList } from \"../types\";\nimport {\n  AddIcon,\n  BucketsIcon,\n  LifecycleConfigIcon,\n  SelectAllIcon,\n} from \"../../../../icons\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport {\n  containerForHeader,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport BucketListItem from \"./BucketListItem\";\nimport BulkReplicationModal from \"./BulkReplicationModal\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport RefreshIcon from \"../../../../icons/RefreshIcon\";\nimport AButton from \"../../Common/AButton/AButton\";\nimport MultipleBucketsIcon from \"../../../../icons/MultipleBucketsIcon\";\nimport SelectMultipleIcon from \"../../../../icons/SelectMultipleIcon\";\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport PageLayout from \"../../Common/Layout/PageLayout\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\nimport RBIconButton from \"../BucketDetails/SummaryItems/RBIconButton\";\nimport BulkLifecycleModal from \"./BulkLifecycleModal\";\nimport hasPermission from \"../../../../common/SecureComponent/accessControl\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    bulkSelect: {\n      marginLeft: 8,\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.main,\n      },\n      \"&.MuiButton-contained\": {\n        backgroundColor: theme.palette.primary.main,\n      },\n    },\n    addBucket: {\n      marginLeft: 8,\n    },\n    bucketList: {\n      marginTop: 25,\n      height: \"calc(100vh - 210px)\",\n    },\n    searchField: {\n      ...searchField.searchField,\n      minWidth: 380,\n      \"@media (max-width: 900px)\": {\n        minWidth: 220,\n      },\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IListBucketsProps {\n  classes: any;\n  history: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst ListBuckets = ({\n  classes,\n  history,\n  setErrorSnackMessage,\n}: IListBucketsProps) => {\n  const [records, setRecords] = useState<Bucket[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [filterBuckets, setFilterBuckets] = useState<string>(\"\");\n  const [selectedBuckets, setSelectedBuckets] = useState<string[]>([]);\n  const [replicationModalOpen, setReplicationModalOpen] =\n    useState<boolean>(false);\n  const [lifecycleModalOpen, setLifecycleModalOpen] = useState<boolean>(false);\n\n  const [bulkSelect, setBulkSelect] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loading) {\n      const fetchRecords = () => {\n        setLoading(true);\n        api\n          .invoke(\"GET\", `/api/v1/buckets`)\n          .then((res: BucketList) => {\n            setLoading(false);\n            setRecords(res.buckets || []);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            setLoading(false);\n            setErrorSnackMessage(err);\n          });\n      };\n      fetchRecords();\n    }\n  }, [loading, setErrorSnackMessage]);\n\n  const filteredRecords = records.filter((b: Bucket) => {\n    if (filterBuckets === \"\") {\n      return true;\n    } else {\n      return b.name.indexOf(filterBuckets) >= 0;\n    }\n  });\n\n  const selectListBuckets = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedBuckets]; // We clone the selectedBuckets array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedBucketsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedBuckets(elements);\n\n    return elements;\n  };\n\n  const closeBulkReplicationModal = (unselectAll: boolean) => {\n    setReplicationModalOpen(false);\n\n    if (unselectAll) {\n      setSelectedBuckets([]);\n    }\n  };\n\n  const closeBulkLifecycleModal = (unselectAll: boolean) => {\n    setLifecycleModalOpen(false);\n\n    if (unselectAll) {\n      setSelectedBuckets([]);\n    }\n  };\n\n  const renderItemLine = (index: number) => {\n    const bucket = filteredRecords[index] || null;\n    if (bucket) {\n      return (\n        <BucketListItem\n          bucket={bucket}\n          onSelect={selectListBuckets}\n          selected={selectedBuckets.includes(bucket.name)}\n          bulkSelect={bulkSelect}\n        />\n      );\n    }\n    return null;\n  };\n\n  const selectAllBuckets = () => {\n    if (selectedBuckets.length === filteredRecords.length) {\n      setSelectedBuckets([]);\n      return;\n    }\n\n    const selectAllBuckets = filteredRecords.map((bucket) => {\n      return bucket.name;\n    });\n\n    setSelectedBuckets(selectAllBuckets);\n  };\n\n  const canCreateBucket = hasPermission(\"*\", [IAM_SCOPES.S3_CREATE_BUCKET]);\n\n  return (\n    <Fragment>\n      {replicationModalOpen && (\n        <BulkReplicationModal\n          open={replicationModalOpen}\n          buckets={selectedBuckets}\n          closeModalAndRefresh={closeBulkReplicationModal}\n        />\n      )}\n      {lifecycleModalOpen && (\n        <BulkLifecycleModal\n          buckets={selectedBuckets}\n          closeModalAndRefresh={closeBulkLifecycleModal}\n          open={lifecycleModalOpen}\n        />\n      )}\n      <PageHeader label={\"Buckets\"} />\n      <PageLayout>\n        <Grid item xs={12} className={classes.actionsTray} display=\"flex\">\n          <SearchBox\n            onChange={setFilterBuckets}\n            placeholder=\"Search Buckets\"\n            overrideClass={classes.searchField}\n            value={filterBuckets}\n          />\n\n          <Grid\n            item\n            xs={12}\n            display={\"flex\"}\n            alignItems={\"center\"}\n            justifyContent={\"flex-end\"}\n          >{ /*\n            <RBIconButton\n              tooltip={\n                bulkSelect ? \"Unselect Buckets\" : \"Select Multiple Buckets\"\n              }\n              onClick={() => {\n                setBulkSelect(!bulkSelect);\n                setSelectedBuckets([]);\n              }}\n              text={\"\"}\n              icon={<SelectMultipleIcon />}\n              color={\"primary\"}\n              variant={bulkSelect ? \"contained\" : \"outlined\"}\n            />\n\n            {bulkSelect && (\n              <RBIconButton\n                tooltip={\n                  selectedBuckets.length === filteredRecords.length\n                    ? \"Unselect All Buckets\"\n                    : \"Select All Buckets\"\n                }\n                onClick={selectAllBuckets}\n                text={\"\"}\n                icon={<SelectAllIcon />}\n                color={\"primary\"}\n                variant={\"outlined\"}\n              />\n            )}\n\n            <RBIconButton\n              tooltip={\"Set Lifecycle\"}\n              onClick={() => {\n                setLifecycleModalOpen(true);\n              }}\n              text={\"\"}\n              icon={<LifecycleConfigIcon />}\n              disabled={selectedBuckets.length === 0}\n              color={\"primary\"}\n              variant={\"outlined\"}\n            />\n\n            <RBIconButton\n              tooltip={\"Set Replication\"}\n              onClick={() => {\n                setReplicationModalOpen(true);\n              }}\n              text={\"\"}\n              icon={<MultipleBucketsIcon />}\n              disabled={selectedBuckets.length === 0}\n              color={\"primary\"}\n              variant={\"outlined\"}\n            />\n\n            <RBIconButton\n              tooltip={\"Refresh\"}\n              onClick={() => {\n                setLoading(true);\n              }}\n              text={\"\"}\n              icon={<RefreshIcon />}\n              color={\"primary\"}\n              variant={\"outlined\"}\n            />\n\n            <RBIconButton\n              tooltip={\"Create Bucket\"}\n              onClick={() => {\n                history.push(\"/add-bucket\");\n              }}\n              text={\"Create Bucket\"}\n              icon={<AddIcon />}\n              color={\"primary\"}\n              variant={\"contained\"}\n              disabled={!canCreateBucket}\n            />\n            */\n            }\n          </Grid>\n        </Grid>\n\n        {loading && <LinearProgress />}\n        {!loading && (\n          <Grid item xs={12} className={classes.bucketList}>\n            {filteredRecords.length !== 0 && (\n              <VirtualizedList\n                rowRenderFunction={renderItemLine}\n                totalItems={filteredRecords.length}\n              />\n            )}\n            {filteredRecords.length === 0 && filterBuckets !== \"\" && (\n              <Grid\n                container\n                justifyContent={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"No Results\"}\n                    help={\n                      <Fragment>\n                        No buckets match the filtering condition\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n            {filteredRecords.length === 0 && filterBuckets === \"\" && (\n              <Grid\n                container\n                justifyContent={\"center\"}\n                alignContent={\"center\"}\n                alignItems={\"center\"}\n              >\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"Buckets\"}\n                    help={\n                      <Fragment>\n                        MinIO uses buckets to organize objects. A bucket is\n                        similar to a folder or directory in a filesystem, where\n                        each bucket can hold an arbitrary number of objects.\n                        <SecureComponent\n                          scopes={[IAM_SCOPES.S3_CREATE_BUCKET]}\n                          resource={CONSOLE_UI_RESOURCE}\n                        >\n                          <br />\n                          <br />\n                          To get started,&nbsp;\n                          <AButton\n                            onClick={() => {\n                              history.push(\"/add-bucket\");\n                            }}\n                          >\n                            Create a Bucket.\n                          </AButton>\n                        </SecureComponent>\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default connector(withStyles(styles)(ListBuckets));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      border: 0,\n      backgroundColor: \"transparent\",\n      textDecoration: \"underline\",\n      cursor: \"pointer\",\n      fontSize: \"inherit\",\n      color: theme.palette.info.main,\n      fontFamily: \"Lato, sans-serif\",\n    },\n  });\n\ninterface IAButton extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst AButton = ({ classes, children, ...rest }: IAButton) => {\n  return (\n    <button {...rest} className={classes.root}>\n      {children}\n    </button>\n  );\n};\n\nexport default withStyles(styles)(AButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Checkbox, Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  checkboxIcons,\n  fieldBasic,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CheckBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  overrideLabelClasses?: string;\n  index?: number;\n  noTopMargin?: boolean;\n  checked: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    ...checkboxIcons,\n    fieldContainer: {\n      ...fieldBasic.fieldContainer,\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      margin: \"15px 0\",\n      marginBottom: 0,\n      flexBasis: \"initial\",\n    },\n    noTopMargin: {\n      marginTop: 0,\n    },\n  });\n\nconst CheckboxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  noTopMargin = false,\n  tooltip = \"\",\n  overrideLabelClasses = \"\",\n  classes,\n}: CheckBoxProps) => {\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          noTopMargin ? classes.noTopMargin : \"\"\n        }`}\n      >\n        <div>\n          <Checkbox\n            name={name}\n            id={id}\n            value={value}\n            color=\"primary\"\n            inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n            checked={checked}\n            onChange={onChange}\n            checkedIcon={<span className={classes.checkedIcon} />}\n            icon={<span className={classes.unCheckedIcon} />}\n            disabled={disabled}\n          />\n        </div>\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${classes.noMinWidthLabel} ${overrideLabelClasses}`}\n          >\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CheckboxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { selectorTypes } from \"../SelectWrapper/SelectWrapper\";\nimport { Menu, MenuItem } from \"@mui/material\";\n\ninterface IInputUnitBox {\n  classes: any;\n  id: string;\n  unitSelected: string;\n  unitsList: selectorTypes[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonTrigger: {\n      border: \"#F0F2F2 1px solid\",\n      borderRadius: 3,\n      color: \"#838383\",\n      backgroundColor: \"#fff\",\n      fontSize: 12,\n    },\n  });\n\nconst InputUnitMenu = ({\n  classes,\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        className={classes.buttonTrigger}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </button>\n      <Menu\n        id={`${id}-menu`}\n        aria-labelledby={`${id}-button`}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          handleClose(\"\");\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {unitsList.map((unit) => (\n          <MenuItem\n            onClick={() => handleClose(unit.value)}\n            key={`itemUnit-${unit.value}-${unit.label}`}\n          >\n            {unit.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputUnitMenu);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"../../../icons/SearchIcon\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, ReactElement } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport { AutoSizer } from \"react-virtualized\";\n\ninterface IVirtualizedList {\n  rowRenderFunction: (index: number) => ReactElement | null;\n  totalItems: number;\n  defaultHeight?: number;\n}\n\nlet itemStatusMap: any = {};\nconst LOADING = 1;\nconst LOADED = 2;\n\nconst VirtualizedList = ({\n  rowRenderFunction,\n  totalItems,\n  defaultHeight,\n}: IVirtualizedList) => {\n  const isItemLoaded = (index: any) => !!itemStatusMap[index];\n\n  const loadMoreItems = (startIndex: number, stopIndex: number) => {\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADING;\n    }\n\n    for (let index = startIndex; index <= stopIndex; index++) {\n      itemStatusMap[index] = LOADED;\n    }\n  };\n\n  const RenderItemLine = ({ index, style }: any) => {\n    return <div style={style}>{rowRenderFunction(index)}</div>;\n  };\n\n  return (\n    <Fragment>\n      <InfiniteLoader\n        isItemLoaded={isItemLoaded}\n        loadMoreItems={loadMoreItems}\n        itemCount={totalItems}\n      >\n        {({ onItemsRendered, ref }) => (\n          <AutoSizer>\n            {({ width, height }) => {\n              return (\n                <List\n                  itemSize={defaultHeight || 220}\n                  height={height}\n                  itemCount={totalItems}\n                  width={width}\n                  ref={ref}\n                  onItemsRendered={onItemsRendered}\n                >\n                  {RenderItemLine}\n                </List>\n              );\n            }}\n          </AutoSizer>\n        )}\n      </InfiniteLoader>\n    </Fragment>\n  );\n};\n\nexport default VirtualizedList;\n"],"names":["useStyles","makeStyles","theme","root","padding","color","props","variant","tgtColor","palette","primary","main","contrastText","secondary","getButtonColor","borderColor","width","marginLeft","text","classes","onClick","disabled","tooltip","icon","restProps","size","sx","border","fontSize","display","withStyles","createStyles","marginBottom","borderRadius","height","marginRight","wordWrap","overflowWrap","wordBreak","font","fontWeight","position","top","background","checkBoxElement","float","overflow","viewButton","boxShadow","manageButton","grey","textTransform","metric","metricLabel","metricText","unit","bucketName","margin","bucketIcon","bucketInfo","flexFlow","bucketStats","marginTop","borderTop","paddingTop","bucketActionButtons","alignItems","justifyContent","bucket","onSelect","selected","bulkSelect","usage","niceBytes","usageScalar","split","usageUnit","quota","get","quotaForString","calculateBytes","Grid","container","className","clsx","item","xs","sm","e","stopPropagation","CheckboxWrapper","checked","id","name","label","onChange","value","Typography","creation_date","rw_access","read","write","accessToStr","to","style","textDecoration","RBIconButton","Box","spacing","textAlign","Fragment","total","objects","prettyNumber","connector","connect","setModalErrorSnackMessage","remoteBucketList","gridTemplateColumns","errorIcon","successIcon","hide","opacity","transitionDuration","modalBasic","wizardCommon","open","closeModalAndRefresh","buckets","useState","bucketsToAlter","setBucketsToAlter","addLoading","setAddLoading","externalLoading","setExternalLoading","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","region","setRegion","useTLS","setUseTLS","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","relationBuckets","setRelationBuckets","remoteBucketsOpts","setRemoteBucketOpts","responseItem","setResponseItem","optionsForBucketsDrop","map","remoteBucketName","useEffect","length","bucketsAlter","relationBucketsAlter","forEach","push","LogoToShow","errString","CheckCircleOutline","Tooltip","title","placement","ErrorOutline","updateItem","indexItem","updatedList","removeSuccessItems","newBucketsToAlter","newRelationBuckets","successElement","errorString","indexToRemove","indexOf","originBucket","splice","ModalWrapper","modalOpen","onClose","GenericWizard","loadingStep","wizardSteps","componentRender","PredefinedList","content","join","descriptionText","InputBoxWrapper","target","placeholder","FormSwitchWrapper","SelectWrapper","options","type","validity","valid","min","pattern","overlayObject","InputUnitMenu","onUnitChange","newValue","unitSelected","unitsList","k8sScalarUnitsExcluding","buttons","enabled","action","wizardPageJump","remoteConnectInfo","api","then","dataReturn","arrayReplaceBuckets","element","catch","err","index","errorItem","initialBucket","bucketResponse","find","stateOfItem","event","toString","replicate","destinationBucket","endURL","hc","parseInt","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","response","states","replicationState","filter","itm","setTimeout","forModal","resultGrid","spacingUtils","modalStyleUtils","formFieldStyles","createTenantCommon","loadingTiers","setLoadingTiers","tiersList","setTiersList","prefix","setPrefix","tags","setTags","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","results","setResults","res","objList","tier","tierType","formScrollable","formFieldRow","fieldGroup","RadioGroupSelector","currentSelection","selectorOptions","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","rules","expiry","expiry_days","noncurrentversion_expiration_days","transition","transition_days","noncurrentversion_transition_days","noncurrentversion_transition_storage_class","storage_class","lifecycleInsert","expired_object_delete_marker","resultItem","error","setErrorSnackMessage","backgroundColor","addBucket","bucketList","searchField","minWidth","containerForHeader","history","records","setRecords","loading","setLoading","filterBuckets","setFilterBuckets","selectedBuckets","setSelectedBuckets","replicationModalOpen","setReplicationModalOpen","lifecycleModalOpen","setLifecycleModalOpen","filteredRecords","b","selectListBuckets","targetD","hasPermission","IAM_SCOPES","BulkReplicationModal","unselectAll","BulkLifecycleModal","PageHeader","PageLayout","actionsTray","SearchBox","overrideClass","LinearProgress","VirtualizedList","rowRenderFunction","includes","totalItems","alignContent","HelpBox","iconComponent","help","SecureComponent","scopes","resource","CONSOLE_UI_RESOURCE","AButton","cursor","info","fontFamily","children","rest","fieldBasic","tooltipHelper","checkboxIcons","fieldContainer","flexBasis","noTopMargin","overrideLabelClasses","inputProps","checkedIcon","unCheckedIcon","htmlFor","noMinWidthLabel","tooltipContainer","buttonTrigger","React","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","undefined","currentTarget","anchorOrigin","vertical","horizontal","transformOrigin","predefinedList","multiLine","prefinedContainer","predefinedTitle","innerContentMultiline","innerContent","adornment","adornmentPosition","disableUnderline","InputProps","itemStatusMap","defaultHeight","RenderItemLine","isItemLoaded","loadMoreItems","startIndex","stopIndex","itemCount","onItemsRendered","ref","itemSize"],"sourceRoot":""}
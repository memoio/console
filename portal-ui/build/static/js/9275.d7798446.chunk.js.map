{"version":3,"file":"static/js/9275.d7798446.chunk.js","mappings":"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","sources":["common/BackLink.tsx","screens/Console/Buckets/BucketDetails/SummaryItems/RBIconButton.tsx","screens/Console/Common/BoxIconButton/BoxIconButton.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","screens/Console/Common/Hooks/useApi.tsx","screens/Console/Common/Layout/PageLayout.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","screens/Console/Common/ScreenTitle/ScreenTitle.tsx","screens/Console/Common/SearchBox.tsx","screens/Console/Common/VerticalTabs/VerticalTabs.tsx","screens/Console/Groups/DeleteGroup.tsx","screens/Console/Groups/AddGroupMember.tsx","screens/Console/Groups/GroupDetailsHeader.tsx","screens/Console/Groups/GroupsDetails.tsx","screens/Console/Groups/UsersSelectors.tsx","screens/Console/Policies/PolicySelectors.tsx","screens/Console/Policies/SetPolicy.tsx","utils/sortFunctions.ts"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"300px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      \"& svg.min-icon\": {\n        width: 12,\n      },\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n  className?: any;\n  executeOnClick?: () => void;\n}\n\nconst BackLink = ({\n  to,\n  label,\n  classes,\n  className,\n  executeOnClick,\n}: IBackLink) => {\n  return (\n    <Link\n      to={to}\n      className={`${classes.link} ${className ? className : \"\"}`}\n      onClick={() => {\n        if (executeOnClick) {\n          executeOnClick();\n        }\n      }}\n    >\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div className={classes.label}>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport BoxIconButton from \"../../../Common/BoxIconButton/BoxIconButton\";\nimport { IconButtonProps } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Theme } from \"@mui/material/styles\";\n\ntype DeleteButtonProps = {\n  onClick: (e: any) => void;\n  text?: string;\n  disabled?: boolean;\n  size?: string;\n  tooltip?: string;\n  classes?: any;\n  icon?: React.ReactNode;\n  [x: string]: any;\n};\n\ntype RBIconProps = Partial<IconButtonProps> & DeleteButtonProps;\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const getButtonColor = (props: RBIconProps) => {\n    const { variant, color } = props;\n\n    let tgtColor = theme.palette.primary.main;\n\n    if (color === \"primary\" && variant === \"contained\") {\n      tgtColor = theme.palette.primary.contrastText;\n    } else if (color === \"primary\" && variant === \"outlined\") {\n      tgtColor = theme.palette.primary.main;\n    } else if (color === \"secondary\") {\n      tgtColor = theme.palette.secondary.main;\n    }\n\n    return tgtColor;\n  };\n\n  return {\n    root: {\n      padding: \"7px\",\n      color: (props: RBIconProps) => getButtonColor(props),\n      borderColor: (props: RBIconProps) =>\n        props.color === \"secondary\"\n          ? theme.palette.secondary.main\n          : theme.palette.primary.main,\n      \"& svg.min-icon\": {\n        width: 12,\n        marginLeft: (props: RBIconProps) => (props.text ? \"5px\" : \"0px\"),\n        \"@media (max-width: 900px)\": {\n          width: 16,\n          marginLeft: \"0px !important\",\n        },\n      },\n    },\n  };\n});\n\nconst RBIconButton = (props: RBIconProps) => {\n  const classes = useStyles(props);\n\n  const {\n    onClick,\n    text = \"\",\n    disabled = false,\n    tooltip,\n    icon = null,\n    ...restProps\n  } = props;\n\n  return (\n    <BoxIconButton\n      classes={classes}\n      tooltip={tooltip || text}\n      variant=\"outlined\"\n      onClick={onClick}\n      disabled={disabled}\n      color=\"secondary\"\n      size=\"medium\"\n      sx={{\n        border: \"1px solid #f44336\",\n        \"& span\": {\n          fontSize: 14,\n          \"@media (max-width: 900px)\": {\n            display: \"none\",\n          },\n        },\n      }}\n      {...restProps}\n    >\n      <span>{text}</span> {icon}\n    </BoxIconButton>\n  );\n};\nexport default RBIconButton;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButton, IconButtonProps, Tooltip } from \"@mui/material\";\nimport clsx from \"clsx\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 8,\n      marginLeft: 8,\n      borderWidth: 1,\n      borderColor: \"#696969\",\n      color: \"#696969\",\n      borderStyle: \"solid\",\n      borderRadius: 3,\n      \"& .min-icon\": {\n        // height: 20,\n        width: 20,\n      },\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:disabled\": {\n        color: \"#EBEBEB\",\n        borderColor: \"#EBEBEB\",\n      },\n    },\n    contained: {\n      borderColor: theme.palette.primary.main,\n      background: theme.palette.primary.main,\n      color: \"white\",\n      \"& .MuiTouchRipple-root span\": {\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius: 3,\n        opacity: 0.3,\n      },\n      \"&:hover\": {\n        backgroundColor: theme.palette.primary.light,\n        color: \"#FFF\",\n      },\n    },\n  });\n\ninterface IBoxIconButton extends IconButtonProps {\n  classes: any;\n  children: any;\n  variant?: \"outlined\" | \"contained\";\n  tooltip?: string;\n}\n\nconst BoxIconButton = ({\n  classes,\n  children,\n  variant = \"outlined\",\n  tooltip,\n  ...rest\n}: IBoxIconButton) => {\n  const button = (\n    <IconButton\n      {...rest}\n      className={clsx(classes.root, {\n        [classes.contained]: variant === \"contained\",\n      })}\n    >\n      {children}\n    </IconButton>\n  );\n\n  if (tooltip && tooltip !== \"\") {\n    return (\n      <Tooltip title={tooltip}>\n        <span>{button}</span>\n      </Tooltip>\n    );\n  }\n\n  return button;\n};\n\nexport default withStyles(styles)(BoxIconButton);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input/Input\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n  switchContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n  extraInputProps = {},\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\", ...extraInputProps }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n        id={id}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              sm={description !== \"\" ? 4 : 10}\n              md={description !== \"\" ? 3 : 9}\n            >\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","import { useState } from \"react\";\nimport api from \"../../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\n\ntype NoReturnFunction = (param?: any) => void;\ntype ApiMethodToInvoke = (method: string, url: string, data?: any) => void;\ntype IsApiInProgress = boolean;\n\nconst useApi = (\n  onSuccess: NoReturnFunction,\n  onError: NoReturnFunction\n): [IsApiInProgress, ApiMethodToInvoke] => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const callApi = (method: string, url: string, data?: any) => {\n    setIsLoading(true);\n    api\n      .invoke(method, url, data)\n      .then((res: any) => {\n        setIsLoading(false);\n        onSuccess(res);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setIsLoading(false);\n        onError(err);\n      });\n  };\n\n  return [isLoading, callApi];\n};\n\nexport default useApi;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { pageContentStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...pageContentStyles,\n  });\n\ntype PageLayoutProps = {\n  className?: string;\n  classes?: any;\n  children: any;\n};\n\nconst PageLayout = ({ classes, className = \"\", children }: PageLayoutProps) => {\n  return (\n    <div className={classes.contentSpacer}>\n      <Grid container>\n        <Grid item xs={12} className={className}>\n          {children}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(PageLayout);\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n          id={\"confirm-cancel\"}\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          id={\"confirm-ok\"}\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    root: {\n      \"& .MuiPaper-root\": {\n        padding: \"0 2rem 2rem 1rem\",\n      },\n    },\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n  middleComponent?: React.ReactNode;\n  features: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      // marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n    middleComponent: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n  middleComponent,\n  features,\n}: IPageHeader) => {\n  if (features.includes(\"hide-menu\")) {\n    return <Fragment />;\n  }\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.label}\n        sx={{\n          paddingTop: [\"15px\", \"15px\", \"0\", \"0\"],\n        }}\n      >\n        {/* {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ?  '' : ''}\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )} */}\n        <div className={classes.logo}></div>\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {middleComponent && (\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={6}\n          className={classes.middleComponent}\n          sx={{ marginTop: [\"10px\", \"10px\", \"0\", \"0\"] }}\n        >\n          {middleComponent}\n        </Grid>\n      )}\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.rightMenu}\n      >\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            id=\"object-manager-toggle\"\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n  features: state.console.session.features,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\ninterface IScreenTitle {\n  classes: any;\n  icon?: any;\n  title?: any;\n  subTitle?: any;\n  actions?: any;\n  className?: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerBarIcon: {\n      marginRight: \".7rem\",\n      color: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 44,\n        height: 44,\n      },\n    },\n    headerBarSubheader: {\n      color: \"grey\",\n      \"@media (max-width: 900px)\": {\n        maxWidth: 200,\n      },\n    },\n    screenTitle: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"1rem\",\n\n      borderBottom: \"1px solid #EAEAEA\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    titleColumn: {\n      height: \"auto\",\n      justifyContent: \"center\",\n      display: \"flex\",\n      flexFlow: \"column\",\n      alignItems: \"flex-start\",\n      \"& h1\": {\n        fontSize: 19,\n      },\n    },\n    leftItems: {\n      display: \"flex\",\n      alignItems: \"center\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n    rightItems: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n  });\n\nconst ScreenTitle = ({\n  classes,\n  icon,\n  title,\n  subTitle,\n  actions,\n  className,\n}: IScreenTitle) => {\n  return (\n    <Grid container>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.screenTitle} ${className ? className : \"\"}`}\n      >\n        <div className={classes.leftItems}>\n          {icon ? <div className={classes.headerBarIcon}>{icon}</div> : null}\n          <div className={classes.titleColumn}>\n            <h1 style={{ margin: 0 }}>{title}</h1>\n            <span className={classes.headerBarSubheader}>{subTitle}</span>\n          </div>\n        </div>\n\n        <div className={classes.rightItems}>{actions}</div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ScreenTitle);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport SearchIcon from \"../../../icons/SearchIcon\";\nimport TextField from \"@mui/material/TextField\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport { searchField } from \"./FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    searchField: {\n      ...searchField.searchField,\n    },\n    adornment: {},\n  });\n\ntype SearchBoxProps = {\n  placeholder?: string;\n  value: string;\n  classes: any;\n  onChange: (value: string) => void;\n  adornmentPosition?: \"start\" | \"end\";\n  overrideClass?: any;\n};\n\nconst SearchBox = ({\n  placeholder = \"\",\n  classes,\n  onChange,\n  adornmentPosition = \"end\",\n  overrideClass,\n  value,\n}: SearchBoxProps) => {\n  const inputProps = {\n    disableUnderline: true,\n    [`${adornmentPosition}Adornment`]: (\n      <InputAdornment\n        position={adornmentPosition}\n        className={classes.adornment}\n      >\n        <SearchIcon />\n      </InputAdornment>\n    ),\n  };\n  return (\n    <TextField\n      placeholder={placeholder}\n      className={overrideClass ? overrideClass : classes.searchField}\n      id=\"search-resource\"\n      label=\"\"\n      InputProps={inputProps}\n      onChange={(e) => {\n        onChange(e.target.value);\n      }}\n      variant=\"standard\"\n      value={value}\n    />\n  );\n};\n\nexport default withStyles(styles)(SearchBox);\n","import React from \"react\";\nimport { Box, Tab, TabProps } from \"@mui/material\";\nimport { TabContext, TabList, TabPanel } from \"@mui/lab\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Theme, useTheme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\n\nexport type TabItemProps = {\n  tabConfig: TabProps | any;\n  content?: JSX.Element | JSX.Element[];\n};\n\ntype VerticalTabsProps = {\n  classes: any;\n  children: TabItemProps[];\n  selectedTab?: string;\n  routes?: any;\n  isRouteTabs?: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    tabsContainer: {\n      display: \"flex\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n    tabsHeaderContainer: {\n      width: \"300px\",\n      background: \"#F8F8F8\",\n      borderRight: \"1px solid #EAEAEA\",\n      \"& .MuiTabs-root\": {\n        \"& .MuiTabs-indicator\": {\n          display: \"none\",\n        },\n        \"& .MuiTab-root\": {\n          display: \"flex\",\n          flexFlow: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          borderBottom: \"1px solid #EAEAEA\",\n          \"& .MuiSvgIcon-root\": {\n            marginRight: 8,\n            marginBottom: 0,\n          },\n          \"&.Mui-selected\": {\n            background: \"#E5E5E5\",\n            fontWeight: 600,\n          },\n        },\n\n        \"&. MuiTabs-scroller\": {\n          display: \"none\",\n        },\n      },\n    },\n    tabContentContainer: {\n      width: \"100%\",\n      \"& .MuiTabPanel-root\": {\n        height: \"100%\",\n      },\n    },\n    tabPanel: {\n      height: \"100%\",\n    },\n    /*Below md breakpoint make it horizontal and style it for scrolling tabs*/\n    \"@media (max-width: 900px)\": {\n      tabsContainer: {\n        flexFlow: \"column\",\n        flexDirection: \"column\",\n      },\n      tabsHeaderContainer: {\n        width: \"100%\",\n        borderBottom: \" 1px solid #EAEAEA\",\n        \"& .MuiTabs-root .MuiTabs-scroller .MuiButtonBase-root\": {\n          borderBottom: \" 0px\",\n        },\n      },\n    },\n  });\n\nconst tabStripStyle = {\n  minHeight: 60,\n};\n\nconst VerticalTabs = ({\n  children,\n  classes,\n  selectedTab = \"0\",\n  routes,\n  isRouteTabs,\n}: VerticalTabsProps) => {\n  const [value, setValue] = React.useState(selectedTab);\n\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    setValue(newValue);\n  };\n\n  const headerList: TabProps[] = [];\n  const contentList: React.ReactNode[] = [];\n\n  if (!children) return null;\n\n  children.forEach((child) => {\n    headerList.push(child.tabConfig);\n    contentList.push(child.content);\n  });\n\n  return (\n    <TabContext value={`${value}`}>\n      <Box className={classes.tabsContainer}>\n        <Box className={classes.tabsHeaderContainer}>\n          <TabList\n            onChange={handleChange}\n            orientation={isSmallScreen ? \"horizontal\" : \"vertical\"}\n            variant={isSmallScreen ? \"scrollable\" : \"standard\"}\n            scrollButtons=\"auto\"\n            className={classes.tabList}\n          >\n            {headerList.map((item, index) => {\n              if (item) {\n                return (\n                  <Tab\n                    className={classes.tabHeader}\n                    key={`v-tab-${index}`}\n                    value={`${index}`}\n                    style={tabStripStyle}\n                    {...item}\n                    disableRipple\n                    disableTouchRipple\n                    focusRipple={true}\n                  />\n                );\n              }\n              return null;\n            })}\n          </TabList>\n        </Box>\n\n        <Box className={classes.tabContentContainer}>\n          {!isRouteTabs\n            ? contentList.map((item, index) => {\n                return (\n                  <TabPanel\n                    classes={{ ...classes.tabPanel }}\n                    key={`v-tab-p-${index}`}\n                    value={`${index}`}\n                  >\n                    {item ? item : null}\n                  </TabPanel>\n                );\n              })\n            : null}\n          {isRouteTabs ? (\n            <div className={classes.tabPanel}>{routes}</div>\n          ) : null}\n        </Box>\n      </Box>\n    </TabContext>\n  );\n};\n\nexport default withStyles(styles)(VerticalTabs);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport { ConfirmDeleteIcon } from \"../../../icons\";\n\ninterface IDeleteGroup {\n  selectedGroup: string;\n  deleteOpen: boolean;\n  closeDeleteModalAndRefresh: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst DeleteGroup = ({\n  selectedGroup,\n  deleteOpen,\n  closeDeleteModalAndRefresh,\n  setErrorSnackMessage,\n}: IDeleteGroup) => {\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => setErrorSnackMessage(err);\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedGroup) {\n    return null;\n  }\n  const onDeleteGroup = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/group?name=${encodeURI(selectedGroup)}`);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Group`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onDeleteGroup}\n      onClose={onClose}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete group\n          <br />\n          <b>{selectedGroup}</b>?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(DeleteGroup);\n","import React, { useState } from \"react\";\nimport UsersSelectors from \"./UsersSelectors\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button } from \"@mui/material\";\nimport api from \"../../../common/api\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  formFieldStyles,\n  modalBasic,\n  modalStyleUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { AddMembersToGroupIcon } from \"../../../icons\";\n\ntype UserPickerModalProps = {\n  classes?: any;\n  title?: string;\n  preSelectedUsers?: string[];\n  selectedGroup?: string;\n  open: boolean;\n  onClose: () => void;\n  onSaveClick: () => void;\n  groupStatus?: string;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \"1rem\",\n    },\n    userSelector: {\n      \"& .MuiPaper-root\": {\n        padding: 0,\n        marginBottom: 15,\n      },\n    },\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...modalBasic,\n  });\n\nconst AddGroupMember = ({\n  classes,\n  title = \"\",\n  groupStatus = \"enabled\",\n  preSelectedUsers = [],\n  selectedGroup = \"\",\n  open,\n  onClose,\n}: UserPickerModalProps) => {\n  const [selectedUsers, setSelectedUsers] = useState(preSelectedUsers);\n\n  function addMembersToGroup() {\n    return api\n      .invoke(\"PUT\", `/api/v1/group?name=${encodeURI(selectedGroup)}`, {\n        group: selectedGroup,\n        members: selectedUsers,\n        status: groupStatus,\n      })\n      .then((res) => {\n        onClose();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        onClose();\n        setModalErrorSnackMessage(err);\n      });\n  }\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={onClose}\n      title={title}\n      titleIcon={<AddMembersToGroupIcon />}\n    >\n      <div className={classes.formFieldRow}>\n        <PredefinedList label={`Selected Group`} content={selectedGroup} />\n      </div>\n      <div className={classes.userSelector}>\n        <UsersSelectors\n          selectedUsers={selectedUsers}\n          setSelectedUsers={setSelectedUsers}\n          editMode={!selectedGroup}\n        />\n      </div>\n\n      <Grid item xs={12} className={classes.modalButtonBar}>\n        <Button\n          type=\"button\"\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            setSelectedUsers(preSelectedUsers);\n          }}\n        >\n          Reset\n        </Button>\n\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            addMembersToGroup();\n          }}\n        >\n          Save\n        </Button>\n      </Grid>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\nexport default withStyles(styles)(connector(AddGroupMember));\n","import React, { Fragment } from \"react\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    breadcrumLink: {\n      textDecoration: \"none\",\n      color: \"black\",\n    },\n  });\n\ntype DetailsHeaderProps = {\n  classes: any;\n};\n\nconst GroupDetailsHeader = ({ classes }: DetailsHeaderProps) => {\n  return (\n    <PageHeader\n      label={\n        <Fragment>\n          <Link to={IAM_PAGES.GROUPS} className={classes.breadcrumLink}>\n            Groups\n          </Link>\n        </Fragment>\n      }\n      actions={<React.Fragment />}\n    />\n  );\n};\n\nexport default withStyles(styles)(GroupDetailsHeader);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport {\n  setErrorSnackMessage,\n  setModalErrorSnackMessage,\n} from \"../../../actions\";\nimport { connect } from \"react-redux\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Grid } from \"@mui/material\";\nimport ScreenTitle from \"../Common/ScreenTitle/ScreenTitle\";\nimport {\n  IAMPoliciesIcon,\n  TrashIcon,\n  GroupsIcon,\n  AddIcon,\n} from \"../../../icons\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport history from \"../../../history\";\nimport api from \"../../../common/api\";\nimport SetPolicy from \"../Policies/SetPolicy\";\nimport AddGroupMember from \"./AddGroupMember\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport DeleteGroup from \"./DeleteGroup\";\nimport VerticalTabs from \"../Common/VerticalTabs/VerticalTabs\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PageLayout from \"../Common/Layout/PageLayout\";\nimport BackLink from \"../../../common/BackLink\";\nimport PanelTitle from \"../Common/PanelTitle/PanelTitle\";\nimport SearchBox from \"../Common/SearchBox\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  SecureComponent,\n  hasPermission,\n} from \"../../../common/SecureComponent\";\nimport GroupDetailsHeader from \"./GroupDetailsHeader\";\nimport RBIconButton from \"../Buckets/BucketDetails/SummaryItems/RBIconButton\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    pageContainer: {\n      border: \"1px solid #EAEAEA\",\n      width: \"100%\",\n    },\n    breadcrumLink: {\n      textDecoration: \"none\",\n      color: \"black\",\n    },\n    statusLabel: {\n      fontSize: \".8rem\",\n      marginRight: \".7rem\",\n    },\n    statusValue: {\n      fontWeight: \"bold\",\n      fontSize: \".9rem\",\n      marginRight: \".7rem\",\n    },\n    searchField: {\n      ...searchField.searchField,\n      maxWidth: 280,\n    },\n    ...tableStyles,\n    ...spacingUtils,\n    actionsTray: {\n      ...actionsTray.actionsTray,\n\n      alignItems: \"center\",\n      \"& h1\": {\n        flex: 1,\n      },\n      \"& button\": {\n        marginLeft: \".8rem\",\n      },\n      \"@media (max-width: 900px)\": {\n        justifyContent: \"flex-end\",\n        \"& h1\": {\n          display: \"none\",\n        },\n        \"& button\": {\n          whiteSpace: \"nowrap\",\n          textOverflow: \"ellipsis\",\n        },\n      },\n    },\n    ...containerForHeader(theme.spacing(4)),\n  });\n\ninterface IGroupDetailsProps {\n  classes: any;\n  match: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\ntype GroupInfo = {\n  members?: any[];\n  name?: string;\n  policy?: string;\n  status?: string;\n};\n\nexport const formatPolicy = (policy: string = \"\"): string[] => {\n  if (policy.length <= 0) return [];\n  return policy.split(\",\");\n};\n\nexport const getPoliciesAsString = (policies: string[]): string => {\n  return policies.join(\", \");\n};\n\nconst GroupsDetails = ({ classes }: IGroupDetailsProps) => {\n  const [groupDetails, setGroupDetails] = useState<GroupInfo>({});\n\n  /*Modals*/\n  const [policyOpen, setPolicyOpen] = useState<boolean>(false);\n  const [usersOpen, setUsersOpen] = useState<boolean>(false);\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [memberFilter, setMemberFilter] = useState<string>(\"\");\n\n  //const [policyFilter, setPolicyFilter] = useState<string>(\"\");\n\n  const { groupName = \"\" } = useParams<Record<string, string>>();\n\n  const { members = [], policy = \"\", status: groupEnabled } = groupDetails;\n\n  const filteredMembers = members.filter((elementItem) =>\n    elementItem.includes(memberFilter)\n  );\n\n  useEffect(() => {\n    if (groupName) {\n      fetchGroupInfo();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [groupName]);\n\n  const groupPolicies = formatPolicy(policy);\n  const isGroupEnabled = groupEnabled === \"enabled\";\n  const memberActionText = members.length > 0 ? \"Edit Members\" : \"Add Members\";\n\n  const getGroupDetails = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_GET_GROUP,\n  ]);\n\n  function fetchGroupInfo() {\n    if (getGroupDetails) {\n      api\n        .invoke(\"GET\", `/api/v1/group?name=${encodeURI(groupName)}`)\n        .then((res: any) => {\n          setGroupDetails(res);\n        })\n        .catch((err) => {\n          setModalErrorSnackMessage(err);\n          setGroupDetails({});\n        });\n    }\n  }\n\n  function toggleGroupStatus(nextStatus: boolean) {\n    return api\n      .invoke(\"PUT\", `/api/v1/group?name=${encodeURI(groupName)}`, {\n        group: groupName,\n        members: members,\n        status: nextStatus ? \"enabled\" : \"disabled\",\n      })\n      .then((res) => {\n        fetchGroupInfo();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(err);\n      });\n  }\n\n  const groupsTabContent = (\n    <React.Fragment>\n      <div className={classes.actionsTray}>\n        <PanelTitle>Members</PanelTitle>\n        <SearchBox\n          placeholder={\"Search members\"}\n          onChange={(searchText) => {\n            setMemberFilter(searchText);\n          }}\n          overrideClass={classes.searchField}\n          value={memberFilter}\n        />\n        <SecureComponent\n          resource={CONSOLE_UI_RESOURCE}\n          scopes={[IAM_SCOPES.ADMIN_ADD_USER_TO_GROUP]}\n          errorProps={{ disabled: true }}\n        >\n          <RBIconButton\n            tooltip={memberActionText}\n            text={memberActionText}\n            variant=\"contained\"\n            color=\"primary\"\n            icon={<AddIcon />}\n            onClick={() => {\n              setUsersOpen(true);\n            }}\n          />\n        </SecureComponent>\n      </div>\n\n      <div className={classes.tableBlock}>\n        <SecureComponent\n          resource={CONSOLE_UI_RESOURCE}\n          scopes={[IAM_SCOPES.ADMIN_LIST_USERS]}\n          errorProps={{ disabled: true }}\n        >\n          <TableWrapper\n            itemActions={[\n              {\n                type: \"view\",\n                onClick: (userName) => {\n                  history.push(`${IAM_PAGES.USERS}/${userName}`);\n                },\n              },\n            ]}\n            columns={[{ label: \"Access Key\", elementKey: \"\" }]}\n            selectedItems={[]}\n            isLoading={false}\n            records={filteredMembers}\n            entityName=\"Users\"\n            idField=\"\"\n          />\n        </SecureComponent>\n      </div>\n    </React.Fragment>\n  );\n\n  const policiesTabContent = (\n    <React.Fragment>\n      <div className={classes.actionsTray}>\n        <PanelTitle>Policies</PanelTitle>\n\n        <RBIconButton\n          tooltip={`Set Policies`}\n          text={`Set Policies`}\n          variant=\"contained\"\n          color=\"primary\"\n          icon={<IAMPoliciesIcon />}\n          onClick={() => {\n            setPolicyOpen(true);\n          }}\n        />\n      </div>\n      <div className={classes.tableBlock}>\n        <TableWrapper\n          itemActions={[\n            {\n              type: \"view\",\n              onClick: (policy) => {\n                history.push(`${IAM_PAGES.POLICIES}/${policy}`);\n              },\n            },\n          ]}\n          columns={[{ label: \"Policy\", elementKey: \"\" }]}\n          isLoading={false}\n          records={groupPolicies}\n          entityName=\"Policies\"\n          idField=\"\"\n        />\n      </div>\n    </React.Fragment>\n  );\n  return (\n    <React.Fragment>\n      <GroupDetailsHeader />\n      <BackLink to={IAM_PAGES.GROUPS} label={\"Return to Groups\"} />\n\n      <PageLayout className={classes.pageContainer}>\n        <Grid item xs={12}>\n          <ScreenTitle\n            icon={\n              <Fragment>\n                <GroupsIcon width={40} />\n              </Fragment>\n            }\n            title={groupName}\n            subTitle={null}\n            actions={\n              <Fragment>\n                <span className={classes.statusLabel}>Group Status:</span>\n                <span id=\"group-status\" className={classes.statusValue}>\n                  {isGroupEnabled ? \"Enabled\" : \"Disabled\"}\n                </span>\n                <SecureComponent\n                  resource={CONSOLE_UI_RESOURCE}\n                  scopes={[\n                    IAM_SCOPES.ADMIN_ENABLE_GROUP,\n                    IAM_SCOPES.ADMIN_DISABLE_GROUP,\n                  ]}\n                  errorProps={{ disabled: true }}\n                  matchAll\n                >\n                  <FormSwitchWrapper\n                    indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                    checked={isGroupEnabled}\n                    value={\"group_enabled\"}\n                    id=\"group-status\"\n                    name=\"group-status\"\n                    onChange={() => {\n                      toggleGroupStatus(!isGroupEnabled);\n                    }}\n                    switchOnly\n                  />\n                </SecureComponent>\n\n                <SecureComponent\n                  resource={CONSOLE_UI_RESOURCE}\n                  scopes={[IAM_SCOPES.ADMIN_REMOVE_USER_FROM_GROUP]}\n                  errorProps={{ disabled: true }}\n                >\n                  <div className={classes.spacerLeft}>\n                    <RBIconButton\n                      tooltip={`Delete Group`}\n                      text={``}\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      icon={<TrashIcon />}\n                      onClick={() => {\n                        setDeleteOpen(true);\n                      }}\n                    />\n                  </div>\n                </SecureComponent>\n              </Fragment>\n            }\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <VerticalTabs>\n            {{\n              tabConfig: { label: \"Members\" },\n              content: groupsTabContent,\n            }}\n            {{\n              tabConfig: { label: \"Policies\" },\n              content: policiesTabContent,\n            }}\n          </VerticalTabs>\n        </Grid>\n      </PageLayout>\n      {/*Modals*/}\n      {policyOpen ? (\n        <SetPolicy\n          open={policyOpen}\n          selectedGroup={groupName}\n          selectedUser={null}\n          closeModalAndRefresh={() => {\n            setPolicyOpen(false);\n            fetchGroupInfo();\n          }}\n        />\n      ) : null}\n\n      {usersOpen ? (\n        <AddGroupMember\n          selectedGroup={groupName}\n          onSaveClick={() => {}}\n          title={memberActionText}\n          groupStatus={groupEnabled}\n          preSelectedUsers={members}\n          open={usersOpen}\n          onClose={() => {\n            setUsersOpen(false);\n            fetchGroupInfo();\n          }}\n        />\n      ) : null}\n\n      {deleteOpen && (\n        <DeleteGroup\n          deleteOpen={deleteOpen}\n          selectedGroup={groupName}\n          closeDeleteModalAndRefresh={(isDelSuccess: boolean) => {\n            setDeleteOpen(false);\n            if (isDelSuccess) {\n              history.push(IAM_PAGES.GROUPS);\n            }\n          }}\n        />\n      )}\n      {/*Modals*/}\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(GroupsDetails));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport get from \"lodash/get\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport { UsersList } from \"../Users/types\";\nimport { usersSort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface IGroupsProps {\n  classes: any;\n  selectedUsers: string[];\n  setSelectedUsers: any;\n  editMode?: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      // paddingTop: 15,\n      boxShadow: \"none\",\n      border: 0,\n    },\n\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    searchBox: {\n      flex: 1,\n    },\n    ...actionsTray,\n    actionsTitle: {\n      fontSize: 14,\n      alignSelf: \"center\",\n      minWidth: 160,\n      marginRight: 10,\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: theme.spacing(3),\n      border: \"1px solid #EAEAEA\",\n      fontSize: \".9rem\",\n    },\n    ...selectorsCommon,\n  });\n\nconst UsersSelectors = ({\n  classes,\n  selectedUsers,\n  setSelectedUsers,\n  editMode = false,\n  setModalErrorSnackMessage,\n}: IGroupsProps) => {\n  //Local States\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchUsers = useCallback(() => {\n    api\n      .invoke(\"GET\", `/api/v1/users`)\n      .then((res: UsersList) => {\n        let users = get(res, \"users\", []);\n\n        if (!users) {\n          users = [];\n        }\n\n        setRecords(users.sort(usersSort));\n        isLoading(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setModalErrorSnackMessage(err);\n        isLoading(false);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchUsers();\n    }\n  }, [loading, fetchUsers]);\n\n  const selUsers = !selectedUsers ? [] : selectedUsers;\n\n  //Fetch Actions\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selUsers]; // We clone the selectedGroups array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedGroupsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedUsers(elements);\n\n    return elements;\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.accessKey.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          {loading && <LinearProgress />}\n          {records !== null && records.length > 0 ? (\n            <React.Fragment>\n              <Grid item xs={12} className={classes.actionsTray}>\n                <label className={classes.actionsTitle}>\n                  {editMode ? \"Edit Members\" : \"Assign Users\"}\n                </label>\n                <div className={classes.searchBox}>\n                  <SearchBox\n                    placeholder=\"Filter Users\"\n                    adornmentPosition=\"end\"\n                    onChange={setFilter}\n                    value={filter}\n                  />\n                </div>\n              </Grid>\n              <Grid item xs={12} className={classes.tableBlock}>\n                <TableWrapper\n                  columns={[{ label: \"Access Key\", elementKey: \"accessKey\" }]}\n                  onSelect={selectionChanged}\n                  selectedItems={selUsers}\n                  isLoading={loading}\n                  records={filteredRecords}\n                  entityName=\"Users\"\n                  idField=\"accessKey\"\n                  customPaperHeight={classes.multiSelectTable}\n                />\n              </Grid>\n            </React.Fragment>\n          ) : (\n            <div className={classes.noFound}>No Users to display</div>\n          )}\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(UsersSelectors));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { policySort } from \"../../../utils/sortFunctions\";\nimport {\n  actionsTray,\n  searchField,\n  selectorsCommon,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { PolicyList } from \"./types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport api from \"../../../common/api\";\nimport TableWrapper from \"../Common/TableWrapper/TableWrapper\";\nimport SearchBox from \"../Common/SearchBox\";\n\ninterface ISelectPolicyProps {\n  classes: any;\n  selectedPolicy?: string[];\n  setSelectedPolicy: any;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    searchBox: {\n      flex: 1,\n    },\n    fieldLabel: {\n      fontWeight: 400,\n      width: 160,\n      marginRight: 10,\n    },\n    tableBlock: {\n      ...tableStyles.tableBlock,\n    },\n    filterBox: {\n      display: \"flex\",\n      marginBottom: 15,\n      alignItems: \"center\",\n      \"& span\": {\n        fontSize: 14,\n      },\n    },\n    ...searchField,\n    ...tableStyles,\n    ...actionsTray,\n    ...selectorsCommon,\n  });\n\nconst PolicySelectors = ({\n  classes,\n  selectedPolicy = [],\n  setSelectedPolicy,\n  setModalErrorSnackMessage,\n}: ISelectPolicyProps) => {\n  // Local State\n  const [records, setRecords] = useState<any[]>([]);\n  const [loading, isLoading] = useState<boolean>(false);\n  const [filter, setFilter] = useState<string>(\"\");\n\n  const fetchPolicies = useCallback(() => {\n    isLoading(true);\n\n    api\n      .invoke(\"GET\", `/api/v1/policies?limit=1000`)\n      .then((res: PolicyList) => {\n        const policies = res.policies === null ? [] : res.policies;\n        isLoading(false);\n        setRecords(policies.sort(policySort));\n      })\n      .catch((err: ErrorResponseHandler) => {\n        isLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  }, [setModalErrorSnackMessage]);\n\n  //Effects\n  useEffect(() => {\n    isLoading(true);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      fetchPolicies();\n    }\n  }, [loading, fetchPolicies]);\n\n  const selectionChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedPolicy]; // We clone the checkedUsers array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to checkedUsersList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    // remove empty values\n    elements = elements.filter((element) => element !== \"\");\n\n    setSelectedPolicy(elements);\n  };\n\n  const filteredRecords = records.filter((elementItem) =>\n    elementItem.name.includes(filter)\n  );\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        {loading && <LinearProgress />}\n        {records.length > 0 ? (\n          <React.Fragment>\n            <Grid item xs={12} className={classes.filterBox}>\n              <span className={classes.fieldLabel}>Assign Policies</span>\n              <div className={classes.searchBox}>\n                <SearchBox\n                  placeholder=\"Filter Policy\"\n                  onChange={(value) => {\n                    setFilter(value);\n                  }}\n                  value={filter}\n                />\n              </div>\n            </Grid>\n            <Grid item xs={12} className={classes.tableBlock}>\n              <TableWrapper\n                columns={[{ label: \"Policy\", elementKey: \"name\" }]}\n                onSelect={selectionChanged}\n                selectedItems={selectedPolicy}\n                isLoading={loading}\n                records={filteredRecords}\n                entityName=\"Policies\"\n                idField=\"name\"\n                customPaperHeight={classes.multiSelectTable}\n              />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          <div className={classes.noFound}>No Policies Available</div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(PolicySelectors));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  modalBasic,\n  spacingUtils,\n  tableStyles,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { User } from \"../Users/types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../common/api\";\nimport PolicySelectors from \"./PolicySelectors\";\nimport PredefinedList from \"../Common/FormComponents/PredefinedList/PredefinedList\";\n\ninterface ISetPolicyProps {\n  classes: any;\n  closeModalAndRefresh: () => void;\n  selectedUser: User | null;\n  selectedGroup: string | null;\n  open: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...spacingUtils,\n    tableBlock: {\n      ...tableStyles.tableBlock,\n      marginTop: 15,\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n      marginTop: \".9rem\",\n    },\n  });\n\nconst SetPolicy = ({\n  classes,\n  closeModalAndRefresh,\n  selectedUser,\n  selectedGroup,\n  setModalErrorSnackMessage,\n  open,\n}: ISetPolicyProps) => {\n  //Local States\n  const [loading, setLoading] = useState<boolean>(false);\n  const [actualPolicy, setActualPolicy] = useState<string[]>([]);\n  const [selectedPolicy, setSelectedPolicy] = useState<string[]>([]);\n\n  const setPolicyAction = () => {\n    let entity = \"user\";\n    let value = null;\n    if (selectedGroup !== null) {\n      entity = \"group\";\n      value = selectedGroup;\n    } else {\n      if (selectedUser !== null) {\n        value = selectedUser.accessKey;\n      }\n    }\n\n    setLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/set-policy`, {\n        name: selectedPolicy,\n        entityName: value,\n        entityType: entity,\n      })\n      .then(() => {\n        setLoading(false);\n        closeModalAndRefresh();\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  const fetchGroupInformation = () => {\n    if (selectedGroup) {\n      api\n        .invoke(\"GET\", `/api/v1/group?name=${encodeURI(selectedGroup)}`)\n        .then((res: any) => {\n          const groupPolicy: String = get(res, \"policy\", \"\");\n          setActualPolicy(groupPolicy.split(\",\"));\n          setSelectedPolicy(groupPolicy.split(\",\"));\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setModalErrorSnackMessage(err);\n          setLoading(false);\n        });\n    }\n  };\n\n  const resetSelection = () => {\n    setSelectedPolicy(actualPolicy);\n  };\n\n  useEffect(() => {\n    if (open) {\n      if (selectedGroup !== null) {\n        fetchGroupInformation();\n        return;\n      }\n\n      const userPolicy: string[] = get(selectedUser, \"policy\", []);\n      setActualPolicy(userPolicy);\n      setSelectedPolicy(userPolicy);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, selectedGroup, selectedUser]);\n\n  const userName = get(selectedUser, \"accessKey\", \"\");\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh();\n      }}\n      modalOpen={open}\n      title=\"Set Policies\"\n    >\n      <Grid item xs={12}>\n        <PredefinedList\n          label={`Selected ${selectedGroup !== null ? \"Group\" : \"User\"}`}\n          content={selectedGroup !== null ? selectedGroup : userName}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <PredefinedList\n          label={\"Current Policy\"}\n          content={actualPolicy.join(\", \")}\n        />\n      </Grid>\n      <div className={classes.tableBlock}>\n        <PolicySelectors\n          selectedPolicy={selectedPolicy}\n          setSelectedPolicy={setSelectedPolicy}\n        />\n      </div>\n      <Grid item xs={12} className={classes.buttonContainer}>\n        <Button\n          type=\"button\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.spacerRight}\n          onClick={resetSelection}\n        >\n          Reset\n        </Button>\n        <Button\n          type=\"button\"\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={setPolicyAction}\n        >\n          Save\n        </Button>\n      </Grid>\n      {loading && (\n        <Grid item xs={12}>\n          <LinearProgress />\n        </Grid>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(SetPolicy));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\ninterface userInterface {\n  accessKey: string;\n}\n\ninterface policyInterface {\n  name: string;\n}\n\nexport const usersSort = (a: userInterface, b: userInterface) => {\n  if (a.accessKey > b.accessKey) {\n    return 1;\n  }\n  if (a.accessKey < b.accessKey) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const policySort = (a: policyInterface, b: policyInterface) => {\n  if (a.name > b.name) {\n    return 1;\n  }\n  if (a.name < b.name) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n\nexport const stringSort = (a: string, b: string) => {\n  if (a > b) {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  // a must be equal to b\n  return 0;\n};\n"],"names":["withStyles","theme","createStyles","link","display","alignItems","textDecoration","maxWidth","padding","color","palette","primary","light","fontSize","icon","marginRight","justifyContent","width","to","label","classes","className","executeOnClick","onClick","useStyles","makeStyles","root","props","variant","tgtColor","main","contrastText","secondary","getButtonColor","borderColor","marginLeft","text","disabled","tooltip","restProps","size","sx","border","borderWidth","borderStyle","borderRadius","backgroundColor","opacity","contained","background","dark","children","rest","button","clsx","title","StyledSwitch","height","margin","switchBase","transform","common","white","boxShadow","thumb","track","transition","transitions","create","checked","focusVisible","switchContainer","Switch","divContainer","marginBottom","indicatorLabelOn","fontWeight","indicatorLabel","fieldDescription","marginTop","actionsTray","fieldBasic","onChange","value","id","name","switchOnly","description","indicatorLabels","extraInputProps","switchComponent","length","inputProps","disableRipple","disableFocusRipple","disableTouchRipple","container","item","xs","sm","md","htmlFor","inputLabel","tooltipContainer","placement","textAlign","component","predefinedList","content","multiLine","Fragment","prefinedContainer","predefinedTitle","innerContentMultiline","innerContent","onSuccess","onError","useState","isLoading","setIsLoading","method","url","data","api","then","res","catch","err","pageContentStyles","contentSpacer","deleteDialogStyles","isOpen","onClose","onCancel","onConfirm","confirmationContent","cancelText","confirmText","confirmButtonProps","cancelButtonProps","titleIcon","open","event","reason","titleText","closeContainer","closeButton","actions","cancelButton","type","confirmButton","loading","loadingPosition","startIcon","autoFocus","connector","connect","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","paddingBottom","customDialogSize","snackBarCommon","modalOpen","wideLimit","noContentPadding","openSnackbar","setOpenSnackbar","useEffect","message","customSize","paper","fullWidth","detailedErrorMsg","scroll","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","mapDispatchToProps","toggleList","sidebarOpen","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","features","console","session","headerContainer","minHeight","left","labelStyle","rightMenu","logo","fill","middleComponent","includes","direction","paddingTop","headerBarIcon","headerBarSubheader","screenTitle","borderBottom","flexFlow","titleColumn","leftItems","rightItems","subTitle","style","searchField","adornment","placeholder","adornmentPosition","overrideClass","disableUnderline","position","InputProps","e","target","tabStripStyle","tabsContainer","tabsHeaderContainer","borderRight","tabContentContainer","tabPanel","flexDirection","selectedTab","routes","isRouteTabs","React","setValue","useTheme","isSmallScreen","useMediaQuery","breakpoints","down","headerList","contentList","forEach","child","push","tabConfig","newValue","orientation","scrollButtons","tabList","map","index","tabHeader","focusRipple","setErrorSnackMessage","selectedGroup","deleteOpen","closeDeleteModalAndRefresh","useApi","deleteLoading","invokeDeleteApi","encodeURI","setModalErrorSnackMessage","buttonContainer","userSelector","modalStyleUtils","formFieldStyles","modalBasic","groupStatus","preSelectedUsers","selectedUsers","setSelectedUsers","ModalWrapper","formFieldRow","PredefinedList","UsersSelectors","editMode","Grid","modalButtonBar","Button","group","members","status","breadcrumLink","PageHeader","IAM_PAGES","formatPolicy","policy","split","getPoliciesAsString","policies","join","pageContainer","statusLabel","statusValue","tableStyles","spacingUtils","flex","whiteSpace","textOverflow","containerForHeader","spacing","groupDetails","setGroupDetails","policyOpen","setPolicyOpen","usersOpen","setUsersOpen","setDeleteOpen","memberFilter","setMemberFilter","useParams","groupName","groupEnabled","filteredMembers","filter","elementItem","fetchGroupInfo","groupPolicies","isGroupEnabled","memberActionText","getGroupDetails","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","groupsTabContent","PanelTitle","SearchBox","searchText","SecureComponent","resource","scopes","errorProps","RBIconButton","tableBlock","TableWrapper","itemActions","userName","history","columns","elementKey","selectedItems","records","entityName","idField","policiesTabContent","BackLink","PageLayout","ScreenTitle","matchAll","FormSwitchWrapper","nextStatus","spacerLeft","VerticalTabs","SetPolicy","selectedUser","closeModalAndRefresh","onSaveClick","DeleteGroup","isDelSuccess","overflow","searchBox","actionsTitle","alignSelf","minWidth","noFound","selectorsCommon","setRecords","setFilter","fetchUsers","useCallback","users","get","sort","usersSort","selUsers","filteredRecords","accessKey","onSelect","targetD","elements","element","customPaperHeight","multiSelectTable","fieldLabel","filterBox","selectedPolicy","setSelectedPolicy","fetchPolicies","policySort","setLoading","actualPolicy","setActualPolicy","groupPolicy","userPolicy","spacerRight","entity","entityType","a","b","stringSort"],"sourceRoot":""}
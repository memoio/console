{"version":3,"file":"static/js/953.97dd826d.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","screens/Console/Common/PanelTitle/PanelTitle.tsx","../node_modules/@mui/material/Divider/dividerClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport { LifeCycleItem } from \"../types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { LifecycleConfigIcon } from \"../../../../icons\";\nimport { ITiersDropDown } from \"./AddLifecycleModal\";\nimport {\n  ITierElement,\n  ITierResponse,\n} from \"../../Configurations/TiersConfiguration/types\";\nimport api from \"../../../../common/api\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dateSelector: {\n      \"& div\": {\n        borderBottom: 0,\n        marginBottom: 0,\n\n        \"& div:nth-child(2)\": {\n          border: \"1px solid #EAEAEA\",\n          paddingLeft: 5,\n\n          \"& div\": {\n            border: 0,\n          },\n        },\n      },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\ninterface IAddUserContentProps {\n  classes: any;\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycle: LifeCycleItem;\n  open: boolean;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst EditLifecycleConfiguration = ({\n  classes,\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycle,\n  open,\n  setModalErrorSnackMessage,\n}: IAddUserContentProps) => {\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\n        .then((res: ITierResponse) => {\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: ITierElement) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  useEffect(() => {\n    if (lifecycle.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycle.transition) {\n      if (lifecycle.transition.days && lifecycle.transition.days !== 0) {\n        setTransitionDays(lifecycle.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycle.transition.date &&\n        lifecycle.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycle.expiration) {\n      if (lifecycle.expiration.days && lifecycle.expiration.days !== 0) {\n        setExpiryDays(lifecycle.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycle.expiration.date &&\n        lifecycle.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycle.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycle.transition?.noncurrent_transition_days?.toString() || \"0\"\n      );\n      setNCTransitionSC(lifecycle.transition?.noncurrent_storage_class || \"\");\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycle.expiration?.noncurrent_expiration_days?.toString() || \"0\"\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycle.expiration?.delete_marker);\n    setPrefix(lifecycle.prefix || \"\");\n\n    if (lifecycle.tags) {\n      const tgs = lifecycle.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\"\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycle]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycle !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry = {\n          expiry_days: parseInt(expiryDays),\n        };\n\n        rules = {\n          ...expiry,\n          noncurrentversion_expiration_days: parseInt(NCExpirationDays),\n        };\n      } else {\n        let transition = {\n          transition_days: parseInt(transitionDays),\n        };\n\n        rules = {\n          ...transition,\n          noncurrentversion_transition_days: parseInt(NCTransitionDays),\n          noncurrentversion_transition_storage_class: NCTransitionSC,\n          storage_class: storageClass,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        ...rules,\n      };\n\n      api\n        .invoke(\n          \"PUT\",\n          `/api/v1/buckets/${selectedBucket}/lifecycle/${lifecycle.id}`,\n          lifecycleUpdate\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setAddLoading(false);\n          setModalErrorSnackMessage(err);\n        });\n    }\n  };\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          saveRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.formScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"id\"\n                name=\"id\"\n                label=\"Id\"\n                value={lifecycle.id}\n                onChange={() => {}}\n                disabled\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <FormSwitchWrapper\n                label=\"Rule State\"\n                indicatorLabels={[\"Enabled\", \"Disabled\"]}\n                checked={enabled}\n                value={\"user_enabled\"}\n                id=\"user-status\"\n                name=\"user-status\"\n                onChange={(e) => {\n                  setEnabled(e.target.checked);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  Lifecycle Configuration\n                </legend>\n\n                <Grid item xs={12}>\n                  <RadioGroupSelector\n                    currentSelection={ilmType}\n                    id=\"quota_type\"\n                    name=\"quota_type\"\n                    label=\"ILM Rule\"\n                    selectorOptions={[\n                      { value: \"expiry\", label: \"Expiry\" },\n                      { value: \"transition\", label: \"Transition\" },\n                    ]}\n                    onChange={() => {}}\n                    disableOptions\n                  />\n                </Grid>\n                {ilmType === \"expiry\" ? (\n                  <Fragment>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"expiry_days\"\n                        name=\"expiry_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setExpiryDays(e.target.value);\n                        }}\n                        label=\"Expiry Days\"\n                        value={expiryDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"noncurrentversion_expiration_days\"\n                        name=\"noncurrentversion_expiration_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCExpirationDays(e.target.value);\n                        }}\n                        label=\"Non-current Expiration Days\"\n                        value={NCExpirationDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n                  </Fragment>\n                ) : (\n                  <Fragment>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"transition_days\"\n                        name=\"transition_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setTransitionDays(e.target.value);\n                        }}\n                        label=\"Transition Days\"\n                        value={transitionDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        type=\"number\"\n                        id=\"noncurrentversion_transition_days\"\n                        name=\"noncurrentversion_transition_days\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCTransitionDays(e.target.value);\n                        }}\n                        label=\"Non-current Transition Days\"\n                        value={NCTransitionDays}\n                        min=\"0\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <InputBoxWrapper\n                        id=\"noncurrentversion_t_SC\"\n                        name=\"noncurrentversion_t_SC\"\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                          setNCTransitionSC(e.target.value);\n                        }}\n                        placeholder=\"Set Non-current Version Transition Storage Class\"\n                        label=\"Non-current Version Transition Storage Class\"\n                        value={NCTransitionSC}\n                      />\n                    </Grid>\n                    <Grid item xs={12} className={classes.formFieldRow}>\n                      <SelectWrapper\n                        label=\"Storage Class\"\n                        id=\"storage_class\"\n                        name=\"storage_class\"\n                        value={storageClass}\n                        onChange={(e: SelectChangeEvent<string>) => {\n                          setStorageClass(e.target.value as string);\n                        }}\n                        options={tiersList}\n                      />\n                    </Grid>\n                  </Fragment>\n                )}\n              </fieldset>\n            </Grid>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <fieldset className={classes.fieldGroup}>\n                <legend className={classes.descriptionText}>\n                  File Configuration\n                </legend>\n\n                <Grid item xs={12}>\n                  <InputBoxWrapper\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={tags}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSwitchWrapper\n                    value=\"expired_delete_marker\"\n                    id=\"expired_delete_marker\"\n                    name=\"expired_delete_marker\"\n                    checked={expiredObjectDM}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                      setExpiredObjectDM(event.target.checked);\n                    }}\n                    label={\"Expired Object Delete Marker\"}\n                  />\n                </Grid>\n              </fieldset>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh(false);\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading || !isFormValid}\n            >\n              Save\n            </Button>\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(EditLifecycleConfiguration));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button, LinearProgress, SelectChangeEvent } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { setModalErrorSnackMessage } from \"../../../../actions\";\nimport {\n  ITierElement,\n  ITierResponse,\n} from \"../../Configurations/TiersConfiguration/types\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport api from \"../../../../common/api\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport {\n  createTenantCommon,\n  formFieldStyles,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { LifecycleConfigIcon } from \"../../../../icons\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  classes: any;\n  bucketName: string;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nexport interface ITiersDropDown {\n  label: string;\n  value: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    dateSelector: {\n      \"& div\": {\n        borderBottom: 0,\n        marginBottom: 0,\n\n        \"& div:nth-child(2)\": {\n          border: \"1px solid #EAEAEA\",\n          paddingLeft: 5,\n\n          \"& div\": {\n            border: 0,\n          },\n        },\n      },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...formFieldStyles,\n    ...createTenantCommon,\n  });\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  classes,\n  bucketName,\n  setModalErrorSnackMessage,\n}: IReplicationModal) => {\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"\");\n  const [ilmType, setIlmType] = useState<string>(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api\n        .invoke(\"GET\", `/api/v1/admin/tiers`)\n        .then((res: ITierResponse) => {\n          const tiersList: ITierElement[] | null = get(res, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: ITierElement) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    let markerOn = false;\n\n    if (ilmType === \"expiry\") {\n      let expiry = {\n        expiry_days: parseInt(expiryDays),\n      };\n\n      if (parseInt(expiryDays) > 0 && parseInt(NCExpirationDays) > 0) {\n        markerOn = true;\n      }\n\n      rules = {\n        ...expiry,\n        noncurrentversion_expiration_days: parseInt(NCExpirationDays),\n      };\n    } else {\n      let transition = {\n        transition_days: parseInt(transitionDays),\n      };\n\n      if (parseInt(transitionDays) > 0 && parseInt(NCTransitionDays) > 0) {\n        markerOn = true;\n      }\n\n      rules = {\n        ...transition,\n        noncurrentversion_transition_days: parseInt(NCTransitionDays),\n        storage_class: storageClass,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: markerOn,\n      ...rules,\n    };\n\n    api\n      .invoke(\n        \"POST\",\n        `/api/v1/buckets/${bucketName}/lifecycle`,\n        lifecycleInsert\n      )\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container className={classes.loadingBox}>\n          <Grid item xs={12}>\n            <LinearProgress />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12} className={classes.formScrollable}>\n              <Grid item xs={12}>\n                <Grid container>\n                  <Grid item xs={3} textAlign={\"left\"}>\n                    <RadioGroupSelector\n                      currentSelection={ilmType}\n                      id=\"quota_type\"\n                      name=\"quota_type\"\n                      label=\"\"\n                      onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                        setIlmType(e.target.value as string);\n                      }}\n                      selectorOptions={[\n                        { value: \"expiry\", label: \"Expiry\" },\n                        { value: \"transition\", label: \"Transition\" },\n                      ]}\n                    />\n                  </Grid>\n                  <Grid item xs={9} />\n                  {ilmType === \"expiry\" ? (\n                    <Fragment>\n                      <Grid item xs={12} className={classes.formFieldRow}>\n                        <InputBoxWrapper\n                          id=\"expiry_days\"\n                          name=\"expiry_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            if (e.target.validity.valid) {\n                              setExpiryDays(e.target.value);\n                            }\n                          }}\n                          pattern={\"[0-9]*\"}\n                          label=\"Delete Latest Version After\"\n                          value={expiryDays}\n                          overlayObject={\n                            <InputUnitMenu\n                              id={\"expire-current-unit\"}\n                              unitSelected={\"days\"}\n                              unitsList={[{ label: \"Days\", value: \"days\" }]}\n                              disabled={true}\n                            />\n                          }\n                        />\n                      </Grid>\n\n                      <Grid item xs={12} className={classes.formFieldRow}>\n                        <InputBoxWrapper\n                          id=\"noncurrentversion_expiration_days\"\n                          name=\"noncurrentversion_expiration_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            if (e.target.validity.valid) {\n                              setNCExpirationDays(e.target.value);\n                            }\n                          }}\n                          pattern={\"[0-9]*\"}\n                          label=\"Delete Older Versions After\"\n                          value={NCExpirationDays}\n                          min=\"0\"\n                          overlayObject={\n                            <InputUnitMenu\n                              id={\"expire-noncurrent-unit\"}\n                              unitSelected={\"days\"}\n                              unitsList={[{ label: \"Days\", value: \"days\" }]}\n                              disabled={true}\n                            />\n                          }\n                        />\n                      </Grid>\n                    </Fragment>\n                  ) : (\n                    <Fragment>\n                      <Grid item xs={12} className={classes.formFieldRow}>\n                        <SelectWrapper\n                          label=\"Tier\"\n                          id=\"storage_class\"\n                          name=\"storage_class\"\n                          value={storageClass}\n                          onChange={(e: SelectChangeEvent<string>) => {\n                            setStorageClass(e.target.value as string);\n                          }}\n                          options={tiersList}\n                        />\n                      </Grid>\n                      <Grid item xs={12} className={classes.formFieldRow}>\n                        <InputBoxWrapper\n                          id=\"transition_days\"\n                          name=\"transition_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            if (e.target.validity.valid) {\n                              setTransitionDays(e.target.value);\n                            }\n                          }}\n                          pattern={\"[0-9]*\"}\n                          label=\"Transition Latest Version\"\n                          value={transitionDays}\n                          min=\"0\"\n                          overlayObject={\n                            <InputUnitMenu\n                              id={\"transition-current-unit\"}\n                              unitSelected={\"days\"}\n                              unitsList={[{ label: \"Days\", value: \"days\" }]}\n                              disabled={true}\n                            />\n                          }\n                        />\n                      </Grid>\n                      <Grid item xs={12} className={classes.formFieldRow}>\n                        <InputBoxWrapper\n                          type=\"number\"\n                          id=\"noncurrentversion_transition_days\"\n                          name=\"noncurrentversion_transition_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            if (e.target.validity.valid) {\n                              setNCTransitionDays(e.target.value);\n                            }\n                          }}\n                          label=\"Transition Older Versions\"\n                          value={NCTransitionDays}\n                          pattern={\"[0-9]*\"}\n                          overlayObject={\n                            <InputUnitMenu\n                              id={\"transition-noncurrent-unit\"}\n                              unitSelected={\"days\"}\n                              unitsList={[{ label: \"Days\", value: \"days\" }]}\n                              disabled={true}\n                            />\n                          }\n                        />\n                      </Grid>\n                    </Fragment>\n                  )}\n                </Grid>\n              </Grid>\n              <Grid item xs={12} className={classes.formFieldRow}>\n                <fieldset className={classes.fieldGroup}>\n                  <legend className={classes.descriptionText}>Filters</legend>\n\n                  <Grid item xs={12}>\n                    <InputBoxWrapper\n                      id=\"prefix\"\n                      name=\"prefix\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setPrefix(e.target.value);\n                      }}\n                      label=\"Prefix\"\n                      value={prefix}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <QueryMultiSelector\n                      name=\"tags\"\n                      label=\"Tags\"\n                      elements={\"\"}\n                      onChange={(vl: string) => {\n                        setTags(vl);\n                      }}\n                      keyPlaceholder=\"Tag Key\"\n                      valuePlaceholder=\"Tag Value\"\n                      withBorder\n                    />\n                  </Grid>\n                </fieldset>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.modalButtonBar}>\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n              >\n                Save\n              </Button>\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <LinearProgress />\n              </Grid>\n            )}\n          </Grid>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nconst connector = connect(null, {\n  setModalErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(AddLifecycleModal));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ConfirmDeleteIcon } from \"../../../../icons\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport api from \"../../../../common/api\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n  });\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n  setErrorSnackMessage,\n}: IDeleteLifecycleRule) => {\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api\n        .invoke(\"DELETE\", `/api/v1/buckets/${bucket}/lifecycle/${id}`)\n        .then((res) => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setDeletingRule(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, setErrorSnackMessage]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <DialogContentText>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(DeleteBucketLifecycleRule));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport get from \"lodash/get\";\nimport * as reactMoment from \"react-moment\";\nimport Grid from \"@mui/material/Grid\";\nimport { BucketInfo, LifeCycleItem } from \"../types\";\nimport { AddIcon, TiersIcon } from \"../../../../icons\";\nimport {\n  actionsTray,\n  searchField,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { AppState } from \"../../../../store\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TableWrapper from \"../../Common/TableWrapper/TableWrapper\";\nimport HelpBox from \"../../../../common/HelpBox\";\nimport PanelTitle from \"../../Common/PanelTitle/PanelTitle\";\nimport {\n  SecureComponent,\n  hasPermission,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport RBIconButton from \"./SummaryItems/RBIconButton\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...searchField,\n    ...actionsTray,\n    twHeight: {\n      minHeight: 400,\n    },\n  });\n\ninterface IBucketLifecyclePanelProps {\n  classes: any;\n  match: any;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  loadingBucket: boolean;\n  bucketInfo: BucketInfo | null;\n}\n\nconst BucketLifecyclePanel = ({\n  classes,\n  match,\n  setErrorSnackMessage,\n  loadingBucket,\n  bucketInfo,\n}: IBucketLifecyclePanelProps) => {\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<LifeCycleItem[]>([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n\n  const bucketName = match.params[\"bucketName\"];\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api\n          .invoke(\"GET\", `/api/v1/buckets/${bucketName}/lifecycle`)\n          .then((res: any) => {\n            const records = get(res, \"lifecycle\", []);\n\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err: ErrorResponseHandler) => {\n            console.error(err);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const expirationRender = (expiration: any) => {\n    if (expiration.days) {\n      return `${expiration.days} day${expiration.days > 1 ? \"s\" : \"\"}`;\n    }\n\n    if (expiration.date === \"0001-01-01T00:00:00Z\") {\n      return \"\";\n    }\n\n    return <reactMoment.default>{expiration.date}</reactMoment.default>;\n  };\n\n  const transitionRender = (transition: any) => {\n    if (transition.days) {\n      return `${transition.days} day${transition.days > 1 ? \"s\" : \"\"}`;\n    }\n\n    if (transition.date === \"0001-01-01T00:00:00Z\") {\n      return \"\";\n    }\n\n    return <reactMoment.default>{transition.date}</reactMoment.default>;\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    const stClass = get(objectST, \"transition.storage_class\", \"\");\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    { label: \"ID\", elementKey: \"id\" },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n    {\n      label: \"Expiration\",\n      elementKey: \"expiration\",\n      renderFunction: expirationRender,\n    },\n    {\n      label: \"Transition\",\n      elementKey: \"transition\",\n      renderFunction: transitionRender,\n    },\n    {\n      label: \"Storage Class\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycle={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <Grid container>\n        <Grid item xs={12} className={classes.actionsTray}>\n          <PanelTitle>Lifecycle Rules</PanelTitle>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.ADMIN_LIST_TIERS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <RBIconButton\n              tooltip={\"Add Lifecycle Rule\"}\n              onClick={() => {\n                setAddLifecycleOpen(true);\n              }}\n              text={\"Add Lifecycle Rule\"}\n              icon={<AddIcon />}\n              color=\"primary\"\n              variant={\"contained\"}\n            />\n          </SecureComponent>\n        </Grid>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <TableWrapper\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={classes.twHeight}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n              \n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  session: state.console.session,\n  loadingBucket: state.buckets.bucketDetails.loadingBucket,\n  bucketInfo: state.buckets.bucketDetails.bucketInfo,\n});\n\nconst connector = connect(mapState, {\n  setErrorSnackMessage,\n});\n\nexport default withStyles(styles)(connector(BucketLifecyclePanel));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { selectorTypes } from \"../SelectWrapper/SelectWrapper\";\nimport { Menu, MenuItem } from \"@mui/material\";\n\ninterface IInputUnitBox {\n  classes: any;\n  id: string;\n  unitSelected: string;\n  unitsList: selectorTypes[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonTrigger: {\n      border: \"#F0F2F2 1px solid\",\n      borderRadius: 3,\n      color: \"#838383\",\n      backgroundColor: \"#fff\",\n      fontSize: 12,\n    },\n  });\n\nconst InputUnitMenu = ({\n  classes,\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        className={classes.buttonTrigger}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </button>\n      <Menu\n        id={`${id}-menu`}\n        aria-labelledby={`${id}-button`}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={() => {\n          handleClose(\"\");\n        }}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        {unitsList.map((unit) => (\n          <MenuItem\n            onClick={() => handleClose(unit.value)}\n            key={`itemUnit-${unit.value}-${unit.label}`}\n          >\n            {unit.label}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputUnitMenu);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs className={classes.radioOptionsLayout}>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      \"& span\": {\n        fontWeight: \"normal\",\n      },\n    },\n    fieldContainer: {\n      display: \"flex\",\n      \"@media (max-width: 600px)\": {\n        flexFlow: \"column\",\n      },\n    },\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n          id={\"confirm-cancel\"}\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          id={\"confirm-ok\"}\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { IconButtonProps } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      fontSize: \".9rem\",\n    },\n  });\n\ninterface IPanelTitle extends IconButtonProps {\n  classes: any;\n  children: any;\n}\n\nconst PanelTitle = ({ classes, children }: IPanelTitle) => {\n  return <h1 className={classes.root}>{children}</h1>;\n};\n\nexport default withStyles(styles)(PanelTitle);\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${theme.palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: theme.palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: theme.palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    disableGutters\n  };\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["mapDispatchToProps","setModalErrorSnackMessage","connector","connect","withStyles","theme","createStyles","dateSelector","borderBottom","marginBottom","border","paddingLeft","spacingUtils","modalStyleUtils","formFieldStyles","createTenantCommon","classes","closeModalAndRefresh","selectedBucket","lifecycle","open","useState","loadingTiers","setLoadingTiers","addLoading","setAddLoading","tags","setTags","enabled","setEnabled","tiersList","setTiersList","prefix","setPrefix","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","useEffect","api","then","res","get","length","objList","map","tier","tierType","type","value","label","catch","err","valid","status","transitionMode","transition","days","toString","date","expiration","storage_class","noncurrent_transition_days","noncurrent_storage_class","noncurrent_expiration_days","delete_marker","tgs","reduce","stringLab","currItem","index","key","ModalWrapper","onClose","modalOpen","title","titleIcon","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","expiry","expiry_days","parseInt","noncurrentversion_expiration_days","transition_days","noncurrentversion_transition_days","noncurrentversion_transition_storage_class","lifecycleUpdate","disable","expired_object_delete_marker","id","saveRecord","Grid","container","item","xs","className","formScrollable","formFieldRow","InputBoxWrapper","name","onChange","disabled","FormSwitchWrapper","indicatorLabels","checked","target","fieldGroup","descriptionText","RadioGroupSelector","currentSelection","selectorOptions","disableOptions","Fragment","min","placeholder","SelectWrapper","options","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","modalButtonBar","Button","variant","color","onClick","LinearProgress","bucketName","loadingBox","markerOn","lifecycleInsert","addRecord","textAlign","validity","pattern","overlayObject","InputUnitMenu","unitSelected","unitsList","setErrorSnackMessage","modalBasic","onCloseAndRefresh","deleteOpen","bucket","deletingRule","setDeletingRule","ConfirmDialog","confirmText","isOpen","isLoading","onConfirm","confirmationContent","DialogContentText","state","session","console","loadingBucket","buckets","bucketDetails","bucketInfo","searchField","actionsTray","twHeight","minHeight","match","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","params","displayLifeCycleRules","hasPermission","IAM_SCOPES","records","error","lifecycleColumns","elementKey","renderFunction","objectST","renderFullObject","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","refresh","PanelTitle","SecureComponent","scopes","resource","matchAll","errorProps","RBIconButton","tooltip","text","icon","TableWrapper","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","iconComponent","help","buttonTrigger","borderRadius","backgroundColor","fontSize","onUnitChange","React","anchorEl","setAnchorEl","Boolean","handleClose","newUnit","undefined","currentTarget","anchorOrigin","vertical","horizontal","transformOrigin","unit","radioStyles","makeStyles","root","radioIcons","RadioButton","props","disableRipple","checkedIcon","radioSelectedIcon","radioUnselectedIcon","fieldBasic","tooltipHelper","optionLabel","marginRight","checkedOption","fontWeight","displayInColumn","alignItems","htmlFor","inputLabel","tooltipContainer","placement","radioOptionsLayout","row","style","display","selectorOption","control","clsx","SelectStyled","height","lineHeight","marginTop","spacing","input","position","padding","borderColor","InputBase","fieldContainer","flexFlow","fullWidth","option","deleteDialogStyles","onCancel","cancelText","confirmButtonProps","cancelButtonProps","reason","sx","titleText","closeContainer","closeButton","size","content","actions","cancelButton","confirmButton","loading","loadingPosition","startIcon","autoFocus","margin","children","getDividerUtilityClass","slot","generateUtilityClass","dividerClasses","generateUtilityClasses","getMenuItemUtilityClass","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","dense","divider","disableGutters","gutters","_extends","typography","body1","justifyContent","textDecoration","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingRight","palette","backgroundClip","action","hover","menuItemClasses","alpha","primary","main","selectedOpacity","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","inProps","ref","useThemeProps","component","focusVisibleClassName","role","tabIndexProp","tabIndex","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","selected","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","_jsx","focusVisible"],"sourceRoot":""}
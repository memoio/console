{"version":3,"file":"static/js/9645.544a6ec7.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Policies/AddPolicy.tsx","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport \"codemirror/theme/dracula.css\";\n/** Code mirror */\nimport CodeMirror, { Extension } from \"@uiw/react-codemirror\";\nimport { StreamLanguage } from \"@codemirror/stream-parser\";\nimport { json } from \"@codemirror/lang-json\";\nimport { yaml } from \"@codemirror/legacy-modes/mode/yaml\";\n\n/** Code mirror */\nimport { Box, InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport { fieldBasic } from \"../common/styleLibrary\";\nimport { CopyIcon, EditorThemeSwitchIcon } from \"../../../../../icons\";\nimport RBIconButton from \"../../../Buckets/BucketDetails/SummaryItems/RBIconButton\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { EditorView } from \"@codemirror/view\";\n\ninterface ICodeWrapper {\n  value: string;\n  label?: string;\n  mode?: string;\n  tooltip?: string;\n  classes: any;\n  onChange?: (editor: any, data: any, value: string) => any;\n  onBeforeChange: (editor: any, data: any, value: string) => any;\n  readOnly?: boolean;\n  editorHeight?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst langHighlight: Record<string, any> = {\n  json,\n  yaml: () => StreamLanguage.define(yaml),\n};\n\nconst lightTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#FBFAFA\",\n    },\n    \".cm-content\": {\n      caretColor: \"#05122B\",\n    },\n    \"&.cm-focused .cm-cursor\": {\n      borderLeftColor: \"#05122B\",\n    },\n    \".cm-gutters\": {\n      backgroundColor: \"#FBFAFA\",\n      color: \"#000000\",\n      border: \"none\",\n    },\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      color: \"#2781B0\",\n      \"& .ͼc\": {\n        color: \"#C83B51\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#dde1f1\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#05122B\",\n      color: \"#ffffff\",\n    },\n    \".cm-selectionMatch\": {\n      backgroundColor: \"#ebe7f1\",\n    },\n    \".cm-selectionLayer\": {\n      fontWeight: 500,\n    },\n    \" .cm-selectionBackground\": {\n      backgroundColor: \"#a180c7\",\n      color: \"#ffffff\",\n    },\n  },\n  {\n    dark: false,\n  }\n);\n\nconst darkTheme = EditorView.theme(\n  {\n    \"&\": {\n      backgroundColor: \"#282a36\",\n      color: \"#ffb86c\",\n    },\n\n    \".cm-gutter.cm-foldGutter\": {\n      borderRight: \"1px solid #eaeaea\",\n    },\n    \".cm-gutterElement\": {\n      fontSize: \"13px\",\n    },\n    \".cm-line\": {\n      fontSize: \"13px\",\n      \"& .ͼd, & .ͼc\": {\n        color: \"#8e6cef\",\n      },\n    },\n    \"& .ͼb\": {\n      color: \"#2781B0\",\n    },\n    \".cm-activeLine\": {\n      backgroundColor: \"#44475a\",\n    },\n    \".cm-matchingBracket\": {\n      backgroundColor: \"#842de5\",\n      color: \"#ff79c6\",\n    },\n    \".cm-selectionLayer .cm-selectionBackground\": {\n      backgroundColor: \"green\",\n    },\n  },\n  {\n    dark: true,\n  }\n);\n\nconst CodeMirrorWrapper = ({\n  value,\n  label = \"\",\n  tooltip = \"\",\n  mode = \"json\",\n  classes,\n  onBeforeChange,\n  readOnly = false,\n  editorHeight = \"250px\",\n}: ICodeWrapper) => {\n  const [isDarkTheme, setIsDarkTheme] = useState<boolean>(false);\n\n  //based on the language mode pick . default to json\n  let extensionList: Extension[] = [];\n  if (langHighlight[mode]) {\n    extensionList = [...extensionList, langHighlight[mode]()];\n  }\n\n  return (\n    <React.Fragment>\n      <InputLabel className={classes.inputLabel}>\n        <span>{label}</span>\n        {tooltip !== \"\" && (\n          <div className={classes.tooltipContainer}>\n            <Tooltip title={tooltip} placement=\"top-start\">\n              <div className={classes.tooltip}>\n                <HelpIcon />\n              </div>\n            </Tooltip>\n          </div>\n        )}\n      </InputLabel>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n\n      <Grid\n        item\n        xs={12}\n        sx={{\n          border: \"1px solid #eaeaea\",\n        }}\n      >\n        <Grid item xs={12}>\n          <CodeMirror\n            value={value}\n            theme={isDarkTheme ? darkTheme : lightTheme}\n            extensions={extensionList}\n            editable={!readOnly}\n            basicSetup={true}\n            height={editorHeight}\n            onChange={(v: string, vu: any) => {\n              onBeforeChange(null, null, v);\n            }}\n          />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          sx={{\n            borderTop: \"1px solid #eaeaea\",\n            background: isDarkTheme ? \"#282c34\" : \"#f7f7f7\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              padding: \"2px\",\n              paddingRight: \"5px\",\n              justifyContent: \"flex-end\",\n              \"& button\": {\n                height: \"26px\",\n                width: \"26px\",\n                padding: \"2px\",\n                \" .min-icon\": {\n                  marginLeft: \"0\",\n                },\n              },\n            }}\n          >\n            <RBIconButton\n              tooltip={\"Change theme\"}\n              onClick={() => {\n                setIsDarkTheme(!isDarkTheme);\n              }}\n              text={\"\"}\n              icon={<EditorThemeSwitchIcon />}\n              color={\"primary\"}\n              variant={\"outlined\"}\n            />\n            <CopyToClipboard text={value}>\n              <RBIconButton\n                tooltip={\"Copy to Clipboard\"}\n                onClick={() => {}}\n                text={\"\"}\n                icon={<CopyIcon />}\n                color={\"primary\"}\n                variant={\"outlined\"}\n              />\n            </CopyToClipboard>\n          </Box>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CodeMirrorWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyPress?: (e: any) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayId?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n  pattern?: string;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      fontWeight: \"normal\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayId,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  pattern = \"\",\n  autoFocus = false,\n  classes,\n  className = \"\",\n  onKeyPress,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  if (pattern !== \"\") {\n    inputProps[\"pattern\"] = pattern;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={clsx(\n          className !== \"\" ? className : \"\",\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        )}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            autoFocus={autoFocus}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n            onKeyPress={onKeyPress}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                id={overlayId}\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport { Dialog, DialogContent, DialogTitle } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  deleteDialogStyles,\n  snackBarCommon,\n} from \"../FormComponents/common/styleLibrary\";\nimport { AppState } from \"../../../../store\";\nimport { snackBarMessage } from \"../../../../types\";\nimport { setModalSnackMessage } from \"../../../../actions\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  classes: any;\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  modalSnackMessage?: snackBarMessage;\n  noContentPadding?: boolean;\n  setModalSnackMessage: typeof setModalSnackMessage;\n  titleIcon?: React.ReactNode;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n    content: {\n      padding: 25,\n      paddingBottom: 0,\n    },\n    customDialogSize: {\n      width: \"100%\",\n      maxWidth: 765,\n    },\n    ...snackBarCommon,\n  });\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  classes,\n  wideLimit = true,\n  modalSnackMessage,\n  noContentPadding,\n  setModalSnackMessage,\n  titleIcon = null,\n}: IModalProps) => {\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  useEffect(() => {\n    setModalSnackMessage(\"\");\n  }, [setModalSnackMessage]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    setModalSnackMessage(\"\");\n  };\n\n  const customSize = wideLimit\n    ? {\n        classes: {\n          paper: classes.customDialogSize,\n        },\n      }\n    : { maxWidth: \"lg\" as const, fullWidth: true };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (\n      modalSnackMessage.detailedErrorMsg === \"\" ||\n      modalSnackMessage.detailedErrorMsg.length < 5\n    ) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <Dialog\n      open={modalOpen}\n      classes={classes}\n      {...customSize}\n      scroll={\"paper\"}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            id={\"close\"}\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <MainError isModal={true} />\n      <Snackbar\n        open={openSnackbar}\n        className={classes.snackBarModal}\n        onClose={() => {\n          closeSnackBar();\n        }}\n        message={message}\n        ContentProps={{\n          className: `${classes.snackBar} ${\n            modalSnackMessage && modalSnackMessage.type === \"error\"\n              ? classes.errorSnackBar\n              : \"\"\n          }`,\n        }}\n        autoHideDuration={\n          modalSnackMessage && modalSnackMessage.type === \"error\" ? 10000 : 5000\n        }\n      />\n      <DialogContent className={noContentPadding ? \"\" : classes.content}>\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  modalSnackMessage: state.system.modalSnackBar,\n});\n\nconst connector = connect(mapState, {\n  setModalSnackMessage,\n});\n\nexport default withStyles(styles)(connector(ModalWrapper));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport { Button, LinearProgress } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport api from \"../../../common/api\";\nimport { Policy } from \"./types\";\nimport { setModalErrorSnackMessage } from \"../../../actions\";\nimport {\n  fieldBasic,\n  modalStyleUtils,\n  spacingUtils,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ModalWrapper from \"../Common/ModalWrapper/ModalWrapper\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport CodeMirrorWrapper from \"../Common/FormComponents/CodeMirrorWrapper/CodeMirrorWrapper\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    codeMirrorContainer: {\n      marginBottom: 20,\n      marginTop: 20,\n      \"& label\": {\n        marginBottom: \".5rem\",\n      },\n      \"& label + div\": {\n        display: \"none\",\n      },\n    },\n    ...spacingUtils,\n    ...modalStyleUtils,\n    ...fieldBasic,\n  });\n\ninterface IAddPolicyProps {\n  classes: any;\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => void;\n  policyEdit: Policy;\n  setModalErrorSnackMessage: typeof setModalErrorSnackMessage;\n}\n\nconst AddPolicy = ({\n  classes,\n  open,\n  closeModalAndRefresh,\n  policyEdit,\n  setModalErrorSnackMessage,\n}: IAddPolicyProps) => {\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [policyName, setPolicyName] = useState<string>(\"\");\n  const [policyDefinition, setPolicyDefinition] = useState<string>(\"\");\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    api\n      .invoke(\"POST\", \"/api/v1/policies\", {\n        name: policyName,\n        policy: policyDefinition,\n      })\n      .then((res) => {\n        setAddLoading(false);\n\n        closeModalAndRefresh(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setAddLoading(false);\n        setModalErrorSnackMessage(err);\n      });\n  };\n\n  useEffect(() => {\n    if (policyEdit) {\n      setPolicyName(policyEdit.name);\n      setPolicyDefinition(\n        policyEdit ? JSON.stringify(JSON.parse(policyEdit.policy), null, 4) : \"\"\n      );\n    }\n  }, [policyEdit]);\n\n  const resetForm = () => {\n    setPolicyName(\"\");\n    setPolicyDefinition(\"\");\n  };\n\n  const validSave = policyName.trim() !== \"\";\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title={`${policyEdit ? \"Info\" : \"Create\"} Policy`}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          addRecord(e);\n        }}\n      >\n        <Grid container>\n          <Grid item xs={12} className={classes.modalFormScrollable}>\n            <Grid item xs={12} className={classes.formFieldRow}>\n              <InputBoxWrapper\n                id=\"policy-name\"\n                name=\"policy-name\"\n                label=\"Policy Name\"\n                placeholder=\"Enter Policy Name\"\n                autoFocus={true}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPolicyName(e.target.value);\n                }}\n                value={policyName}\n                disabled={!!policyEdit}\n              />\n            </Grid>\n\n            <Grid item xs={12} className={classes.codeMirrorContainer}>\n              <CodeMirrorWrapper\n                label={`${policyEdit ? \"Edit\" : \"Write\"} Policy`}\n                value={policyDefinition}\n                onBeforeChange={(editor, data, value) => {\n                  setPolicyDefinition(value);\n                }}\n                editorHeight={\"350px\"}\n              />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} className={classes.modalButtonBar}>\n            {!policyEdit && (\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={resetForm}\n              >\n                Clear\n              </Button>\n            )}\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={addLoading || !validSave}\n            >\n              Save\n            </Button>\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <LinearProgress />\n            </Grid>\n          )}\n        </Grid>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nconst mapDispatchToProps = {\n  setModalErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddPolicy));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;"],"names":["langHighlight","json","yaml","StreamLanguage","lightTheme","EditorView","backgroundColor","caretColor","borderLeftColor","color","border","borderRight","fontSize","fontWeight","dark","darkTheme","withStyles","theme","createStyles","fieldBasic","inputLabel","value","label","tooltip","mode","classes","onBeforeChange","readOnly","editorHeight","useState","isDarkTheme","setIsDarkTheme","extensionList","className","tooltipContainer","title","placement","item","xs","sx","extensions","editable","basicSetup","height","onChange","v","vu","borderTop","background","display","alignItems","padding","paddingRight","justifyContent","width","marginLeft","onClick","text","icon","variant","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","tooltipHelper","textBoxContainer","flexGrow","position","overlayAction","right","top","maxWidth","maxHeight","id","name","type","autoComplete","disabled","multiline","index","error","required","placeholder","min","max","overlayId","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","pattern","autoFocus","onKeyPress","inputProps","container","clsx","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","fullWidth","helperText","inputRebase","size","disableFocusRipple","disableRipple","disableTouchRipple","connector","connect","state","modalSnackMessage","system","modalSnackBar","setModalSnackMessage","deleteDialogStyles","content","paddingBottom","customDialogSize","snackBarCommon","onClose","modalOpen","children","wideLimit","noContentPadding","titleIcon","openSnackbar","setOpenSnackbar","useEffect","message","customSize","paper","detailedErrorMsg","length","open","scroll","event","reason","root","titleText","closeContainer","closeButton","isModal","snackBarModal","ContentProps","snackBar","errorSnackBar","autoHideDuration","mapDispatchToProps","setModalErrorSnackMessage","buttonContainer","textAlign","codeMirrorContainer","marginBottom","marginTop","spacingUtils","modalStyleUtils","closeModalAndRefresh","policyEdit","addLoading","setAddLoading","policyName","setPolicyName","policyDefinition","setPolicyDefinition","JSON","stringify","parse","policy","validSave","trim","noValidate","onSubmit","e","preventDefault","api","then","res","catch","err","modalFormScrollable","formFieldRow","target","editor","data","modalButtonBar","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
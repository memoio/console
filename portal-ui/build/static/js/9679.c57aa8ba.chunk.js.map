{"version":3,"file":"static/js/9679.c57aa8ba.chunk.js","mappings":"2NA+FMA,GAAYC,EAAAA,EAAAA,IAAQ,KAAM,CAC9BC,qBAAAA,EAAAA,KAGF,UAAeF,GAlEe,SAAC,GAMD,IAL5BG,EAK2B,EAL3BA,+BACAC,EAI2B,EAJ3BA,UACAC,EAG2B,EAH3BA,eACAC,EAE2B,EAF3BA,uBACAJ,EAC2B,EAD3BA,qBAEA,GAAkDK,EAAAA,EAAAA,WAAkB,GAApE,eAAOC,EAAP,KAA0BC,EAA1B,KAsBA,OACE,SAAC,IAAD,CACEC,MAAK,uBACLC,YAAaL,EAAyB,UAAY,SAClDM,OAAQR,EACRS,UAAWL,EACXM,WAAW,SAAC,KAAD,IACXC,UA3BqB,WACnBP,IAGJC,GAAqB,GAErBO,EAAAA,EAAAA,OACU,MADV,0BACoCX,EADpC,eACiE,CAC7DY,YAAaX,IAEdY,MAAK,WACJT,GAAqB,GACrBN,GAA+B,MAEhCgB,OAAM,SAACC,GACNX,GAAqB,GACrBP,EAAqBkB,QAYvBC,mBAAoB,CAClBC,MAAO,UACPC,QAAS,aAEXC,QAAS,WACPrB,GAA+B,IAEjCsB,qBACE,UAAC,IAAD,CAAmBC,GAAG,2BAAtB,qCAC2B,KACzB,4BAASpB,EAAyB,UAAY,WAAmB,IAFnE,8BAIGA,IACC,UAAC,EAAAqB,SAAD,YACE,mBACA,mBACA,0F,iLCqCd,KAAeC,EAAAA,EAAAA,IA1GA,SAACC,GAAD,OACbC,EAAAA,EAAAA,IAAa,UACRC,EAAAA,OAwGP,EArFsB,SAAC,GAcI,IAAD,IAbxBnB,OAAAA,OAawB,SAZxBY,EAYwB,EAZxBA,QACAQ,EAWwB,EAXxBA,SACAjB,EAUwB,EAVxBA,UAUwB,IATxBkB,QAAAA,OASwB,MATd,GASc,MARxBvB,MAAAA,OAQwB,MARhB,GAQgB,EAPxBG,EAOwB,EAPxBA,UACAY,EAMwB,EANxBA,oBAMwB,IALxBS,WAAAA,OAKwB,MALX,SAKW,MAJxBvB,YAAAA,OAIwB,MAJV,UAIU,MAHxBU,mBAAAA,OAGwB,MAHH,GAGG,MAFxBc,kBAAAA,OAEwB,MAFJ,GAEI,MADxBrB,UAAAA,OACwB,MADZ,KACY,EACxB,OACE,UAAC,IAAD,CACEsB,KAAMxB,EACNY,QAAS,SAACa,EAAOC,GACA,kBAAXA,GACFd,KAGJe,UAAWN,EAAQO,KACnBC,GAAI,CACF,mBAAoB,CAClBC,QAAS,wBAVf,WAcE,UAAC,IAAD,CAAaH,UAAWN,EAAQvB,MAAhC,WACE,iBAAK6B,UAAWN,EAAQU,UAAxB,UACG7B,EADH,IACeJ,MAEf,gBAAK6B,UAAWN,EAAQW,eAAxB,UACE,SAAC,IAAD,CACE,aAAW,QACXL,UAAWN,EAAQY,YACnBC,QAAStB,EACTuB,eAAa,EACbC,KAAK,QALP,UAOE,SAAC,IAAD,YAKN,SAAC,IAAD,CAAeT,UAAWN,EAAQgB,QAAlC,SACGxB,KAEH,UAAC,IAAD,CAAec,UAAWN,EAAQiB,QAAlC,WACE,SAAC,KAAD,gBACEX,UAAWN,EAAQkB,aACnBL,QAASd,GAAYR,EACrB4B,SAAUvC,EACVwC,KAAK,UACDlB,GALN,IAMEZ,QAAQ,WACRD,MAAM,UACNI,GAAI,iBARN,SAUGQ,MAGH,SAAC,KAAD,gBACEK,UAAWN,EAAQqB,cACnBD,KAAK,SACLP,QAAS/B,EACTwC,QAAS1C,EACTuC,SAAUvC,EACVU,QAAQ,WACRD,MAAM,YACNkC,gBAAgB,QAChBC,WAAW,SAAC,WAAD,IACXC,WAAS,EACThC,GAAI,cACAL,GAZN,aAcGV,e,0BClHPgD,EAAyBC,EAAQ,OAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAEhDG,EAAcH,EAAQ,OAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,0GACD,SAEJN,EAAQ,EAAUG","sources":["screens/Console/Buckets/BucketDetails/EnableVersioningModal.tsx","screens/Console/Common/ModalWrapper/ConfirmDialog.tsx","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { DialogContentText } from \"@mui/material\";\nimport api from \"../../../../common/api\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\nimport { ConfirmModalIcon } from \"../../../../icons\";\n\ninterface IVersioningEventProps {\n  closeVersioningModalAndRefresh: (refresh: boolean) => void;\n  modalOpen: boolean;\n  selectedBucket: string;\n  versioningCurrentState: boolean;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n}\n\nconst EnableVersioningModal = ({\n  closeVersioningModalAndRefresh,\n  modalOpen,\n  selectedBucket,\n  versioningCurrentState,\n  setErrorSnackMessage,\n}: IVersioningEventProps) => {\n  const [versioningLoading, setVersioningLoading] = useState<boolean>(false);\n\n  const enableVersioning = () => {\n    if (versioningLoading) {\n      return;\n    }\n    setVersioningLoading(true);\n\n    api\n      .invoke(\"PUT\", `/api/v1/buckets/${selectedBucket}/versioning`, {\n        versioning: !versioningCurrentState,\n      })\n      .then(() => {\n        setVersioningLoading(false);\n        closeVersioningModalAndRefresh(true);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setVersioningLoading(false);\n        setErrorSnackMessage(err);\n      });\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Versioning on Bucket`}\n      confirmText={versioningCurrentState ? \"Disable\" : \"Enable\"}\n      isOpen={modalOpen}\n      isLoading={versioningLoading}\n      titleIcon={<ConfirmModalIcon />}\n      onConfirm={enableVersioning}\n      confirmButtonProps={{\n        color: \"primary\",\n        variant: \"contained\",\n      }}\n      onClose={() => {\n        closeVersioningModalAndRefresh(false);\n      }}\n      confirmationContent={\n        <DialogContentText id=\"alert-dialog-description\">\n          Are you sure you want to{\" \"}\n          <strong>{versioningCurrentState ? \"disable\" : \"enable\"}</strong>{\" \"}\n          versioning for this bucket?\n          {versioningCurrentState && (\n            <Fragment>\n              <br />\n              <br />\n              <strong>File versions won't be automatically deleted.</strong>\n            </Fragment>\n          )}\n        </DialogContentText>\n      }\n    />\n  );\n};\n\nconst connector = connect(null, {\n  setErrorSnackMessage,\n});\n\nexport default connector(EnableVersioningModal);\n","import React from \"react\";\nimport {\n  Button,\n  ButtonProps,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { deleteDialogStyles } from \"../FormComponents/common/styleLibrary\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...deleteDialogStyles,\n  });\n\ntype ConfirmDialogProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n  onCancel?: () => void;\n  onConfirm: () => void;\n  classes?: any;\n  title: string;\n  isLoading?: boolean;\n  confirmationContent: React.ReactNode | React.ReactNode[];\n  cancelText?: string;\n  confirmText?: string;\n  confirmButtonProps?: Partial<ButtonProps>;\n  cancelButtonProps?: Partial<ButtonProps>;\n  titleIcon?: React.ReactNode;\n};\n\nconst ConfirmDialog = ({\n  isOpen = false,\n  onClose,\n  onCancel,\n  onConfirm,\n  classes = {},\n  title = \"\",\n  isLoading,\n  confirmationContent,\n  cancelText = \"Cancel\",\n  confirmText = \"Confirm\",\n  confirmButtonProps = {},\n  cancelButtonProps = {},\n  titleIcon = null,\n}: ConfirmDialogProps) => {\n  return (\n    <Dialog\n      open={isOpen}\n      onClose={(event, reason) => {\n        if (reason !== \"backdropClick\") {\n          onClose(); // close on Esc but not on click outside\n        }\n      }}\n      className={classes.root}\n      sx={{\n        \"& .MuiPaper-root\": {\n          padding: \"1rem 2rem 2rem 1rem\",\n        },\n      }}\n    >\n      <DialogTitle className={classes.title}>\n        <div className={classes.titleText}>\n          {titleIcon} {title}\n        </div>\n        <div className={classes.closeContainer}>\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}\n            disableRipple\n            size=\"small\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </DialogTitle>\n\n      <DialogContent className={classes.content}>\n        {confirmationContent}\n      </DialogContent>\n      <DialogActions className={classes.actions}>\n        <Button\n          className={classes.cancelButton}\n          onClick={onCancel || onClose}\n          disabled={isLoading}\n          type=\"button\"\n          {...cancelButtonProps}\n          variant=\"outlined\"\n          color=\"primary\"\n          id={\"confirm-cancel\"}\n        >\n          {cancelText}\n        </Button>\n\n        <LoadingButton\n          className={classes.confirmButton}\n          type=\"button\"\n          onClick={onConfirm}\n          loading={isLoading}\n          disabled={isLoading}\n          variant=\"outlined\"\n          color=\"secondary\"\n          loadingPosition=\"start\"\n          startIcon={<React.Fragment />}\n          autoFocus\n          id={\"confirm-ok\"}\n          {...confirmButtonProps}\n        >\n          {confirmText}\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default withStyles(styles)(ConfirmDialog);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;"],"names":["connector","connect","setErrorSnackMessage","closeVersioningModalAndRefresh","modalOpen","selectedBucket","versioningCurrentState","useState","versioningLoading","setVersioningLoading","title","confirmText","isOpen","isLoading","titleIcon","onConfirm","api","versioning","then","catch","err","confirmButtonProps","color","variant","onClose","confirmationContent","id","Fragment","withStyles","theme","createStyles","deleteDialogStyles","onCancel","classes","cancelText","cancelButtonProps","open","event","reason","className","root","sx","padding","titleText","closeContainer","closeButton","onClick","disableRipple","size","content","actions","cancelButton","disabled","type","confirmButton","loading","loadingPosition","startIcon","autoFocus","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}
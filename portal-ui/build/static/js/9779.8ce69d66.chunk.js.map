{"version":3,"file":"static/js/9779.8ce69d66.chunk.js","mappings":"kJAiCA,IAfA,SACEA,GAEC,IADDC,EACA,uDADsC,KAEtC,SAASC,EAAsBC,GAC7B,OACE,SAAC,EAAAC,SAAD,CAAUH,SAAUA,EAApB,UACE,SAACD,GAAD,UAAsBG,MAK5B,OAAOD,I,4JC0IHG,EAAqB,CACzBC,WAAAA,EAAAA,IAGIC,GAAYC,EAAAA,EAAAA,KAXD,SAACC,GAAD,MAAsB,CACrCC,YAAaD,EAAME,OAAOD,YAC1BE,aAAcH,EAAME,OAAOC,aAC3BC,eAAgBJ,EAAMK,cAAcC,cAAcC,gBAClDC,SAAUR,EAAMS,QAAQC,QAAQF,YAOEZ,GAEpC,IAAeE,GAAUa,EAAAA,EAAAA,IAnIV,SAACC,GAAD,OACbC,EAAAA,EAAAA,GAAa,CACXC,gBAAiB,CACfC,MAAO,OACPC,UAAW,GACXC,QAAS,OACTC,gBAAiB,OACjBC,KAAM,EACNC,UAAW,8BAEbC,MAAO,CACLJ,QAAS,OACTK,eAAgB,aAChBC,WAAY,UAEdC,WAAY,CACVC,MAAO,OACPC,SAAU,GACVC,WAAY,IACZC,WAAY,GACZC,UAAW,GAEbC,UAAW,CACTC,UAAW,SAEbC,KAAM,CACJJ,WAAY,GACZK,KAAMrB,EAAMsB,QAAQC,QAAQC,KAC5B,cAAe,CACbrB,MAAO,MAGXsB,gBAAiB,CACfpB,QAAS,OACTK,eAAgB,SAChBC,WAAY,cAgGOZ,EA5FN,SAAC,GAUA,IATlB2B,EASiB,EATjBA,QACAjB,EAQiB,EARjBA,MACAkB,EAOiB,EAPjBA,QACAtC,EAMiB,EANjBA,YACAE,EAKiB,EALjBA,aACAC,EAIiB,EAJjBA,eACAP,EAGiB,EAHjBA,WACAwC,EAEiB,EAFjBA,gBAGA,OADiB,EADjB7B,SAEagC,SAAS,cACb,SAAC,EAAAC,SAAD,KAGP,UAAC,KAAD,CACEC,WAAS,EACTC,UAAS,UAAKL,EAAQxB,gBAAb,gBACT8B,UAAU,MACVrB,WAAW,SAJb,WAME,UAAC,KAAD,CACEsB,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAIX,EAAkB,EAAI,EAC1BM,UAAWL,EAAQjB,MACnB4B,GAAI,CACFC,WAAY,CAAC,OAAQ,OAAQ,IAAK,MAPtC,WAUIjD,IACA,gBAAK0C,UAAWL,EAAQN,KAAxB,SACG7B,GAAe,SAAC,IAAD,KAAmB,SAAC,IAAD,OAGvC,SAAC,IAAD,CAAYgD,QAAQ,KAAKR,UAAWL,EAAQd,WAA5C,SACGH,OAGJgB,IACC,SAAC,KAAD,CACEQ,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,EACJL,UAAWL,EAAQD,gBACnBY,GAAI,CAAEpB,UAAW,CAAC,OAAQ,OAAQ,IAAK,MANzC,SAQGQ,KAGL,UAAC,KAAD,CACEQ,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAIX,EAAkB,EAAI,EAC1BM,UAAWL,EAAQR,UALrB,UAOGS,GAAWA,EACXnC,GAAkBA,EAAegD,OAAS,IACzC,SAAC,IAAD,CACE3B,MAAM,UACN,aAAW,eACX4B,UAAU,OACVC,QAAS,WACPzD,KAEF0D,GAAG,wBACHC,KAAK,QARP,UAUE,SAAC,KAAD,iB,4ECpINC,GAA4BC,EAAAA,EAAAA,GAChCC,EAAAA,MAAW,kBAAM,6GAYnB,UAT8B,WAC5B,OACE,UAAC,EAAAlB,SAAD,YACE,SAAC,IAAD,CAAYpB,MAAM,4BAClB,SAACoC,EAAD","sources":["screens/Console/Common/Components/withSuspense.tsx","screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/NotificationEndpoints/NotificationEndpoints.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { ComponentType, Suspense, SuspenseProps } from \"react\";\n\nfunction withSuspense<P extends string | number | object>(\n  WrappedComponent: ComponentType<P>,\n  fallback: SuspenseProps[\"fallback\"] = null\n) {\n  function ComponentWithSuspense(props: P) {\n    return (\n      <Suspense fallback={fallback}>\n        <WrappedComponent {...props} />\n      </Suspense>\n    );\n  }\n\n  return ComponentWithSuspense;\n}\n\nexport default withSuspense;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@mui/material/Grid\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { AppState } from \"../../../../store\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { IFileItem } from \"../../ObjectBrowser/reducers\";\nimport { toggleList } from \"../../ObjectBrowser/actions\";\nimport { ObjectManagerIcon } from \"../../../../icons\";\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n  managerObjects?: IFileItem[];\n  toggleList: typeof toggleList;\n  middleComponent?: React.ReactNode;\n  features: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 21,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n    middleComponent: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n  managerObjects,\n  toggleList,\n  middleComponent,\n  features,\n}: IPageHeader) => {\n  if (features.includes(\"hide-menu\")) {\n    return <Fragment />;\n  }\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.label}\n        sx={{\n          paddingTop: [\"15px\", \"15px\", \"0\", \"0\"],\n        }}\n      >\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {middleComponent && (\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={6}\n          className={classes.middleComponent}\n          sx={{ marginTop: [\"10px\", \"10px\", \"0\", \"0\"] }}\n        >\n          {middleComponent}\n        </Grid>\n      )}\n      <Grid\n        item\n        xs={12}\n        sm={12}\n        md={middleComponent ? 3 : 6}\n        className={classes.rightMenu}\n      >\n        {actions && actions}\n        {managerObjects && managerObjects.length > 0 && (\n          <IconButton\n            color=\"primary\"\n            aria-label=\"Refresh List\"\n            component=\"span\"\n            onClick={() => {\n              toggleList();\n            }}\n            id=\"object-manager-toggle\"\n            size=\"large\"\n          >\n            <ObjectManagerIcon />\n          </IconButton>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n  managerObjects: state.objectBrowser.objectManager.objectsToManage,\n  features: state.console.session.features,\n});\n\nconst mapDispatchToProps = {\n  toggleList,\n};\n\nconst connector = connect(mapState, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\n\nimport withSuspense from \"../Common/Components/withSuspense\";\n\nconst ListNotificationEndpoints = withSuspense(\n  React.lazy(() => import(\"./ListNotificationEndpoints\"))\n);\n\nconst NotificationEndpoints = () => {\n  return (\n    <Fragment>\n      <PageHeader label=\"Notification Endpoints\" />\n      <ListNotificationEndpoints />\n    </Fragment>\n  );\n};\n\nexport default NotificationEndpoints;\n"],"names":["WrappedComponent","fallback","ComponentWithSuspense","props","Suspense","mapDispatchToProps","toggleList","connector","connect","state","sidebarOpen","system","operatorMode","managerObjects","objectBrowser","objectManager","objectsToManage","features","console","session","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","middleComponent","classes","actions","includes","Fragment","container","className","direction","item","xs","sm","md","sx","paddingTop","variant","length","component","onClick","id","size","ListNotificationEndpoints","withSuspense","React"],"sourceRoot":""}